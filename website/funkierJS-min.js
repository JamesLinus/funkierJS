!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.funkierJS=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=b.curryWithArity,e=b._curryWithConsistentStyle,f=b.arityOf,g=a("./base"),h=a("./types"),i=h.strictEquals,j=a("./object"),k=(j.callPropWithArity,a("../internalUtilities")),l=k.checkIntegral,m=k.checkPositiveIntegral,n=k.checkArrayLike,o=a("../funcUtils"),p=o.checkFunction,q=a("./pair"),r=q.Pair,s=q.fst,t=q.snd,u=a("./logical"),v=(u.notPred,c(function(a){return a=n(a,{message:"Value must be arrayLike"}),a.length})),w=c(function(a,b){if(b=n(b),a=m(a,{errorMessage:"Index out of bounds"}),a>=b.length)throw new TypeError("Index out of bounds");return b[a]}),x=w(0),y=c(function(a){return w(a.length-1,a)}),z=c(function(a,b){a=m(a,{errorMessage:"Replicate count invalid"});for(var c=[],d=0;a>d;d++)c.push(b);return c}),A=function(a,b,c){return c=c||{},d(a,function(){var a=[].slice.call(arguments),g=a[0];g=e(g,g,f(g));var h=y(a),i=!1,j={};"aMessage"in c&&(j.message=c.aMessage),h=n(h,j);var k=0,l={};"fixedArity"in c?(l.arity=c.fixedArity,k=c.fixedArity):"minimumArity"in c&&(l.arity=c.minimumArity,l.minimum=!0,k=c.minimumArity),"fMessage"in c&&(l.message=c.fMessage),g=p(g,l),"string"==typeof h&&(i=!0,h=h.split(""));var m=d(k,function(){var a=[].slice.call(arguments);return g.apply(null,a)});a[0]=m;var o=b.apply(h,a.slice(0,a.length-1));return"returnSameType"in c&&i&&(o=o.join("")),o})},B=A(2,Array.prototype.map,{minimumArity:1,aMessage:"Value to be mapped over is not an array/string",fMessage:"Mapping function must be a function with arity at least 1"}),C=A(2,Array.prototype.forEach,{minimumArity:1,aMessage:"Value to be iterated over is not an array/string",fMessage:"forEach function must be a function with arity at least 1"}),D=A(2,Array.prototype.filter,{aMessage:"Value to be filtered is not an array/string",fMessage:"Predicate must be a function of arity 1",fixedArity:1,returnSameType:!0}),E=A(3,Array.prototype.reduce,{fixedArity:2,aMessage:"Value to be iterated over is not an array/string",fMessage:"Accumulator must be a function of arity 2"}),F=A(2,Array.prototype.reduce,{fixedArity:2,aMessage:"Value to be iterated over is not an array/string",fMessage:"Accumulator must be a function of arity 2"}),G=A(3,Array.prototype.reduceRight,{fixedArity:2,aMessage:"Value to be iterated over is not an array/string",fMessage:"Accumulator must be a function of arity 2"}),H=A(2,Array.prototype.reduceRight,{fixedArity:2,aMessage:"Value to be iterated over is not an array/string",fMessage:"Accumulator must be a function of arity 2"}),I=A(2,Array.prototype.every,{fixedArity:1,aMessage:"Value to be iterated over is not an array/string",fMessage:"Predicate must be a function of arity 1"}),J=A(2,Array.prototype.some,{fixedArity:1,aMessage:"Value to be iterated over is not an array/string",fMessage:"Predicate must be a function of arity 1"}),K=function(a,b){return b>a?b:a},L=F(K),M=function(a,b){return a>b?b:a},N=F(M),O=function(a,b){if("string"==typeof b)throw new TypeError("sum called on non-array value");return a+b},P=E(O,0),Q=function(a,b){if("string"==typeof b)throw new TypeError("sum called on non-array value");return a*b},R=E(Q,1),S=c(function(a,b){return J(i(a),b)}),T=c(function(a,b){return J(a,b)}),U=c(function(a,b){if(a>b)throw new TypeError("Incorrect bounds for range");for(var c=[],d=a;b>d;d++)c.push(d);return c}),V=c(function(a,b,c){if(b>0&&a>c||0>b&&c>a||0===b&&c!==a)throw new TypeError("Incorrect bounds for range");if(!isFinite(b))throw new TypeError("stride must be finite");for(var d=[],e=a;c>a?c>e:e>c;e+=b)d.push(e);return d}),W=c(function(a,b){a=l(a,"Invalid count for take"),0>a&&(a=0),b=n(b);var c="string"==typeof b;c&&(b=b.split(""));var d=b.slice(0,a);return c&&(d=d.join("")),d}),X=c(function(a,b){a=l(a,"Invalid count for drop"),0>a&&(a=0),b=n(b);var c="string"==typeof b;c&&(b=b.split(""));var d=b.slice(a);return c&&(d=d.join("")),d}),Y=c(function(a){if(0===a.length)throw new TypeError("Cannot take init of empty array/string");return W(v(a)-1,a)}),Z=c(function(a){if(0===a.length)throw new TypeError("Cannot take tail of empty array/string");return X(1,a)}),$=c(function(a){a=n(a);var b=U(0,v(a)+1);return B(function(b){return W(b,a)},b)}),_=c(function(a){a=n(a);var b=U(0,v(a)+1);return B(function(b){return X(b,a)},b)}),aa=c(function(a){return a=n(a),a.slice()}),ba=c(function(a,b,c){return a=m(a,{errorMessage:"Invalid from position for slice"}),b=m(b,{errorMessage:"Invalid to position for slice"}),W(b-a,X(a,c))}),ca=c(function(a,b){a=p(a,{arity:1,message:"Predicate must be a function of arity 1"}),b=n(b,{message:"takeWhile: source is not an array/string"});for(var c=[],d="string"==typeof b,e=b.length,f=!1,g=0;!f&&e>g;g++)a(b[g])?c.push(b[g]):f=!0;return d&&(c=c.join("")),c}),da=c(function(a,b){a=p(a,{arity:1,message:"Predicate must be a function of arity 1"}),b=n(b,{message:"dropWhile: source is not an array/string"});for(var c=(b.length,0);c<b.length&&a(b[c]);)c+=1;return b.slice(c)}),ea=c(function(a,b){return b=n(b),Array.isArray(b)?[a].concat(b):""+a+b}),fa=c(function(a,b){return b=n(b),Array.isArray(b)?b.concat([a]):""+b+a}),ga=c(function(a,b){return a=n(a,{message:"concat: First value is not arrayLike"}),b=n(b,{message:"concat: Second value is not arrayLike"}),typeof a!=typeof b&&(Array.isArray(a)?b=b.split(""):a=a.split("")),a.concat(b)}),ha=c(function(a){return a=n(a),0===a.length}),ia=c(function(a,b){b=n(b,{message:"intersperse: Cannot operate on non-arrayLike value"});var c=!1;"string"==typeof b&&(c=!0,a=""+a);var d=c?"":[];b.length>0&&(d=d.concat(c?b[0]:[b[0]]));for(var e=1,f=b.length;f>e;e++)d=d.concat(c?a+b[e]:[a,b[e]]);return d}),ja=function(a,b){return a.concat(Array.isArray(a)?[b]:b)},ka=c(function(a){return a=n(a),G(ja,Array.isArray(a)?[]:"",a)}),la=c(function(a,b){b=n(b,{message:"occurrences: haystack must be an array/string"});for(var c=[],d=0,e=b.length;e>d;d++)b[d]===a&&c.push(d);return c}),ma=c(function(a,b){b=n(b,{message:"occurrencesWith: haystack must be an array/string"}),a=p(a,{arity:1,message:"Predicate must be a function of arity 1"});for(var c=[],d=0,e=b.length;e>d;d++)a(b[d])&&c.push(d);return c}),na=c(function(a,b,c){b=n(b,{message:"First source value is not an array/string"}),c=n(c,{message:"Second source value is not an array/string"}),a=p(a,{arity:2,minimum:!0,message:"Constructor must be a function with arity at least 2"});for(var d=Math.min(b.length,c.length),e=[],f=0;d>f;f++)e.push(a(b[f],c[f]));return e}),oa=na(r),pa=c(function(a){return a=n(a,{noStrings:!0,message:"Source value is not an array"}),r(B(s,a),B(t,a))}),qa=function(a,b){return-1!==a.indexOf(b)?a:a.concat(Array.isArray(a)?[b]:b)},ra=c(function(a){return a=n(a),E(qa,Array.isArray(a)?[]:"",a)}),sa=c(function(a,b,c){var d=J(g.flip(a)(c),b);return d?b:b.concat(Array.isArray(b)?[c]:c)}),ta=c(function(a,b){b=n(b),a=p(a,{arity:2,message:"Predicate must be a function of arity 2"});var c=sa(a);return E(c,Array.isArray(b)?[]:"",b)}),ua=c(function(a){a=n(a),a=a.slice();var b=!1;return"string"==typeof a&&(b=!0,a=a.split("")),a.sort(),b&&(a=a.join("")),a}),va=A(2,Array.prototype.sort,{fixedArity:2,returnSameType:!0}),wa=c(function(a,b){return b=n(b,{noStrings:!0,message:"join: Value to be joined is not an array"}),b.join(a)}),xa=function(a,b){return b=n(b),ga(a,b)},ya=c(function(a){return a=n(a,{noStrings:!0,message:"Value to be flattened is not an array"}),E(xa,[],a)}),za=c(function(a,b){return ya(B(a,b))});return{all:I,any:J,append:fa,concat:ga,copy:aa,drop:X,dropWhile:da,each:C,element:S,elementWith:T,every:I,filter:D,flatten:ya,flattenMap:za,foldl:E,foldl1:F,foldr:G,foldr1:H,getIndex:w,head:x,init:Y,inits:$,intersperse:ia,isEmpty:ha,join:wa,last:y,length:v,map:B,maximum:L,minimum:N,nub:ra,nubWith:ta,occurrences:la,occurrencesWith:ma,prefixes:$,prepend:ea,product:R,range:U,rangeStep:V,rangeStride:V,reduce:E,reduce1:F,reduceRight:G,reduceRight1:H,replicate:z,reverse:ka,slice:ba,some:J,sort:ua,sortWith:va,suffixes:_,sum:P,tail:Z,tails:_,take:W,takeWhile:ca,uniq:ra,uniqWith:ta,unzip:pa,zip:oa,zipWith:na}}()},{"../funcUtils":15,"../internalUtilities":18,"./base":2,"./curry":4,"./logical":7,"./object":10,"./pair":11,"./types":14}],2:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=b.curryWithArity,e=b.arityOf,f=b._chooseCurryStyle,g=b._curryWithConsistentStyle,h=a("../funcUtils"),i=h.checkFunction,j=a("../internalUtilities"),k=j.checkPositiveIntegral,l=j.isArrayLike,m=c(function(a,b){var d=(e(b),e(a));a=i(a,{arity:1,minimum:!0,message:"function f must have arity ≥ 1"}),b=i(b,{arity:1,minimum:!0,message:"function g must have arity ≥ 1"}),a=e._isCurried(a)?a:c(a),b=e._isCurried(b)?b:c(b);var g=d;return f(a,b,function(c){var d=[].slice.call(arguments),e=([d[0]],d.slice(1));return a.apply(this,[b.apply(this,[d[0]])].concat(e))},g)}),n=c(function(a,b,d){a=k(a,{errorMessage:"argCount must be non-negative"}),b=i(b,{arity:1,minimum:!0,message:"function f must have arity ≥ 1"}),d=i(d,{arity:a,minimum:!0,message:"function g must have arity ≥ "+a}),b=e._isCurried(b)?b:c(b),d=e._isCurried(d)?d:c(d);var g=e(b),h=g-1+a;return f(b,d,function(){var c=[].slice.call(arguments),e=c.slice(0,a),f=c.slice(a);return b.apply(this,[d.apply(this,e)].concat(f))},h)}),o=c(function(a){return a}),p=c(function(a,b){return a}),q=m(d(0),p),r=c(function(a){return a=i(a,{arity:2,maximum:!0,message:"Value to be flipped must be a function of arity 2"}),a=e._isCurried(a)?a:c(a),e(a)<2?a:g(a,function(b,c){return a(c,b)})}),s=c(function(a){if(!l(a,!0))throw new TypeError("composeMany requires an array or array-like object of functions");if(0===a.length)throw new TypeError("composeMany called with empty array");if(0===e(a[a.length-1]))throw new TypeError("Cannot compose functions of arity 0");return 1===a.length?c(a[0]):a.reduceRight(r(m))}),t=c(function(a,b){return a=i(a,{arity:2,message:"Value to be sectioned must be a function of arity 2"}),e._isCurried(a)?a.call(this,b):(a=c(a))(b)}),u=c(function(a,b){return a=i(a,{arity:2,message:"Value to be sectioned must be a function of arity 2"}),t(r(a),b)});return{compose:m,composeMany:s,composeOn:n,constant:p,constant0:q,flip:r,id:o,sectionLeft:t,sectionRight:u}}()},{"../funcUtils":15,"../internalUtilities":18,"./curry":4}],3:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=b.arityOf,e=b._curryWithConsistentStyle,f=a("./array"),g=f.map,h=a("./maybe"),i=h.isJust,j=h.isNothing,k=h.Just,l=(h.Nothing,h.getJustValue),m=a("./result"),n=m.isOk,o=m.isErr,p=m.Ok,q=(m.Err,m.getOkValue),r=a("../internalUtilities"),s=r.isArrayLike,t=c(function(a,b){if(a=e(a,a,d(a)),s(b))return g(a,b);if(i(b))return k(a(l(b)));if(j(b))return b;if(n(b))return p(a(q(b)));if(o(b))return b;throw new Error("Unrecognised functor")});return{fMap:t,fmap:t}}()},{"../internalUtilities":18,"./array":1,"./curry":4,"./maybe":9,"./result":12}],4:[function(a,b,c){b.exports=function(){"use strict";var b=a("../internalUtilities").checkPositiveIntegral,c="_trueArity",d="_getOriginal",e="_context",f={},g=function(a){return a.hasOwnProperty(c)},h=function(a,b,f,g){var h=function(b,c){Object.defineProperty(a,b,{value:c})};return h(c,b),h(d,f),h(e,g),a},i=function(a,g,j){if(g=b(g,{strict:!0}),"function"!=typeof j)throw new TypeError("Value to be curried is not a function");var k=j.hasOwnProperty(e)?j[e]:a;if(k!==a)throw new Error("Cannot bind a curried function to a different execution context");return j.hasOwnProperty(c)&&j[c]===g?j:(j=j.hasOwnProperty(d)?j[d]:j,0===g?h(function(){var a=k;if(a===f){if(void 0===this)throw new Error("Object curried function called without a context");a=this}return j.apply(a)},0,j,a):h(function(a){var b=[].slice.call(arguments),c=k;if(0===b.length){if(c===f){if(void 0===this)throw new Error("Object curried function called without a context");return i(this,g,j)}var d=1===g?"1 argument":"1 - "+g+" arguments";throw new Error("This function requires "+d)}if(c===f){if(void 0===this)throw new Error("Object curried function called without a context");c=this}if(b.length>g&&(b=b.slice(0,g)),b.length===g)return j.apply(c,b);var e=j.bind.apply(j,[c].concat(b)),l=g-b.length;return l>1?i({context:c},l,e):h(function(a){return e(a)},1,e,c)},g,j,k))},j=i.bind(null,null),k=function(a){var b=a.hasOwnProperty(c)?a[c]:a.length;return j(b,a)};k=k(k),j=k(j);var l=k(function(a){if("function"!=typeof a)throw new TypeError("Cannot compute arity of non-function");return a.hasOwnProperty(c)?a[c]:a.length});l._isCurried=g;var m=k(function(a,b){var d=b.hasOwnProperty(c)?b[c]:b.length;return n(d,a,b)}),n=k(function(a,b,c){return i(b,a,c)}),o=k(function(a){return p(l(a),a)}),p=k(i.bind(null,f)),q=function(a,b,c){return c=void 0===c?l(b):c,i(a.hasOwnProperty(e)?a[e]:null,c,b)},r=function(a,b,c,d){d=void 0!==d?d:l(c);var h,j=[a,b].map(function(a){return g(a)?a[e]:null});return h=-1!==j.indexOf(f)?f:j[0]===j[1]?j[0]:null,i(h,d,c)};return{arity:l,arityOf:l,bind:m,bindWithContext:m,bindWithContextAndArity:n,_chooseCurryStyle:r,curry:k,curryWithArity:j,_curryWithConsistentStyle:q,objectCurry:o,objectCurryWithArity:p}}()},{"../internalUtilities":18}],5:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=a("./object"),e=d.callProp,f=e("getDate"),g=e("getDay"),h=e("getFullYear"),i=e("getHours"),j=e("getMilliseconds"),k=e("getMinutes"),l=e("getMonth"),m=e("getSeconds"),n=e("getTime"),o=e("getTimezoneOffset"),p=e("getUTCDate"),q=e("getUTCDay"),r=e("getUTCFullYear"),s=e("getUTCHours"),t=e("getUTCMilliseconds"),u=e("getUTCMinutes"),v=e("getUTCMonth"),w=e("getUTCSeconds"),x=e("toLocaleDateString"),y=e("toDateString"),z=e("toTimeString"),A=e("toISOString"),B=e("toUTCString"),C=c(function(a,b){return b.setDate(a),b}),D=c(function(a,b){return b.setFullYear(a),b}),E=c(function(a,b){return b.setHours(a),b}),F=c(function(a,b){return b.setMilliseconds(a),b}),G=c(function(a,b){return b.setMinutes(a),b}),H=c(function(a,b){return b.setMonth(a),b}),I=c(function(a,b){return b.setSeconds(a),b}),J=c(function(a,b){return b.setTime(a),b}),K=c(function(a,b){return b.setUTCDate(a),b}),L=c(function(a,b){return b.setUTCFullYear(a),b}),M=c(function(a,b){return b.setUTCHours(a),b}),N=c(function(a,b){return b.setUTCMilliseconds(a),b}),O=c(function(a,b){return b.setUTCMinutes(a),b}),P=c(function(a,b){return b.setUTCMonth(a),b}),Q=c(function(a,b){return b.setUTCSeconds(a),b}),R=c(function(){return Date()}),S=c(function(a){if("string"!=typeof a)throw new TypeError("Attempt to make Date from string with incorrect type");var b=new Date(a);if(isNaN(b.getHours()))throw new TypeError("Attempt to make Date from unparsable string");return b}),T=c(function(a){if("number"!=typeof a)throw new TypeError("Attempt to make Date from milliseconds with incorrect type");var b=new Date(a);if(isNaN(b.getHours()))throw new TypeError("Attempt to make Date from invalid value");return b}),U=c(function(a,b){return new Date(a,b)}),V=c(function(a,b,c){return new Date(a,b,c)}),W=c(function(a,b,c,d){return new Date(a,b,c,d)}),X=c(function(a,b,c,d,e){return new Date(a,b,c,d,e)}),Y=c(function(a,b,c,d,e,f){return new Date(a,b,c,d,e,f)}),Z=c(function(a,b,c,d,e,f,g){return new Date(a,b,c,d,e,f,g)});return{getCurrentTimeString:R,getDayOfMonth:f,getDayOfWeek:g,getFullYear:h,getHours:i,getMilliseconds:j,getMinutes:k,getMonth:l,getSeconds:m,getTimezoneOffset:o,getUTCDayOfMonth:p,getUTCDayOfWeek:q,getUTCFullYear:r,getUTCHours:s,getUTCMilliseconds:t,getUTCMinutes:u,getUTCMonth:v,getUTCSeconds:w,makeDateFromMilliseconds:T,makeDateFromString:S,makeDayDate:V,makeHourDate:W,makeMinuteDate:X,makeMillisecondDate:Z,makeMonthDate:U,makeSecondDate:Y,setDayOfMonth:C,setFullYear:D,setHours:E,setMilliseconds:F,setMinutes:G,setMonth:H,setSeconds:I,setTimeSinceEpoch:J,setUTCDayOfMonth:K,setUTCFullYear:L,setUTCHours:M,setUTCMilliseconds:N,setUTCMinutes:O,setUTCMonth:P,setUTCSeconds:Q,toDateString:y,toEpochMilliseconds:n,toISOString:A,toLocaleDateString:x,toTimeString:z,toUTCString:B}}()},{"./curry":4,"./object":10}],6:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=(b.curryWithArity,b.arityOf),e=b._curryWithConsistentStyle,f=a("../internalUtilities"),g=f.checkArrayLike,h=(f.checkPositiveIntegral,f.checkObjectLike,a("../funcUtils")),i=h.checkFunction,j=c(function(a,b){return b=i(b),a=g(a,{noStrings:!0,message:"Function arguments not an array"}),b=e(b,b,d(b)),b.apply(null,a)}),k=c(function(a){var b=d(a);return a=e(a,a,b),2>b?a:e(a,function(){var c=[].slice.call(arguments),d=[c[b-1]].concat(c.slice(0,b-1));return a.apply(this,d)},b)}),l=c(function(a){var b=d(a);return a=e(a,a,b),2>b?a:e(a,function(){var b=[].slice.call(arguments),c=b.slice(1).concat([b[0]]);return a.apply(this,c)},b)}),m=c(function(a,b){return a=i(a,{message:"Pre value must be a function"}),b=i(b,{message:"Value to be wrapped must be a function"}),e(b,function(){var c=[].slice.call(arguments);return a.call(this,c),b.apply(this,c)},d(b))}),n=c(function(a,b){return a=i(a,{message:"Post value must be a function"}),b=i(b,{message:"Value to be wrapped must be a function"}),e(b,function(){var c=[].slice.call(arguments),d=b.apply(this,c);return a.call(this,c,d),d},d(b))}),o=c(function(a,b,c){return n(b,m(a,c))});return{apply:j,permuteLeft:k,permuteRight:l,pre:m,post:n,rotateLeft:k,rotateRight:l,wrap:o}}()},{"../funcUtils":15,"../internalUtilities":18,"./curry":4}],7:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=b._chooseCurryStyle,e=b._curryWithConsistentStyle,f=a("../funcUtils"),g=f.checkFunction,h=c(function(a){return!a}),i=c(function(a,b){return a&&b}),j=c(function(a,b){return a||b}),k=c(function(a,b){return a?a!==b:b}),l=c(function(a){return a=g(a,{arity:1,message:"Predicate must be a function of arity 1"}),e(a,function(b){return!a.call(this,b)})}),m=c(function(a,b){return a=g(a,{arity:1,message:"First predicate must be a function of arity 1"}),b=g(b,{arity:1,message:"Second predicate must be a function of arity 1"}),d(a,b,function(c){return a.call(this,c)&&b.call(this,c)})}),n=c(function(a,b){return a=g(a,{arity:1,message:"First predicate must be a function of arity 1"}),b=g(b,{arity:1,message:"Second predicate must be a function of arity 1"}),d(a,b,function(c){return a.call(this,c)||b.call(this,c)})}),o=c(function(a,b){return a=g(a,{arity:1,message:"First predicate must be a function of arity 1"}),b=g(b,{arity:1,message:"Second predicate must be a function of arity 1"}),d(a,b,function(c){return k(a.call(this,c),b.call(this,c))})});return{and:i,andPred:m,not:h,notPred:l,or:j,orPred:n,xor:k,xorPred:o}}()},{"../funcUtils":15,"./curry":4}],8:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=b.curryWithArity,e=a("./base"),f=e.flip,g=a("./object"),h=(g.callProp,g.callPropWithArity),i=c(function(a,b){return a+b}),j=c(function(a,b){return a-b}),k=c(function(a,b){return a*b}),l=c(function(a,b){return a/b}),m=c(function(a,b){return Math.pow(a,b)}),n=c(function(a,b){return Math.log(b)/Math.log(a)}),o=c(function(a,b){return Math.floor(a/b)}),p=c(function(a,b){return a%b}),q=c(function(a,b){return b>a}),r=c(function(a,b){return b>=a}),s=c(function(a,b){return a>b}),t=c(function(a,b){return a>=b}),u=c(function(a,b){return a<<b}),v=c(function(a,b){return a>>b}),w=c(function(a,b){return a>>>b}),x=c(function(a,b){return a&b}),y=c(function(a,b){return a|b}),z=c(function(a,b){return a^b}),A=c(function(a){return~a}),B=c(Math.min),C=c(Math.max),D=h("toFixed",1),E=h("toExponential",1),F=h("toPrecision",1),G=h("toString",1),H=f(parseInt),I=d(1,parseInt),J=c(function(a){return a%2===0}),K=c(function(a){return a%2!==0});return{add:i,bitwiseAnd:x,bitwiseNot:A,bitwiseOr:y,bitwiseXor:z,div:o,divide:l,even:J,exp:m,greaterThan:s,greaterThanEqual:t,gt:s,gte:t,leftShift:u,lessThan:q,lessThanEqual:r,lt:q,lte:r,log:n,min:B,max:C,multiply:k,odd:K,parseInt:I,parseIntInBase:H,plus:i,pow:m,rem:p,rightShift:v,rightShiftZero:w,stringToInt:H,subtract:j,toBaseAndRadix:G,toBaseAndString:G,toExponential:E,toFixed:D,toPrecision:F}}()},{"./base":2,"./curry":4,"./object":10}],9:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=b._curryWithConsistentStyle,e=b.arityOf,f=a("../internalUtilities"),g=f.valueStringifier,h=a("../funcUtils"),i=h.checkFunction,j=c(function(){throw new Error("Maybe cannot be instantiated directly")});j.prototype={toString:function(){return"Maybe"},constructor:j};var k=Object.create(j.prototype);k.toString=function(){return"Maybe {Nothing}"};var l=Object.create(k);Object.freeze(l);var m=function(a){if(1!==arguments.length)throw new TypeError("Just called with incorrect number of arguments");return this instanceof m?void Object.defineProperty(this,"value",{value:a}):new m(a)};m.prototype=Object.create(j.prototype),m.prototype.toString=function(){return"Maybe {Just "+g(this.value)+"}"};var n=c(function(a){return a===j||a instanceof j}),o=c(function(a){return a===l}),p=c(function(a){return a instanceof m}),q=c(function(a){if(!p(a))throw new TypeError("Value is not a Just");return a.value}),r=c(function(a){return a=i(a,{message:"Value to be transformed must be a function"}),d(a,function(){[].slice.call(arguments);try{var b=a.apply(this,arguments);return m(b)}catch(c){return l}},e(a))});return{getJustValue:q,isJust:p,isMaybe:n,isNothing:o,makeMaybeReturner:r,Just:m,Maybe:j,Nothing:l}}()},{"../funcUtils":15,"../internalUtilities":18,"./curry":4}],10:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=b.curryWithArity,e=b.objectCurry,f=a("./base"),g=f.flip,h=a("./maybe"),i=h.Just,j=h.Nothing,k=a("../internalUtilities"),l=k.checkObjectLike,m=c(function(a,b){return d(b+1,function(){var c=[].slice.call(arguments,0,b),d=arguments[b];return d[a].apply(d,c)})}),n=g(m)(0),o=c(function(a,b){return Object.prototype.hasOwnProperty.call(b,a)}),p=c(function(a,b){return a in b}),q=c(function(a,b){return b instanceof a}),r=c(function(a,b){return Object.prototype.isPrototypeOf.call(a,b)}),s=c(function(a){return Object.create(a)}),t=c(function(a,b){return Object.create(a,b)}),u=c(function(a,b,c){return b=l(b,{strict:!0}),Object.defineProperty(c,a,b)}),v=c(function(a,b){return a=l(a,{allowNull:!1}),b=l(b,{allowNull:!1}),Object.defineProperties(b,a)}),w=g(Object.getOwnPropertyDescriptor),x=c(function(a,b){return b[a]}),y=c(function(a,b,c){return a in c?c[a]:b}),z=c(function(a,b){if(!(a in b))return j;var c=Object.getOwnPropertyDescriptor(b,a);return"set"in c&&void 0===c.get?j:i(b[a])}),A=(function(){var a=function(){};Object.defineProperty(a.prototype,"foo",{writable:!1});var b=!1,c=new a;try{c.foo=1}catch(d){b=!0}return b}(),function(a,b){for(var c,d=!1;void 0===c&&!d;)c=w(a,b),void 0===c&&(b===Object.prototype?d=!0:b=Object.getPrototypeOf(b));return c}),B=function(a,b){var c=!0,d=A(a,b);return d&&"writable"in d&&d.writable===!1&&(c=!1),d&&c&&"set"in d&&void 0===d.set&&(c=!1),c},C=c(function(a,b,c){var d=B(a,c);if(!d||o(a,c)||!Object.isSealed(c)&&Object.isExtensible(c)||(d=!1),!d)throw new Error("Cannot write to property "+a);return c[a]=b,c}),D=c(function(a,b,c){var d=B(a,c);return!d||o(a,c)||!Object.isSealed(c)&&Object.isExtensible(c)||(d=!1),d?(c[a]=b,i(c)):j}),E=c(function(a,b,c){if(!p(a,c))throw new Error("Cannot modify non-existent property "+a);return C(a,b,c)}),F=c(function(a,b,c){return p(a,c)?D(a,b,c):j}),G=c(function(a,b,c){if(o(a,c))throw new Error("Attempt to recreate existing property "+a);return C(a,b,c)}),H=c(function(a,b,c){return o(a,c)?j:D(a,b,c)}),I=c(function(a,b){if(b=l(b),!b.hasOwnProperty(a))return b;var c=Object.getOwnPropertyDescriptor(b,a);if(c.configurable===!1)throw new Error("Cannot delete property "+a+": not configurable!");return delete b[a],b}),J=c(function(a,b){if(b=l(b),!b.hasOwnProperty(a))return i(b);var c=Object.getOwnPropertyDescriptor(b,a);return c.configurable===!1?j:(delete b[a],i(b))}),K=c(function(a){return"object"!=typeof a||null===a?[]:Object.keys(a)}),L=c(function(a){return"object"!=typeof a||null===a?[]:Object.getOwnPropertyNames(a)}),M=c(function(a){return"object"!=typeof a||null===a?[]:K(a).map(function(b){return[b,a[b]]})}),N=c(function(a){return"object"!=typeof a||null===a?[]:K(a).map(function(b){return[b,w(b,a)]})}),O=function(a,b){if("function"==typeof a)return a;if("object"!=typeof a)throw new TypeError("shallowClone called on non-object");if(Array.isArray(a)){var c=a.slice();return Object.keys(a).forEach(function(b){var d=b-0;return isNaN(d)?void(c[b]=a[b]):void((Math.floor(d)!==d||Math.ceil(d)!==d)&&(c[b]=a[b]))}),c}if(null===a)return b?Object.create(null):null;if(a===Object.prototype)return{};var d=O(Object.getPrototypeOf(a),!0);return Object.getOwnPropertyNames(a).forEach(function(b){var c=Object.getOwnPropertyDescriptor(a,b);Object.defineProperty(d,b,c)}),d},P=c(function(a){return O(a,!1)}),Q=c(function(a,b){for(var c in a)b[c]=a[c];return b}),R=c(function(a,b){var c=Object.keys(a);return c.forEach(function(c){b[c]=a[c]}),b}),S=c(function(a){var b=Object.keys(a),c=b.filter(function(b){var c=Object.getOwnPropertyDescriptor(a,b);return"function"==typeof a[b]&&c.hasOwnProperty("configurable")&&c.hasOwnProperty("writable")});return c.some(function(b){return Object.getOwnPropertyDescriptor(a,b).writable===!1})?a:(c.forEach(function(b){a[b]=e(a[b])}),a)});return{callProp:n,callPropWithArity:m,clone:P,createObject:s,createObjectWithProps:t,createProp:G,curryOwn:S,descriptors:N,defaultTap:y,defineProperty:u,defineProperties:v,deleteProp:I,extend:Q,extendOwn:R,extract:x,extractOrDefault:y,getOwnPropertyDescriptor:w,getOwnPropertyNames:L,hasOwnProperty:o,hasProperty:p,instanceOf:q,isPrototypeOf:r,keys:K,keyValues:M,maybeCreate:H,maybeDelete:J,maybeExtract:z,maybeModify:F,maybeModifyProp:F,maybeSet:D,maybeSetProp:D,maybeTap:z,modify:E,modifyProp:E,safeCreateProp:H,safeDeleteProp:J,safeExtract:z,safeModify:F,safeModifyProp:F,safeSet:D,safeSetProp:D,safeTap:z,set:C,setProp:C,shallowClone:P,tap:x}}()},{"../internalUtilities":18,"./base":2,"./curry":4,"./maybe":9}],11:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=a("../internalUtilities"),e=d.valueStringifier,f=function(a,b){if(0===arguments.length)throw new TypeError("Pair constructor takes two arguments");return 1===arguments.length?g(a):this instanceof f?(Object.defineProperty(this,"first",{enumerable:!1,configurable:!1,value:a}),void Object.defineProperty(this,"second",{enumerable:!1,configurable:!1,value:b})):new f(a,b)};f.prototype={toString:function(){return["Pair (",e(this.first),", ",e(this.second),")"].join("")},constructor:f};var g=function(a){var b=c(function(b){return new f(a,b)});return b.prototype=f.prototype,b},h=c(function(a){if(!(a instanceof f))throw new TypeError("Not a pair");return a.first}),i=c(function(a){if(!(a instanceof f))throw new TypeError("Not a pair");return a.second}),j=c(function(a){return a instanceof f}),k=c(function(a){if(!(a instanceof f))throw new TypeError("Not a pair");return[h(a),i(a)]});return{Pair:f,asArray:k,first:h,fst:h,isPair:j,second:i,snd:i}}()},{"../internalUtilities":18,"./curry":4}],12:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=(b.curryWithArity,b.arityOf),e=b._curryWithConsistentStyle,f=a("../internalUtilities"),g=f.valueStringifier,h=(f.checkArrayLike,a("../funcUtils")),i=h.checkFunction,j=function(){throw new Error("Result cannot be instantiated directly")};j.prototype={toString:function(){return"Result"},constructor:j};var k=function(a){if(1!==arguments.length)throw new TypeError("Ok called with incorrect number of arguments");return this instanceof k?void Object.defineProperty(this,"value",{configurable:!1,writable:!1,enumerable:!1,value:a}):new k(a)};k.prototype=Object.create(j.prototype),k.prototype.toString=function(){return"Result {Ok "+g(this.value)+"}"};var l=function(a){if(1!==arguments.length)throw new TypeError("Err called with incorrect number of arguments");return this instanceof l?void Object.defineProperty(this,"value",{configurable:!1,writable:!1,enumerable:!1,value:a}):new l(a)};l.prototype=Object.create(j.prototype),l.prototype.toString=function(){return"Result {Err "+g(this.value)+"}"};var m=c(function(a){return a===j||a instanceof j}),n=c(function(a){return a instanceof l}),o=c(function(a){return a instanceof k}),p=c(function(a){if(!o(a))throw new TypeError("Value is not an Ok");return a.value}),q=c(function(a){if(!n(a))throw new TypeError("Value is not an Err");return a.value}),r=c(function(a){return a=i(a,{message:"Value to be transformed must be a function"}),e(a,function(){[].slice.call(arguments);try{var b=a.apply(this,arguments);return k(b)}catch(c){return l(c)}},d(a))}),s=c(function(a,b,c){if(a=i(a,{arity:1,minimum:!0,message:"Ok value must be a function of arity 1 or more"}),b=i(b,{arity:1,minimum:!0,message:"Err value must be a function of arity 1 or more"}),o(c))return a(p(c));if(n(c))return b(q(c));throw new TypeError("Invalid value")});return{either:s,getErrValue:q,getOkValue:p,isErr:n,isOk:o,isResult:m,makeResultReturner:r,Err:l,Ok:k,Result:j}}()},{"../funcUtils":15,"../internalUtilities":18,"./curry":4}],13:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=a("../internalUtilities"),e=d.checkIntegral,f=a("./base"),g=(f.flip,a("./object")),h=g.callProp,i=g.callPropWithArity,j=a("../funcUtils"),k=(j.checkFunction,c(function(a){return a.toString()})),l=c(function(a){return a.toLocaleString()}),m=i("charCodeAt",1),n=m(0),o=c(function(a){return String.fromCharCode(a)}),p=h("toLowerCase"),q=h("toLocaleLowerCase"),r=h("toUpperCase"),s=h("toLocaleUpperCase"),t=c(function(a,b){if("string"!=typeof b||"string"!=typeof a)throw new TypeError("Delimiter and string must be strings");return b.split(a)}),u=c(function(a,b){if("string"!=typeof b)throw new TypeError("Value to split must be a string");if(!(a instanceof RegExp))throw new TypeError("Pattern to split on must be a RegExp");return b.split(a)}),v=c(function(a,b,c){if(b=e(b),"string"!=typeof c||"string"!=typeof a)throw new TypeError("Delimiter and string must be strings");return c.split(a,b)}),w=c(function(a,b,c){if(b=e(b),"string"!=typeof c)throw new TypeError("Value to split must be a string");if(!(a instanceof RegExp))throw new TypeError("Pattern to split on must be a RegExp");return c.split(a,b)}),x=c(function(a,b){if(!(a instanceof RegExp)||"string"!=typeof b)throw new TypeError("test called with invalid types");return a.test(b)}),y=function(a){return{index:a.index,matchedText:a[0],subexpressions:a.slice(1)}},z=c(function(a,b){if(!(a instanceof RegExp))throw new TypeError("Pattern is not a regular expression");a=new RegExp(a.source,"g");for(var c=[],d=a.exec(b);null!==d;)c.push(y(d)),d=a.exec(b);return c}),A=c(function(a,b,c){return z(a,c.slice(b))}),B=c(function(a,b){if(!(a instanceof RegExp))throw new TypeError("Pattern is not a regular expression");a=new RegExp(a.source,"g");var c=a.exec(b);return null===c?c:y(c)}),C=c(function(a,b,c){return B(a,c.slice(b))}),D=c(function(a){return a.trim()});return{chr:o,firstMatch:B,firstMatchFrom:C,matches:z,matchesFrom:A,ord:n,regExpSplit:u,regExpSplitCount:w,regExpSplitLimit:w,regExpSplitMax:w,split:t,splitCount:v,splitLimit:v,splitRegExp:u,splitMax:v,test:x,toCharCode:m,toLocaleLowerCase:q,toLocaleString:l,toLocaleUpperCase:s,toLowerCase:p,toUpperCase:r,toString:k,trim:D}}()},{"../funcUtils":15,"../internalUtilities":18,
"./base":2,"./curry":4,"./object":10}],14:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry").curry,c=b(function(a,b){return a==b}),d=b(function(a,b){return a===b}),e=b(function(a,b){return a!=b}),f=b(function(a,b){return a!==b}),g=function(a,b,c,d){if(a.length!==b.length)return!1;for(var e=c.length-1;e>=0;e--){if(c[e]===a)return d[e]===b||d[e]===a;if(d[e]===b)return!1}c.push(a),d.push(b);var f=!0;f=f&&i(a[e],b[e],c,d);var g=Object.keys(a),h=Object.keys(b);return g.length!==h.length?f=!1:(g.sort(),h.sort(),f=g.every(function(e,f){return e!==h[f]?!1:i(a[e],b[e],c,d)})),c.pop(),d.pop(),f},h=function(a,b,c,d){if(null===a||null===b)return!1;if(Array.isArray(a)||Array.isArray(b))return!1;if(Object.getPrototypeOf(a)!==Object.getPrototypeOf(b))return!1;for(var e=c.length-1;e>=0;e--){if(c[e]===a)return d[e]===b||d[e]===a;if(d[e]===b)return!1}var f=Object.keys(a),h=Object.keys(b);if(f.sort(),h.sort(),!g(f,h,c,d))return!1;c.push(a),d.push(b);var j=!0;for(e=0;j&&e<f.length;e++)j=j&&i(a[f[e]],b[h[e]],c,d);return c.pop(),d.pop(),j},i=function(a,b,c,e){return d(a,b)?!0:typeof a!=typeof b?!1:"object"!=typeof a?!1:Array.isArray(a)&&Array.isArray(b)?g(a,b,c,e):h(a,b,c,e)},j=b(function(a,b){return i(a,b,[],[])}),k=b(function(a,b){if("string"!=typeof a)throw new TypeError("Type to be checked is not a string");return typeof b===a}),l=k("number"),m=k("string"),n=k("boolean"),o=k("undefined"),p=k("object"),q=b(function(a){return Array.isArray(a)}),r=b(function(a){return null===a}),s=b(function(a){return p(a)&&!(q(a)||r(a))}),t=b(function(a){return typeof a});return{deepEqual:j,deepEquals:j,equals:c,getType:t,hasType:k,is:k,isArray:q,isBoolean:n,isNumber:l,isNull:r,isObject:p,isRealObject:s,isString:m,isUndefined:o,notEqual:e,notEquals:e,strictEquals:d,strictInequality:f,strictNotEqual:f,strictNotEquals:f}}()},{"./curry":4}],15:[function(a,b,c){b.exports=function(){"use strict";var b=a("./components/curry"),c=b.arityOf,d=function(a,b){b=b||{};var d=b.message||"Value is not a function",e="arity"in b?b.arity:null,f=b.minimum||!1;f&&!b.message&&(d="Value is not a function of arity ≥ "+e);var g=b.maximum||!1;if(g&&!b.message&&(d="Value is not a function of arity ≤ "+e),"function"!=typeof a)throw new TypeError(d);if(null!==e){var h=c(a);if(f&&e>h||g&&h>e||!f&&!g&&h!==e)throw new TypeError(d)}return a};return{checkFunction:d}}()},{"./components/curry":4}],16:[function(a,b,c){b.exports=function(){"use strict";var b={},c={array:a("./components/array"),base:a("./components/base"),categories:a("./components/categories"),curry:a("./components/curry"),date:a("./components/date"),fn:a("./components/fn"),logical:a("./components/logical"),object:a("./components/object"),maths:a("./components/maths"),maybe:a("./components/maybe"),pair:a("./components/pair"),result:a("./components/result"),string:a("./components/string"),types:a("./components/types")};return Object.keys(c).forEach(function(a){var d=c[a];Object.keys(d).forEach(function(a){"_"!==a[0]&&(b[a]=d[a])})}),a("./help")(b),b}()},{"./components/array":1,"./components/base":2,"./components/categories":3,"./components/curry":4,"./components/date":5,"./components/fn":6,"./components/logical":7,"./components/maths":8,"./components/maybe":9,"./components/object":10,"./components/pair":11,"./components/result":12,"./components/string":13,"./components/types":14,"./help":17}],17:[function(a,b,c){b.exports=function(){"use strict";return function(a){var b=function(c){switch(c){case b:console.log("help:"),console.log("Displays useful help for funkierJS API values"),console.log(""),console.log("Usage: help(f);"),console.log(""),console.log("Find full help online at https://graememcc.github.io/funkierJS/docs/");break;case a.Err:console.log("Err:"),console.log(""),console.log("An Err is a type of Result representing a unsuccessful computation. The constructor is new-agnostic."),console.log("Throws if called without any arguments"),console.log(""),console.log(""),console.log("Usage: var x = Err(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#err");break;case a.Just:console.log("Just:"),console.log(""),console.log("A Just is a type of Maybe representing a successful computation. The constructor is new-agnostic."),console.log("Throws when called with no arguments."),console.log(""),console.log(""),console.log("Usage: var x = Just(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#just");break;case a.Maybe:console.log("Maybe:"),console.log(""),console.log("The Maybe type encapsulates the idea of sentinel values returned by functions to represent an error or unusual"),console.log("conditions. Authors can return an instance of the Just constructor when a function executes successfully, and the"),console.log("Nothing object when an error occurs, or the computation is otherwise unsuccessful."),console.log(""),console.log(""),console.log("Usage: var x = Maybe()"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#maybe");break;case a.Nothing:console.log("Nothing:"),console.log(""),console.log("A Nothing is a type of Maybe representing an unsuccessful computation."),console.log(""),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#nothing");break;case a.Ok:console.log("Ok:"),console.log(""),console.log("An Ok is a type of Result representing a successful computation. The constructor is new-agnostic."),console.log("Throws when called with no arguments."),console.log(""),console.log(""),console.log("Usage: var x = Ok(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#ok");break;case a.Pair:console.log("Pair:"),console.log(""),console.log("A Pair represents an immutable tuple. The constructor function takes two elements, first and second. and returns a"),console.log("new immutable tuple. The contents of the tuple can be accessed with the accessor functions fst and"),console.log("snd respectively. The constructor is new-agnostic."),console.log(""),console.log(""),console.log("Usage: var x = Pair(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#pair");break;case a.Result:console.log("Result:"),console.log(""),console.log("The Result type encapsulates the idea of functions throwing errors. It can be considered equivalent to the"),console.log("Either datatype from Haskell, or the Result type from Rust."),console.log(""),console.log(""),console.log("Usage: var x = Result()"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#result");break;case a.add:console.log("add:"),console.log(""),console.log("Synonyms: plus"),console.log(""),console.log("A wrapper around the addition operator."),console.log(""),console.log(""),console.log("Usage: var x = add(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#add");break;case a.and:console.log("and:"),console.log(""),console.log("A wrapper around the logical and (&&) operator. Returns the logical and of the given arguments"),console.log(""),console.log(""),console.log("Usage: var x = and(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#and");break;case a.andPred:console.log("andPred:"),console.log(""),console.log("Takes two unary predicate functions, and returns a new unary function that, when called, will call the original"),console.log("functions with the given argument, and logically and their results, returning that value. Throws if either"),console.log("argument is not a function of arity 1."),console.log(""),console.log(""),console.log("Usage: var x = andPred(f1, f2)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#andpred");break;case a.append:console.log("append:"),console.log(""),console.log("Takes a value, and an array, string or arrayLike, and returns a new array or string with the given value appended."),console.log(""),console.log(""),console.log("Usage: var x = append(value, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#append");break;case a.apply:console.log("apply:"),console.log(""),console.log("Applies the given function f with the arguments given in the array args. If the function is not curried, it will be"),console.log("curried (using curry) and partially applied if necessary. If the function is object curried, and has"),console.log("not yet acquired an execution context, then it will be invoked with a null execution context (as apply is itself"),console.log("curried, and so will have no visibility into the execution context it was invoked with). The result of applying the"),console.log("given arguments to the function is returned.  Throws a TypeError if args is not an array, or if f is not a"),console.log("function."),console.log(""),console.log(""),console.log("Usage: var x = apply(args, f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#apply");break;case a.arityOf:console.log("arityOf:"),console.log(""),console.log("Synonyms: arity"),console.log(""),console.log("Reports the real arity of a function. If the function has not been curried by funkier.js, this simply returns the"),console.log("function's length property. For a function that has been curried, the arity of the original function will be"),console.log("reported (the function's length property will always be 0 or 1 in this case). For a partially applied function,"),console.log("the amount of arguments not yet supplied will be returned."),console.log(""),console.log(""),console.log("Usage: var x = arityOf(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#arityof");break;case a.asArray:console.log("asArray:"),console.log(""),console.log("Takes a pair, and returns a 2-element array containing the values contained in the given Pair p."),console.log("Specifically, if the resulting array is named arr, then we have arr[0] === fst(p) and arr[1] === snd(p)."),console.log("Throws a TypeError if p is not a pair."),console.log(""),console.log(""),console.log("Usage: var x = asArray(p)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#asarray");break;case a.bind:console.log("bind:"),console.log(""),console.log("Synonyms: bindWithContext"),console.log(""),console.log("Given an object and function, returns a curried function with the same arity as the original, and whose execution"),console.log("context is permanently bound to the supplied object. The function will be called when sufficient arguments have"),console.log("been supplied. Superfluous arguments are discarded. It is possible to partially apply the resulting function, and"),console.log("indeed the further resulting function(s). The resulting function and its partial applications will throw if they"),console.log("require at least one argument, but are invoked without any. bind throws if the first parameter is not an"),console.log("an acceptable type for an execution context, or if the last parameter is not a function."),console.log(""),console.log(""),console.log("Usage: var x = bind(ctx, f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#bind");break;case a.bindWithContextAndArity:console.log("bindWithContextAndArity:"),console.log(""),console.log("Given an arity, object and function, returns a curried function whose execution context is permanently bound to"),console.log("the supplied object, and whose arity equals the arity given. The supplied arity need not equal the function's"),console.log("length. The function will be only called when the specified number of arguments have been supplied. Superfluous"),console.log("arguments are discarded. It is possible to partially apply the resulting function, and indeed the further"),console.log("resulting function(s). The resulting function and its partial applications will throw if they require at least"),console.log("one argument, but are invoked without any. bindWithContextAndArity throws if the arity is not a natural"),console.log("number, if the second parameter is not an acceptable type for an execution context, or if the last parameter is"),console.log("not a function."),console.log(""),console.log(""),console.log("Usage: var x = bindWithContextAndArity(n, ctx, f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#bindwithcontextandarity");break;case a.bitwiseAnd:console.log("bitwiseAnd:"),console.log(""),console.log("A wrapper around the bitwise and (&) operator."),console.log(""),console.log(""),console.log("Usage: var x = bitwiseAnd(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#bitwiseand");break;case a.bitwiseNot:console.log("bitwiseNot:"),console.log(""),console.log("A wrapper around the bitwise not (~) operator."),console.log(""),console.log(""),console.log("Usage: var x = bitwiseNot(x)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#bitwisenot");break;case a.bitwiseOr:console.log("bitwiseOr:"),console.log(""),console.log("A wrapper around the bitwise or (&) operator."),console.log(""),console.log(""),console.log("Usage: var x = bitwiseOr(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#bitwiseor");break;case a.bitwiseXor:console.log("bitwiseXor:"),console.log(""),console.log("A wrapper around the bitwise xor (^) operator."),console.log(""),console.log(""),console.log("Usage: var x = bitwiseXor(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#bitwisexor");break;case a.callProp:console.log("callProp:"),console.log(""),console.log("A shorthand for callPropWithArity(prop, 0). Returns a new function that takes an object, and calls the specified"),console.log("property on the given object."),console.log(""),console.log(""),console.log("Usage: var x = callProp(prop)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#callprop");break;case a.callPropWithArity:console.log("callPropWithArity:"),console.log(""),console.log("Given a property name and an arity, returns a curried function taking arity + 1 arguments. The new function"),console.log("requires all the original arguments in their original order, and an object as its final parameter. The returned"),console.log("function will then try to call the named property on the given object,"),console.log(""),console.log(""),console.log("Usage: var x = callPropWithArity(prop, arity)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#callpropwitharity");break;case a.chr:console.log("chr:"),console.log(""),console.log("Equivalent to String.fromCharCode. Takes a number n, and returns the character whose Unicode value is that"),console.log("number."),console.log(""),console.log(""),console.log("Usage: var x = chr(n)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#chr");break;case a.clone:console.log("clone:"),console.log(""),console.log("Synonyms: shallowClone"),console.log(""),console.log("Returns a shallow clone of the given object. All enumerable and non-enumerable properties from the given object"),console.log("and its prototype chain will be copied, and will be enumerable or non-enumerable as appropriate. Note that values"),console.log("from Object.prototype, Array.prototype, will not be copied, but those prototypes will be in the prototype chain"),console.log("of the clone if they are in the prototype chain of the original object. Functions are returned unchanged."),console.log("Non-primitive values are copied by reference."),console.log(""),console.log(""),console.log("Usage: var x = clone(obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#clone");break;case a.compose:console.log("compose:"),console.log(""),console.log("Composes the two functions, returning a new function that consumes one argument, which is passed to g. The result"),console.log("of that call is then passed to f. That result is then returned. Throws if either parameter is not a function, or"),console.log("has arity 0."),console.log(""),console.log(""),console.log("Usage: var x = compose(f, g)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#compose");break;case a.composeMany:console.log("composeMany:"),console.log(""),console.log("Repeatedly composes the given array of functions, from right to left. All functions are curried where necessary."),console.log("Functions are curried from right to left. Throws an Error if any array member is not a function, if it has arity"),console.log("zero, or if the value supplied is not an array."),console.log(""),console.log(""),console.log("Usage: var x = composeMany(fns)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#composemany");break;case a.composeOn:console.log("composeOn:"),console.log(""),console.log("Composes the two functions, returning a new function that consumes the specified number of arguments, which are"),console.log("then passed to g. The result of that call is then passed to f. That result is then returned. Throws if the"),console.log("first parameter is not an integer greater than zero, if either parameter is not a function, or if either parameter"),console.log("has arity 0."),console.log(""),console.log(""),console.log("Usage: var x = composeOn(argCount, f, g)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#composeon");break;case a.concat:console.log("concat:"),console.log(""),console.log("Takes two arrays, arrayLikes or strings, and returns their concatenation."),console.log(""),console.log(""),console.log("Usage: var x = concat(arr1, arr2)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#concat");break;case a.constant:console.log("constant:"),console.log(""),console.log("Intended to be partially applied, first taking a value, returning a function that takes another parameter"),console.log("and which always returns the first value."),console.log(""),console.log(""),console.log("Usage: var x = constant(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#constant");break;case a.constant0:console.log("constant0:"),console.log(""),console.log("Returns a function of arity zero that when called always returns the supplied value."),console.log(""),console.log(""),console.log("Usage: var x = constant0(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#constant0");break;case a.copy:console.log("copy:"),console.log(""),console.log("Takes an arrayLike, and returns a new array which is a shallow copy."),console.log(""),console.log(""),console.log("Usage: var x = copy(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#copy");break;case a.createObject:console.log("createObject:"),console.log(""),console.log("Returns a new object whose internal prototype property is the given object protoObject."),console.log(""),console.log(""),console.log("Usage: var x = createObject(protoObject)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#createobject");break;case a.createObjectWithProps:console.log("createObjectWithProps:"),console.log(""),console.log("Creates an object whose internal prototype property is protoObj, and which has the additional properties described"),console.log("in the given property descriptor object descriptorsObject. The property descriptor object is expected to be of the"),console.log("form accepted by Object.create, Object.defineProperties etc."),console.log(""),console.log(""),console.log("Usage: var x = createObjectWithProps(protoObject, descriptorsObject)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#createobjectwithprops");break;case a.createProp:console.log("createProp:"),console.log(""),console.log("Creates the given property to the given value on the given object, returning the object. Equivalent to evaluating"),console.log("o[prop] = value. The property will be not be modified if it already exists; in that case this method will throw."),console.log("Additionally, it throws when the object is frozen, sealed, or cannot be extended. The property will be"),console.log("successfully created when it already exists, but only in the prototype chain."),console.log(""),console.log(""),console.log("Usage: var x = createProp(prop, val, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#createprop");break;case a.curry:console.log("curry:"),console.log(""),console.log("Curries the given function f, returning a function which accepts the same number of arguments as the original"),console.log("function's length property, but which may be partially applied. The function can be partially applied by passing"),console.log("arguments one at a time, or by passing several arguments at once. The function can also be called with more"),console.log("arguments than the given function's length, but the superfluous arguments will be ignored, and will not be"),console.log("passed to the original function. If the curried function or any subsequent partial applications require at least"),console.log("one argument, then calling the function with no arguments will throw. curry throws if its argument is not a"),console.log("function. It will also throw if the function is known to be bound to a specific execution context."),console.log(""),console.log(""),console.log("Usage: var x = curry(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#curry");break;case a.curryOwn:console.log("curryOwn:"),console.log(""),console.log("Takes an object, and providing every enumerable function is writable, (i.e. the function has not been configured as"),console.log("writable: false), then curries the member functions of the object using the objectCurry method."),console.log("If any member functions are found that do not meet this requirement, then the object is left unchanged. Only the"),console.log("object's own properties are affected; those in the prototype chain are unperturbed. Properties with getter/setters"),console.log("in their descriptor are ignored."),console.log(""),console.log(""),console.log("Usage: var x = curryOwn(obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#curryown");break;case a.curryWithArity:console.log("curryWithArity:"),console.log(""),console.log("Curries the given function f to the supplied arity, which need not equal the function's length. The function will"),console.log("be called when that number of arguments have been supplied. Superfluous arguments are discarded. The original"),console.log("function will be called with a null execution context. It is possible to partially apply the resulting function,"),console.log("and indeed the further resulting function(s). The resulting function and its partial applications will throw if"),console.log("they require at least one argument, but are invoked without any. curryWithArity throws if the arity is not a"),console.log("natural number, or if the second parameter is not a function. It will also throw if the given function is known"),console.log("to be bound to a specific execution context."),console.log(""),console.log(""),console.log("Usage: var x = curryWithArity(n, f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#currywitharity");break;case a.deepEqual:console.log("deepEqual:"),console.log(""),console.log("Synonyms: deepEquals"),console.log(""),console.log("Check two values for deep equality. Deep equality holds if any of the following if the two values are the same"),console.log("object, if both values are objects with the same object, the same prototype, the same enumerable properties"),console.log("and those properties are themselves deeply equal (non-enumerable properties are not checked), or if both values"),console.log("are arrays with the same length, any additional properties installed on the arrays are deeply equal, and the items"),console.log("at each index are themselves deeply equal."),console.log(""),console.log(""),console.log("Usage: var x = deepEqual(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#deepequal");break;case a.defineProperties:console.log("defineProperties:"),console.log(""),console.log("A curried wrapper around Object.defineProperties. Takes an object whose own properties map to property"),console.log("descriptors, and an object o. Returns the object o, after having defined the relevant properties named by the"),console.log("properties of the descriptors parameter, and whose values are dictated by the descriptor parameter."),console.log(""),console.log(""),console.log("Usage: var x = defineProperties(descriptors, o)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#defineproperties");break;case a.defineProperty:console.log("defineProperty:"),console.log(""),console.log("A curried wrapper around Object.defineProperty. Takes a property name string, a property descriptor object and"),console.log("the object that the property hould be defined on. Returns the object o, after having defined the relevant property"),console.log("per the descriptor. Throws a TypeError if the descriptor is not an object."),console.log(""),console.log(""),console.log("Usage: var x = defineProperty(prop, descriptor, o)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#defineproperty");break;case a.deleteProp:console.log("deleteProp:"),console.log(""),console.log("Deletes the given property from the given the given object, returning the object. Equivalent to evaluating"),console.log("delete o[prop]. Throws when the property is not configurable, including when the object is frozen or sealed."),console.log(""),console.log(""),console.log("Usage: var x = deleteProp(prop, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#deleteprop");break;case a.descriptors:console.log("descriptors:"),console.log(""),console.log("Takes an object, and returns an array containing 2-element arrays. The first element of each sub-array is the name"),console.log("of a property from the object, and the second element is its property descriptor. This function only returns"),console.log("key-value pairs for the object's own properties. Returns an empty array for non-objects.  The order of the values"),console.log("is not defined."),console.log(""),console.log(""),console.log("Usage: var x = descriptors(obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#descriptors");break;case a.div:console.log("div:"),console.log(""),console.log("Returns the quotient on dividing x by y."),console.log(""),console.log(""),console.log("Usage: var x = div(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#div");break;case a.divide:console.log("divide:"),console.log(""),console.log("A wrapper around the division operator."),console.log(""),console.log(""),console.log("Usage: var x = divide(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#divide");break;case a.drop:console.log("drop:"),console.log(""),console.log("Takes a count, and an array, string or arrayLike. Returns an array or string containing the first count elements"),console.log("removed from the given arrayLike."),console.log(""),console.log(""),console.log("Usage: var x = drop(count, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#drop");break;case a.dropWhile:console.log("dropWhile:"),console.log(""),console.log("Takes a predicate function p, and source, an array, string or arrayLike. Returns a new array or string containing"),console.log("the remaining members our source upon removing the initial elements for which the predicate function returned true."),console.log(""),console.log(""),console.log("Usage: var x = dropWhile(pred, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#dropwhile");break;case a.each:console.log("each:"),console.log(""),console.log("Takes a function f, and an array, string or arrayLike arr. Calls f with each member of the array in sequence, and"),console.log("returns undefined."),console.log(""),console.log(""),console.log("Usage: var x = each(f, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#each");break;case a.either:console.log("either:"),console.log(""),console.log("Takes two functions of arity 1 or greater, and a Result. If the Result is an Ok"),console.log("value, the first function f1 will be called with the unwrapped value.  Otherwise, if the Result is an"),console.log("Err value, the second function is called with the unwrapped value. In either case, the result of of the"),console.log("called function is returned."),console.log(""),console.log(""),console.log("Usage: var x = either(f1, f2, r)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#either");break;case a.element:console.log("element:"),console.log(""),console.log("Takes a value and an array, string or arrayLike. Returns true if the value is in the arrayLike (checked for strict"),console.log("identity) and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = element(val, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#element");break;case a.elementWith:console.log("elementWith:"),console.log(""),console.log("A generalised version of element. Takes a predicate function p of one argument, and an array, string or arrayLike."),console.log("Returns true if there is an element in the arrayLike for which p returns true, and returns false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = elementWith(pred, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#elementwith");break;case a.equals:console.log("equals:"),console.log(""),console.log("A wrapper around the non-strict equality (==) operator."),console.log(""),console.log(""),console.log("Usage: var x = equals(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#equals");break;case a.even:console.log("even:"),console.log(""),console.log("Given a number, returns true if it is divisible by 2, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = even(x)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#even");break;case a.every:console.log("every:"),console.log(""),console.log("Synonyms: all"),console.log(""),console.log("Takes two parameters: a predicate function p that takes one argument, and an array, string or arrayLike. Calls the"),console.log("predicate with every element of the array or string, until either the predicate function returns false, or the end"),console.log("of the array or string is reached."),console.log(""),console.log(""),console.log("Usage: var x = every(pred, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#every");break;case a.exp:console.log("exp:"),console.log(""),console.log("Synonyms: pow"),console.log(""),console.log("A curried wrapper around Math.pow."),console.log(""),console.log(""),console.log("Usage: var x = exp(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#exp");
break;case a.extend:console.log("extend:"),console.log(""),console.log("Takes two objects, source and dest, and walks the prototype chain of source, copying all enumerable properties"),console.log("into dest. Any extant properties with the same name are overwritten. Returns the modified dest object. All"),console.log("properties are shallow-copied: in other words, if foo is a property of source whose value is an object, then"),console.log("afterwards source.foo === dest.foo will be true."),console.log(""),console.log(""),console.log("Usage: var x = extend(source, dest)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#extend");break;case a.extendOwn:console.log("extendOwn:"),console.log(""),console.log("Takes two objects, source and dest, and copies all enumerable properties from source into dest. Properties from"),console.log("source's prototype chain are not copied. Any extant properties with the same name are overwritten."),console.log("Returns the modified dest object. All properties are shallow-copied: in other words, if foo is a property of"),console.log("source whose value is an object, then afterwards source.foo === dest.foo will be true."),console.log(""),console.log(""),console.log("Usage: var x = extendOwn(source, dest)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#extendown");break;case a.extract:console.log("extract:"),console.log(""),console.log("Synonyms: tap"),console.log(""),console.log("Extracts the given property from the given object. Equivalent to evaluating obj[prop]."),console.log(""),console.log(""),console.log("Usage: var x = extract(prop, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#extract");break;case a.extractOrDefault:console.log("extractOrDefault:"),console.log(""),console.log("Synonyms: defaultTap"),console.log(""),console.log("Extracts the given property from the given object, unless the property is not found in the object or its prototype"),console.log("chain, in which case the specified default value is returned."),console.log(""),console.log(""),console.log("Usage: var x = extractOrDefault(prop, default, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#extractordefault");break;case a.filter:console.log("filter:"),console.log(""),console.log("Takes a predicate function pred, and an array, string or arrayLike arr. Returns an array or string containing"),console.log("those members of arr—in the same order as the original array—for which the predicate function returned true."),console.log(""),console.log(""),console.log("Usage: var x = filter(pred, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#filter");break;case a.firstMatch:console.log("firstMatch:"),console.log(""),console.log("Finds the first match in a string for a given regular expression. Takes two parameters: a regular expression and a"),console.log("string. Returns a single object or null."),console.log(""),console.log(""),console.log("Usage: var x = firstMatch(r, s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#firstmatch");break;case a.firstMatchFrom:console.log("firstMatchFrom:"),console.log(""),console.log("Finds the first match in a string for a given regular expression from a given index. Takes three parameters: a"),console.log("regular expression an index, and a string. Returns a single object or null."),console.log(""),console.log(""),console.log("Usage: var x = firstMatchFrom(r, index, s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#firstmatchfrom");break;case a.flatten:console.log("flatten:"),console.log(""),console.log("Takes an array containing arrays or strings. Returns an array containing the concatenation of those arrays/strings."),console.log("Note that flatten only strips off one layer."),console.log(""),console.log(""),console.log("Usage: var x = flatten(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#flatten");break;case a.flattenMap:console.log("flattenMap:"),console.log(""),console.log("Takes a function of arity 1, and an array, string or arrayLike. Maps the function over the array/string and"),console.log("flattens the result. The supplied function must be of arity 1, as it is expected to return an array or string; a"),console.log("TypeError is thrown if this is not the case."),console.log(""),console.log(""),console.log("Usage: var x = flattenMap(f, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#flattenmap");break;case a.flip:console.log("flip:"),console.log(""),console.log("Takes a binary function f, and returns a curried function that takes the arguments in the opposite order."),console.log(""),console.log(""),console.log("Usage: var x = flip(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#flip");break;case a.fmap:console.log("fmap:"),console.log(""),console.log("Synonyms: fMap"),console.log(""),console.log("Takes a known Functor, and maps the given function over it. Known functors are currently arrays, strings,"),console.log("Maybes and Results, although this may change in future versions. Throws if the"),console.log("first value is not a function of arity 1, or the second is not a known functor."),console.log(""),console.log(""),console.log("Usage: var x = fmap(f, g)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#fmap");break;case a.foldl:console.log("foldl:"),console.log(""),console.log("Synonyms: reduce"),console.log(""),console.log("Takes three parameters: a function f of two arguments, an initial value, and an array, string or arrayLike."),console.log("Traverses the array or string from left to right, calling the function with two arguments: the current accumulation"),console.log("value, and the current element. The value returned will form the next accumulation value, and foldl returns the"),console.log("value returned by the final call. The first call's accumulation parameter will be the given initial value."),console.log(""),console.log(""),console.log("Usage: var x = foldl(f, initial, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#foldl");break;case a.foldl1:console.log("foldl1:"),console.log(""),console.log("Synonyms: reduce1"),console.log(""),console.log("Takes two parameters: a function f of two arguments, and an array, string or arrayLike value. Traverses the array"),console.log("from left to right from the second element, calling the function with two arguments: the current accumulation"),console.log("value, and the current element. The value returned will form the next accumulation value, and foldl1 returns"),console.log("returns the value returned by the final call. The first call's accumulation parameter will be the first element of"),console.log("the array or string."),console.log(""),console.log(""),console.log("Usage: var x = foldl1(f, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#foldl1");break;case a.foldr:console.log("foldr:"),console.log(""),console.log("Synonyms: reduceRight"),console.log(""),console.log("Takes three parameters: a function f of two arguments, an initial value, and an array, string or arrayLike value."),console.log("Traverses the array or string from right to left, calling the function with two arguments: the current accumulation"),console.log("value, and the current element. The value returned will form the next accumulation value, and foldr returns the"),console.log("value returned by the final call. The first call's accumulation parameter willbe the given initial value."),console.log(""),console.log(""),console.log("Usage: var x = foldr(f, initial, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#foldr");break;case a.foldr1:console.log("foldr1:"),console.log(""),console.log("Synonyms: reduceRight1"),console.log(""),console.log("Takes two parameters: a function f of two arguments, and an array, string or arrayLike. Traverses the array from"),console.log("right to left from the penultimate element, calling the function with two arguments: the current accumulation"),console.log("value, and the current element. The value returned will form the next accumulation value, and foldr1 returns"),console.log("returns the value returned by the final call. The first call's accumulation parameter will be the last element of"),console.log("the array or string."),console.log(""),console.log(""),console.log("Usage: var x = foldr1(f, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#foldr1");break;case a.fst:console.log("fst:"),console.log(""),console.log("Synonyms: first"),console.log(""),console.log("Accessor function for Pair tuples. Returns the first value that was supplied to the Pair"),console.log("constructor. Throws if called with a non-pair value."),console.log(""),console.log(""),console.log("Usage: var x = fst(p)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#fst");break;case a.getCurrentTimeString:console.log("getCurrentTimeString:"),console.log(""),console.log("A wrapper around calling the Date constructor without the new operator. Returns a string representing the"),console.log("current date and time."),console.log(""),console.log(""),console.log("Usage: var x = getCurrentTimeString()"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getcurrenttimestring");break;case a.getDayOfMonth:console.log("getDayOfMonth:"),console.log(""),console.log("A wrapper around Date.prototype.getDate. Takes a Date object, and returns an integer representing the day of"),console.log("the month (1-31) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getDayOfMonth(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getdayofmonth");break;case a.getDayOfWeek:console.log("getDayOfWeek:"),console.log(""),console.log("A wrapper around Date.prototype.getDay. Takes a Date object, and returns an integer representing the day of the"),console.log("month (0-6) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getDayOfWeek(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getdayofweek");break;case a.getErrValue:console.log("getErrValue:"),console.log(""),console.log("Returns the value wrapped by the given Err instance e. Throws a TypeError if called with anything other"),console.log("than an Err."),console.log(""),console.log(""),console.log("Usage: var x = getErrValue(e)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#geterrvalue");break;case a.getFullYear:console.log("getFullYear:"),console.log(""),console.log("A wrapper around Date.prototype.getFullYear. Takes a Date object, and returns a 4-digit integer representing"),console.log("the year of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getFullYear(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getfullyear");break;case a.getHours:console.log("getHours:"),console.log(""),console.log("A wrapper around Date.prototype.getHours. Takes a Date object, and returns a integer representing the hour"),console.log("field (0-23) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getHours(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#gethours");break;case a.getIndex:console.log("getIndex:"),console.log(""),console.log("Takes an index and an array, string or other arrayLike value and returns the element at the given index. Throws a"),console.log("TypeError if the index is outside the range for the given object."),console.log(""),console.log(""),console.log("Usage: var x = getIndex(index, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getindex");break;case a.getJustValue:console.log("getJustValue:"),console.log(""),console.log("Returns the value wrapped by the given Just instance j. Throws a TypeError if called with anything other"),console.log("than a Just."),console.log(""),console.log(""),console.log("Usage: var x = getJustValue(j)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getjustvalue");break;case a.getMilliseconds:console.log("getMilliseconds:"),console.log(""),console.log("A wrapper around Date.prototype.getMilliseconds. Takes a Date object, and returns a integer representing the"),console.log("milliseconds field (0-999) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getMilliseconds(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getmilliseconds");break;case a.getMinutes:console.log("getMinutes:"),console.log(""),console.log("A wrapper around Date.prototype.getMinutes. Takes a Date object, and returns a integer representing the minutes"),console.log("field (0-59) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getMinutes(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getminutes");break;case a.getMonth:console.log("getMonth:"),console.log(""),console.log("A wrapper around Date.prototype.getMonths. Takes a Date object, and returns a integer representing the month"),console.log("field (0-11) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getMonth(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getmonth");break;case a.getOkValue:console.log("getOkValue:"),console.log(""),console.log("Returns the value wrapped by the given Ok instance o. Throws a TypeError if called with anything other"),console.log("than an Ok."),console.log(""),console.log(""),console.log("Usage: var x = getOkValue(o)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getokvalue");break;case a.getOwnPropertyDescriptor:console.log("getOwnPropertyDescriptor:"),console.log(""),console.log("A curried wrapper around Object.getOwnPropertyDescriptor. Takes a property name and an object. If the object"),console.log("itself has the given property, then the object's property descriptor for the given object is returned, otherwise"),console.log("it returns undefined."),console.log(""),console.log(""),console.log("Usage: var x = getOwnPropertyDescriptor(prop, o)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getownpropertydescriptor");break;case a.getOwnPropertyNames:console.log("getOwnPropertyNames:"),console.log(""),console.log("A wrapper around Object.getOwnPropertyNames. Takes an object, and returns an array containing the names of the"),console.log("object's own properties, including non-enumerable properties. Returns an empty array for non-objects. The order of"),console.log("the property names is not defined."),console.log(""),console.log(""),console.log("Usage: var x = getOwnPropertyNames(obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getownpropertynames");break;case a.getSeconds:console.log("getSeconds:"),console.log(""),console.log("A wrapper around Date.prototype.getSeconds. Takes a Date object, and returns a integer representing the seconds"),console.log("field (0-59) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getSeconds(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getseconds");break;case a.getTimezoneOffset:console.log("getTimezoneOffset:"),console.log(""),console.log("A wrapper around Date.prototype.getTimezoneOffset. Takes a Date object, and returns the delta in minutes"),console.log("between the Javascript environment and UTC."),console.log(""),console.log(""),console.log("Usage: var x = getTimezoneOffset(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#gettimezoneoffset");break;case a.getType:console.log("getType:"),console.log(""),console.log("A functional wrapper around the typeof operator. Takes any Javascript value, and returns a string representing"),console.log('the object\'s type: the result will be one of "number", "string", "boolean", "function", "undefined", or "object".'),console.log(""),console.log(""),console.log("Usage: var x = getType(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#gettype");break;case a.getUTCDayOfMonth:console.log("getUTCDayOfMonth:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCDate. Takes a Date object, and returns an integer representing the day of"),console.log("the month (1-31) of the given date, adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCDayOfMonth(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcdayofmonth");break;case a.getUTCDayOfWeek:console.log("getUTCDayOfWeek:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCDay. Takes a Date object, and returns an integer representing the day of"),console.log("the week (0-6) of the given date, adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCDayOfWeek(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcdayofweek");break;case a.getUTCFullYear:console.log("getUTCFullYear:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCFullYear. Takes a Date object, and returns a 4-digit integer representing"),console.log("the year of the given date, adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCFullYear(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcfullyear");break;case a.getUTCHours:console.log("getUTCHours:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCHours. Takes a Date object, and returns an integer representing the hours"),console.log("field of the given date (0-23), adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCHours(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutchours");break;case a.getUTCMilliseconds:console.log("getUTCMilliseconds:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCMilliseconds. Takes a Date object, and returns an integer representing"),console.log("the milliseconds field of the given date (0-999), adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCMilliseconds(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcmilliseconds");break;case a.getUTCMinutes:console.log("getUTCMinutes:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCMinutes. Takes a Date object, and returns an integer representing the"),console.log("minutes field of the given date (0-59), adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCMinutes(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcminutes");break;case a.getUTCMonth:console.log("getUTCMonth:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCMonth. Takes a Date object, and returns an integer representing the month"),console.log("field of the given date (0-11), adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCMonth(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcmonth");break;case a.getUTCSeconds:console.log("getUTCSeconds:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCSeconds. Takes a Date object, and returns an integer representing the"),console.log("seconds field of the given date (0-59), adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCSeconds(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcseconds");break;case a.greaterThan:console.log("greaterThan:"),console.log(""),console.log("Synonyms: gt"),console.log(""),console.log("A wrapper around the less than or equal (<=) operator."),console.log(""),console.log(""),console.log("Usage: var x = greaterThan(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#greaterthan");break;case a.greaterThanEqual:console.log("greaterThanEqual:"),console.log(""),console.log("Synonyms: gte"),console.log(""),console.log("A wrapper around the greater than or equal (=>) operator."),console.log(""),console.log(""),console.log("Usage: var x = greaterThanEqual(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#greaterthanequal");break;case a.hasOwnProperty:console.log("hasOwnProperty:"),console.log(""),console.log("A curried wrapper around Object.prototype.hasOwnProperty. Takes a string representing a property name and an"),console.log("object, and returns true if the given object itself (i.e. not objects in the prototype chain) has the specified"),console.log("property."),console.log(""),console.log(""),console.log("Usage: var x = hasOwnProperty(prop, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#hasownproperty");break;case a.hasProperty:console.log("hasProperty:"),console.log(""),console.log("A curried wrapper around the in operator. Takes a string representing a property name and an object, and"),console.log("returns true if the given object or some object in the prototype chain has the specified property."),console.log(""),console.log(""),console.log("Usage: var x = hasProperty(prop, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#hasproperty");break;case a.head:console.log("head:"),console.log(""),console.log("Takes an array, string or other arrayLike value and returns the first element. Throws a TypeError when given an"),console.log("empty arrayLike."),console.log(""),console.log(""),console.log("Usage: var x = head(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#head");break;case a.id:console.log("id:"),console.log(""),console.log("Returns the supplied value. Superfluous values are ignored."),console.log(""),console.log(""),console.log("Usage: var x = id(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#id");break;case a.init:console.log("init:"),console.log(""),console.log("Takes an array, string or arrayLike. Returns an array or string containing every element except the last."),console.log(""),console.log(""),console.log("Usage: var x = init(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#init");break;case a.inits:console.log("inits:"),console.log(""),console.log("Synonyms: prefixes"),console.log(""),console.log("Takes an array, string or arrayLike. Returns all the prefixes of the given arrayLike."),console.log(""),console.log(""),console.log("Usage: var x = inits(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#inits");break;case a.instanceOf:console.log("instanceOf:"),console.log(""),console.log("A curried wrapper around the instanceof operator. Takes a constructor function and an object, and returns true"),console.log("if the function's prototype property is in the prototype chain of the given object."),console.log(""),console.log(""),console.log("Usage: var x = instanceOf(constructor, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#instanceof");break;case a.intersperse:console.log("intersperse:"),console.log(""),console.log("Takes a value, and an array, string or arrayLike, and returns a new array or string with the value in between each"),console.log("pair of elements of the original."),console.log(""),console.log(""),console.log("Usage: var x = intersperse(val, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#intersperse");break;case a.is:console.log("is:"),console.log(""),console.log("Synonyms: hasType"),console.log(""),console.log("Given a string that could be returned by the typeof operator, and a value, returns true if typeof the given"),console.log("object equals the given string. Throws if the first argument is not a string."),console.log(""),console.log(""),console.log("Usage: var x = is(type, value)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#is");break;case a.isArray:console.log("isArray:"),console.log(""),console.log("Returns true if the given value is an array, false otherwise"),console.log(""),console.log(""),console.log("Usage: var x = isArray(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isarray");break;case a.isBoolean:console.log("isBoolean:"),console.log(""),console.log('Returns true if typeof the given value equals "boolean", false otherwise.'),console.log(""),console.log(""),console.log("Usage: var x = isBoolean(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isboolean");break;case a.isEmpty:console.log("isEmpty:"),console.log(""),console.log("Returns true if the given array, arrayLike or string is empty, and false if not."),console.log(""),console.log(""),console.log("Usage: var x = isEmpty(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isempty");break;case a.isErr:console.log("isErr:"),console.log(""),console.log("Returns true when the given value is a Err object, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isErr(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#iserr");break;case a.isJust:console.log("isJust:"),console.log(""),console.log("Returns true if the given value is a Just object, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isJust(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isjust");break;case a.isMaybe:console.log("isMaybe:"),console.log(""),console.log("Returns true when the given value is a Maybe object, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isMaybe(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#ismaybe");break;case a.isNothing:console.log("isNothing:"),console.log(""),console.log("Returns true if the given value is the Nothing object, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isNothing(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isnothing");break;case a.isNull:console.log("isNull:"),console.log(""),console.log("Returns true if the given object is null, false otherwise"),console.log(""),console.log(""),console.log("Usage: var x = isNull(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isnull");break;case a.isNumber:console.log("isNumber:"),console.log(""),console.log('Returns true if typeof the given value equals "number", false otherwise.'),console.log(""),console.log(""),console.log("Usage: var x = isNumber(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isnumber");break;case a.isObject:console.log("isObject:"),console.log(""),console.log('Returns true if typeof the given value equals "object", false otherwise.'),console.log(""),console.log(""),console.log("Usage: var x = isObject(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isobject");break;case a.isOk:console.log("isOk:"),console.log(""),console.log("Returns true when the given value is a Ok object, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isOk(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isok");break;case a.isPair:console.log("isPair:"),console.log(""),console.log("Returns true if the given value is a Pair, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isPair(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#ispair");break;case a.isPrototypeOf:console.log("isPrototypeOf:"),console.log(""),console.log("A curried wrapper around Object.prototype.isPrototypeOf. Takes two objects: the prototype object, and the object"),console.log("whose prototype chain you wish to check.  Returns true if protoObj is in the prototype chain of o."),console.log(""),console.log(""),console.log("Usage: var x = isPrototypeOf(protoObject, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isprototypeof");break;case a.isRealObject:console.log("isRealObject:"),console.log(""),console.log("Returns true if the value is a real Javascript object, i.e. an object for which funkierJS.isObject(a) === true"),console.log("and funkierJS.isNull(a) === false and funkierJS.isArray(a) === false."),console.log(""),console.log(""),console.log("Usage: var x = isRealObject(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isrealobject");break;case a.isResult:console.log("isResult:"),console.log(""),console.log("Returns true when the given value is a Result object, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isResult(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isresult");break;case a.isString:console.log("isString:"),console.log(""),console.log('Returns true if typeof the given value equals "string", false otherwise.'),console.log(""),console.log(""),console.log("Usage: var x = isString(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isstring");break;case a.isUndefined:console.log("isUndefined:"),console.log(""),console.log('Returns true if typeof the given value equals "undefined", false otherwise.'),console.log(""),console.log(""),console.log("Usage: var x = isUndefined(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isundefined");break;case a.join:console.log("join:"),console.log(""),console.log("Takes a separator value that can be coerced to a string, and an array. Returns a string, containing the toString"),console.log("of each element in the array, separated by the toString of the given separator."),console.log(""),console.log(""),console.log("Usage: var x = join(separator, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#join");break;case a.keyValues:console.log("keyValues:"),console.log(""),console.log("Takes an object, and returns an array containing 2-element arrays. The first element of each sub-array is the name"),console.log("of a property from the object, and the second element is the value of the property. This function only returns"),console.log("key-value pairs for the object's own properties. Returns an empty array for non-objects.  The order of the values"),console.log("is not defined."),console.log(""),console.log(""),console.log("Usage: var x = keyValues(obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#keyvalues");break;case a.keys:console.log("keys:"),console.log(""),console.log("A wrapper around Object.keys. Takes an object, and returns an array containing the names of the object's own"),
console.log("properties. Returns an empty array for non-objects."),console.log(""),console.log(""),console.log("Usage: var x = keys(obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#keys");break;case a.last:console.log("last:"),console.log(""),console.log("Takes an array, string or other arrayLike value, and returns the last element. Throws a TypeError when given an"),console.log("empty arrayLike."),console.log(""),console.log(""),console.log("Usage: var x = last(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#last");break;case a.leftShift:console.log("leftShift:"),console.log(""),console.log("A wrapper around the left shift (<<) operator."),console.log(""),console.log(""),console.log("Usage: var x = leftShift(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#leftshift");break;case a.length:console.log("length:"),console.log(""),console.log("Takes an array, string or other arrayLike value, and returns its length. Throws a TypeError if the given value is not an arrayLike."),console.log(""),console.log(""),console.log("Usage: var x = length(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#length");break;case a.lessThan:console.log("lessThan:"),console.log(""),console.log("Synonyms: lt"),console.log(""),console.log("A wrapper around the less than (<) operator."),console.log(""),console.log(""),console.log("Usage: var x = lessThan(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#lessthan");break;case a.lessThanEqual:console.log("lessThanEqual:"),console.log(""),console.log("Synonyms: lte"),console.log(""),console.log("A wrapper around the less than or equal (<=) operator."),console.log(""),console.log(""),console.log("Usage: var x = lessThanEqual(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#lessthanequal");break;case a.log:console.log("log:"),console.log(""),console.log("Returns the logarithm of y in the given base x. Note that this function uses the change of base formula, so may"),console.log("be subject to rounding errors."),console.log(""),console.log(""),console.log("Usage: var x = log(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#log");break;case a.makeDateFromMilliseconds:console.log("makeDateFromMilliseconds:"),console.log(""),console.log("A wrapper around calling the Date constructor with a single numeric argument. Throws a TypeError when called with a"),console.log("non-numeric argument. Returns a new Date object whose value represents the date which is that many elapsed"),console.log("milliseconds since the epoch."),console.log(""),console.log(""),console.log("Usage: var x = makeDateFromMilliseconds(milliseconds)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makedatefrommilliseconds");break;case a.makeDateFromString:console.log("makeDateFromString:"),console.log(""),console.log("A wrapper around calling the Date constructor with a single string argument. Throws a TypeError when called with"),console.log("a non-string argument, or a string that cannot be parsed as a date. Returns a new Date object whose value"),console.log("represents that given in the string."),console.log(""),console.log(""),console.log("Usage: var x = makeDateFromString(dateString)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makedatefromstring");break;case a.makeDayDate:console.log("makeDayDate:"),console.log(""),console.log("A curried wrapper around calling the Date constructor with three arguments: the year, the month and the day. No"),console.log("validation or type-checking occurs on the parameters. Excess arguments are ignored. All other fields in the Date"),console.log("are initialized to zero. Returns the new Date."),console.log(""),console.log(""),console.log("Usage: var x = makeDayDate(year, month, day)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makedaydate");break;case a.makeHourDate:console.log("makeHourDate:"),console.log(""),console.log("A curried wrapper around calling the Date constructor with four arguments: the year, the month, the day and the"),console.log("hour. No validation or type-checking occurs on the parameters. Excess arguments are ignored. All other fields in"),console.log("the Date are initialized to zero. Returns the new Date."),console.log(""),console.log(""),console.log("Usage: var x = makeHourDate(year, month, day, hour)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makehourdate");break;case a.makeMaybeReturner:console.log("makeMaybeReturner:"),console.log(""),console.log("Takes a function f. Returns a new function with the same arity as f. When called, the new function calls the"),console.log("original. If the function f throws during execution, then the Nothing object is returned. Otherwise the result of"),console.log("the function is wrapped in a Just and returned."),console.log(""),console.log(""),console.log("Usage: var x = makeMaybeReturner(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makemaybereturner");break;case a.makeMillisecondDate:console.log("makeMillisecondDate:"),console.log(""),console.log("A curried wrapper around calling the Date constructor with seven arguments: the year, the month, the day, the"),console.log("hour, the minute, the seconds, and the milliseconds. No validation or type-checking occurs on the parameters."),console.log("Returns the new Date."),console.log(""),console.log(""),console.log("Usage: var x = makeMillisecondDate(year, month, day, hour, minute, second, millisecond)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makemilliseconddate");break;case a.makeMinuteDate:console.log("makeMinuteDate:"),console.log(""),console.log("A curried wrapper around calling the Date constructor with five arguments: the year, the month, the day, the hour"),console.log("and the minute. No validation or type-checking occurs on the parameters. Excess arguments are ignored. All other"),console.log("fields in the Date are initialized to zero. Returns the new Date."),console.log(""),console.log(""),console.log("Usage: var x = makeMinuteDate(year, month, day, hour, minute)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makeminutedate");break;case a.makeMonthDate:console.log("makeMonthDate:"),console.log(""),console.log("A curried wrapper around calling the Date constructor with two arguments: the year and the month. No validation"),console.log("or type-checking occurs on the parameters. Excess arguments are ignored. All other fields in the Date are"),console.log("initialized to zero, with the exception of the day, which is initialized to 1. Returns the new Date."),console.log(""),console.log(""),console.log("Usage: var x = makeMonthDate(year, month)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makemonthdate");break;case a.makeResultReturner:console.log("makeResultReturner:"),console.log(""),console.log("Takes a function f. Returns a new function with the same arity as f. When called, the new function calls the"),console.log("original. If the function f throws during execution, then the exception will be caught, and an Err object"),console.log("wrapping the exception is returned. Otherwise the result of the function is wrapped in an Ok and returned."),console.log(""),console.log(""),console.log("Usage: var x = makeResultReturner(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makeresultreturner");break;case a.makeSecondDate:console.log("makeSecondDate:"),console.log(""),console.log("A curried wrapper around calling the Date constructor with six arguments: the year, the month, the day, the hour,"),console.log("the minute, and the seconds. No validation or type-checking occurs on the parameters. Excess arguments are ignored."),console.log("All other fields in the Date are initialized to zero. Returns the new Date."),console.log(""),console.log(""),console.log("Usage: var x = makeSecondDate(year, month, day, hour, minute, second)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makeseconddate");break;case a.map:console.log("map:"),console.log(""),console.log("Takes a function f, and an array,string or other arrayLike. Returns an array arr2 where, for each element arr2[i],"),console.log("we have arr2[i] === f(arr[i]). Throws a TypeError if the first argument is not a function, if the function does not"),console.log("have an arity of at least 1, or if the last argument is not an arrayLike."),console.log(""),console.log(""),console.log("Usage: var x = map(f, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#map");break;case a.matches:console.log("matches:"),console.log(""),console.log("Finds all matches within a string for a given regular expression. Takes two parameters: a regular expression and a"),console.log("string. Returns an array of objects, one object per match."),console.log(""),console.log(""),console.log("Usage: var x = matches(r, s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#matches");break;case a.matchesFrom:console.log("matchesFrom:"),console.log(""),console.log("Finds all matches within a string for a given regular expression from the given index. Takes three parameters: a"),console.log("regular expression, an index and a string. Returns an array of objects, one object per match."),console.log(""),console.log(""),console.log("Usage: var x = matchesFrom(r, index, s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#matchesfrom");break;case a.max:console.log("max:"),console.log(""),console.log("A curried wrapper around Math.max. Takes exactly two arguments."),console.log(""),console.log(""),console.log("Usage: var x = max(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#max");break;case a.maximum:console.log("maximum:"),console.log(""),console.log("Returns the largest element of the given array, string or arrayLike."),console.log(""),console.log(""),console.log("Usage: var x = maximum(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#maximum");break;case a.maybeExtract:console.log("maybeExtract:"),console.log(""),console.log("Synonyms: safeExtract, maybeTap, safeTap"),console.log(""),console.log("Extracts the given property from the given object, and wraps it in a Just value. When the property is"),console.log("not present, either in the object, or its prototype chain, then Nothing is returned."),console.log(""),console.log(""),console.log("Usage: var x = maybeExtract(prop, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#maybeextract");break;case a.min:console.log("min:"),console.log(""),console.log("A curried wrapper around Math.min. Takes exactly two arguments."),console.log(""),console.log(""),console.log("Usage: var x = min(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#min");break;case a.minimum:console.log("minimum:"),console.log(""),console.log("Returns the smallest element of the given array, string or arrayLike. Throws a TypeError if the value is not an"),console.log("arrayLike, or it is empty."),console.log(""),console.log(""),console.log("Usage: var x = minimum(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#minimum");break;case a.modify:console.log("modify:"),console.log(""),console.log("Synonyms: modifyProp"),console.log(""),console.log("Sets the given property to the given value on the given object, providing it exists, and returns the object."),console.log("Equivalent to evaluating o[prop] = value. The property will not be created when it doesn't exist on the object."),console.log("Throws when the property is not writable, when it has no setter function, or when the object is frozen."),console.log(""),console.log(""),console.log("Usage: var x = modify(prop, val, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#modify");break;case a.multiply:console.log("multiply:"),console.log(""),console.log("A wrapper around the multiplication operator."),console.log(""),console.log(""),console.log("Usage: var x = multiply(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#multiply");break;case a.not:console.log("not:"),console.log(""),console.log("A wrapper around the logical not (!) operator. Returns the logical negation of the given argument."),console.log(""),console.log(""),console.log("Usage: var x = not(b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#not");break;case a.notEqual:console.log("notEqual:"),console.log(""),console.log("Synonyms: notEquals"),console.log(""),console.log("A wrapper around the inequality (!=) operator."),console.log(""),console.log(""),console.log("Usage: var x = notEqual(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#notequal");break;case a.notPred:console.log("notPred:"),console.log(""),console.log("Takes a unary predicate function, and returns a new unary function that, when called, will call the original"),console.log("function with the given argument, and return the negated result. Throws if f is not a function, or has an"),console.log("arity other than 1."),console.log(""),console.log(""),console.log("Usage: var x = notPred(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#notpred");break;case a.nub:console.log("nub:"),console.log(""),console.log("Synonyms: uniq"),console.log(""),console.log("Takes an array, string or arrayLike. Returns a new array/string, with all duplicate elements—tested for strict"),console.log("equality—removed. The order of elements is preserved."),console.log(""),console.log(""),console.log("Usage: var x = nub(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#nub");break;case a.nubWith:console.log("nubWith:"),console.log(""),console.log("Synonyms: uniqWith"),console.log(""),console.log("Takes a predicate function of arity 2, and an array, string or arrayLike. Returns a new array/string, with all"),console.log("duplicate elements removed. A duplicate is defined as a value for which the predicate function returned true when"),console.log("called with a previously encountered element and the element under consideration. The order of elements is"),console.log("preserved."),console.log(""),console.log(""),console.log("Usage: var x = nubWith(pred, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#nubwith");break;case a.objectCurry:console.log("objectCurry:"),console.log(""),console.log("Given a function, returns a curried function which calls the underlying with the execution context active when the"),console.log("first arguments are supplied. This means that when partially applying the function, the resulting functions will"),console.log("have their execution context permanently bound. This method of binding is designed for currying functions that"),console.log("exist on an object's prototype. The function will be only called when sufficient arguments have been supplied."),console.log("Superfluous arguments are discarded. The resulting function may be called without any arguments even when it has"),console.log("non-zero arity, for the purposes of establishing an execution context (usually when passing the function to some"),console.log("other function-manipulating function); however the partial applications of the result will throw if they"),console.log("require at least one argument, but are invoked without any. objectCurry throws if its parameter is not a"),console.log("function. The resulting function will throw if invoked with an undefined execution context."),console.log(""),console.log(""),console.log("Usage: var x = objectCurry(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#objectcurry");break;case a.objectCurryWithArity:console.log("objectCurryWithArity:"),console.log(""),console.log("Given an arity and function, returns a curried function which calls the underlying with the execution context"),console.log("active when the first arguments are supplied. This means that when partially applying the function, the"),console.log("resulting functions will have their execution context permanently bound. This method of binding is designed for"),console.log("currying functions that exist on an object's prototype. The function will be only called when the specified number"),console.log("of arguments have been supplied. Superfluous arguments are discarded. If the resulting function has non-zero"),console.log("length, it may be called without any arguments for the purpose of establishing an execution context; however"),console.log("its partial applications throw if they require at least one argument, but are invoked without any."),console.log("objectCurryWithArity throws if the arity is not a natural number or if the second parameter is not a function."),console.log("The resulting function will throw if invoked with an undefined execution context."),console.log(""),console.log(""),console.log("Usage: var x = objectCurryWithArity(n, f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#objectcurrywitharity");break;case a.occurrences:console.log("occurrences:"),console.log(""),console.log("Takes a value—needle—and haystack, an array, arrayLike or string. Searches for all occurrences of the value—tested"),console.log("for strict equality—and returns an array containing all the indices into haystack where the values may be found."),console.log(""),console.log(""),console.log("Usage: var x = occurrences(needle, haystack)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#occurrences");break;case a.occurrencesWith:console.log("occurrencesWith:"),console.log(""),console.log("Takes a predicate function pred, and haystack, an array, arrayLike or string. Searches for all occurrences of the"),console.log("value—tested by the given predicate—and returns an array containing all the indices into haystack where the"),console.log("predicate holds."),console.log(""),console.log(""),console.log("Usage: var x = occurrencesWith(needle, haystack)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#occurrenceswith");break;case a.odd:console.log("odd:"),console.log(""),console.log("Given a number, returns true if it is not divisible by 2, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = odd(x)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#odd");break;case a.or:console.log("or:"),console.log(""),console.log("A wrapper around the logical or (||) operator. Returns the logical or of the given arguments"),console.log(""),console.log(""),console.log("Usage: var x = or(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#or");break;case a.orPred:console.log("orPred:"),console.log(""),console.log("Takes two unary predicate functions, and returns a new unary function that, when called, will call the original"),console.log("functions with the given argument, and logically or their results, returning that value. Throws if either"),console.log("argument is not a function of arity 1."),console.log(""),console.log(""),console.log("Usage: var x = orPred(f1, f2)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#orpred");break;case a.ord:console.log("ord:"),console.log(""),console.log("Takes a string s, and returns the Unicode value of the character at index 0. Equivalent to toCharCode(0, s)."),console.log(""),console.log(""),console.log("Usage: var x = ord(s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#ord");break;case a.parseInt:console.log("parseInt:"),console.log(""),console.log("A curried wrapper around parseInt when called with one argument. Takes a string and attempts to convert it"),console.log("assuming it represents a number in base 10. Returns NaN if the string does not represent a valid number in base"),console.log("10."),console.log(""),console.log(""),console.log("Usage: var x = parseInt(s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#parseint");break;case a.permuteLeft:console.log("permuteLeft:"),console.log(""),console.log("Synonyms: rotateLeft"),console.log(""),console.log("Takes a function, returns a curried function of the same arity which takes the same parameters, except in a"),console.log("different position. The first parameter of the original function will be the last parameter of the new function,"),console.log("the second parameter of the original will be the first parameter of the new function and so on. This function is"),console.log("essentially a no-op for curried functions of arity 0 and 1, equivalent to curry for uncurried"),console.log("functions of arities 0 and 1, and equivalent to flip for functions of arity 2."),console.log(""),console.log(""),console.log("Usage: var x = permuteLeft(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#permuteleft");break;case a.permuteRight:console.log("permuteRight:"),console.log(""),console.log("Synonyms: rotateRight"),console.log(""),console.log("Takes a function, returns a curried function of the same arity which takes the same parameters, except in a"),console.log("different position. The first parameter of the original function will be the second parameter of the new function,"),console.log("the second parameter of the original will be the third parameter of the new function and so on. This function is"),console.log("essentially a no-op for curried functions of arity 0 and 1, equivalent to curry for uncurried"),console.log("functions of arities 0 and 1, and equivalent to flip for functions of arity 2."),console.log(""),console.log(""),console.log("Usage: var x = permuteRight(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#permuteright");break;case a.post:console.log("post:"),console.log(""),console.log("Takes two functions wrappingFunction, and f, and returns a new function with the same arity as the function f,"),console.log("and curried in the same manner (or curried with curry if f was not curried). When this new function"),console.log("is called, it will first call f with the same execution context and arguments that the new function was called"),console.log("with. Its return value will be saved. Next, wrappingFunction will be called, again with the same execution"),console.log("context, and two arguments: an array containing the arguments to f, and f's return value. Anything returned from"),console.log("wrappingFunction will be discarded, and f's return value will be returned."),console.log(""),console.log(""),console.log("Usage: var x = post(wrappingFunction, f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#post");break;case a.pre:console.log("pre:"),console.log(""),console.log("Takes two functions wrappingFunction, and f, and returns a new function with the same arity as the function f,"),console.log("and curried in the same manner (or curried with curry if f was not curried). When this new function"),console.log("is called, it will first call wrappingFunction, with the same execution context, and a single argument: an array"),console.log("containing all the arguments the function was called with. When wrappingFunction returns, its return value"),console.log("will be discarded, and f will be called with the same execution context and invoked with the same arguments as the"),console.log("new function was invoked with. The return value from f will be returned."),console.log(""),console.log(""),console.log("Usage: var x = pre(wrappingFunction, f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#pre");break;case a.prepend:console.log("prepend:"),console.log(""),console.log("Takes a value, and an array, string or arrayLike, and returns a new array or string with the given value prepended."),console.log(""),console.log(""),console.log("Usage: var x = prepend(value, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#prepend");break;case a.product:console.log("product:"),console.log(""),console.log("Returns the product of the elements of the given array, or arrayLike. Throws a TypeError if the value is not an"),console.log("arrayLike, or it is empty."),console.log(""),console.log(""),console.log("Usage: var x = product(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#product");break;case a.range:console.log("range:"),console.log(""),console.log("Takes two numbers, a and b. Returns an array containing the arithmetic sequence of elements from a up to but not"),console.log("including b, each element increasing by 1."),console.log(""),console.log(""),console.log("Usage: var x = range(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#range");break;case a.rangeStride:console.log("rangeStride:"),console.log(""),console.log("Synonyms: rangeStep"),console.log(""),console.log("Takes three numbers, a stride and b. Returns an array containing the arithmetic sequence of elements from a up to"),console.log("but not including b, each element increasing by stride."),console.log(""),console.log(""),console.log("Usage: var x = rangeStride(a, stride, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#rangestride");break;case a.regExpSplit:console.log("regExpSplit:"),console.log(""),console.log("Synonyms: splitRegExp"),console.log(""),console.log("A curried wrapper around String.prototype.split. Takes a pattern regexp, and a target string s, and returns an"),console.log("array containing the substrings of s that were separated by substrings matching the given pattern."),console.log(""),console.log(""),console.log("Usage: var x = regExpSplit(delimiter, s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#regexpsplit");break;case a.regExpSplitMax:console.log("regExpSplitMax:"),console.log(""),console.log("Synonyms: regExpSplitLimit, regExpSplitCount"),console.log(""),console.log("A curried wrapper around String.prototype.split. Takes a RegExp delimiter, a count, and a target string s, and"),console.log("returns an array containing the substrings of s that were separated by strings matching the given delimiter, the"),console.log("returned array containing at most limit such substrings."),console.log(""),console.log(""),console.log("Usage: var x = regExpSplitMax(delimiter, limit, s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#regexpsplitmax");break;case a.rem:console.log("rem:"),console.log(""),console.log("A wrapper around the remainder (%) operator."),console.log(""),console.log(""),console.log("Usage: var x = rem(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#rem");break;case a.replicate:console.log("replicate:"),console.log(""),console.log("Takes a length and a value, and returns an array of the given length, where each element is the given value. Throws"),console.log("a TypeError if the given length is negative."),console.log(""),console.log(""),console.log("Usage: var x = replicate(length, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#replicate");break;case a.reverse:console.log("reverse:"),console.log(""),console.log("Takes an array, string or arrayLike, and returns a new array or string that is the reverse of the original."),console.log(""),console.log(""),console.log("Usage: var x = reverse(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#reverse");break;case a.rightShift:console.log("rightShift:"),console.log(""),console.log("A wrapper around the right shift (>>) operator."),console.log(""),console.log(""),console.log("Usage: var x = rightShift(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#rightshift");break;case a.rightShiftZero:console.log("rightShiftZero:"),console.log(""),console.log("A wrapper around the left shift (>>>) operator."),console.log(""),console.log(""),console.log("Usage: var x = rightShiftZero(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#rightshiftzero");break;case a.safeCreateProp:console.log("safeCreateProp:"),console.log(""),console.log("Synonyms: maybeCreate"),console.log(""),console.log("Creates the given property to the given value on the given object, returning the object wrapped in a Just."),console.log("Equivalent to evaluating o[prop] = value. The property will be not be modified if it already exists; in"),console.log("that case Nothing will be returned. Additionally, Nothing will be returned when the object is frozen, sealed, or"),console.log("cannot be extended. Note that the property will be successfully created when it already exists, but only in the"),console.log("prototype chain."),console.log(""),console.log(""),console.log("Usage: var x = safeCreateProp(prop, val, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#safecreateprop");break;case a.safeDeleteProp:console.log("safeDeleteProp:"),console.log(""),console.log("Synonyms: maybeDelete"),console.log(""),console.log("Deletes the given property from the given the given object, returning the object wrapped as a Just"),console.log("value. Equivalent to evaluating delete o[prop]. When the property is not configurable (either due to the"),console.log("individual descriptor or the object being frozen or sealed) then Nothing will be returned."),console.log(""),console.log(""),console.log("Usage: var x = safeDeleteProp(prop, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#safedeleteprop");break;case a.safeModify:console.log("safeModify:"),console.log(""),console.log("Synonyms: maybeModify, maybeModifyProp, safeModifyProp"),console.log(""),console.log("Sets the given property to the given value on the given object, providing it exists, and returns the object,"),console.log("wrapped in a Just value when successful. Equivalent to evaluating o[prop] = value. The property will"),console.log("not be created when it doesn't exist on the object; nor will it be amended when the property is not writable, when"),console.log("it has no setter function, or when the object is frozen. In such cases, Nothing will be returned."),console.log(""),console.log(""),console.log("Usage: var x = safeModify(prop, val, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#safemodify");break;case a.safeSet:console.log("safeSet:"),console.log(""),console.log("Synonyms: maybeSet, maybeSetProp, safeSetProp"),console.log(""),console.log("Sets the given property to the given value on the given object, returning the object wrapped in a Just"),console.log("value when successful. Equivalent to evaluating o[prop] = value. The property will be created if it doesn't exist"),
console.log("on the object. If unable to modify or create the property, then Nothing will be returned."),console.log(""),console.log(""),console.log("Usage: var x = safeSet(prop, val, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#safeset");break;case a.sectionLeft:console.log("sectionLeft:"),console.log(""),console.log("Partially applies the binary function f with the given argument x, with x being supplied as the first argument"),console.log("to f. The given function f will be curried if necessary. Throws if f is not a binary function."),console.log(""),console.log(""),console.log("Usage: var x = sectionLeft(f, x)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#sectionleft");break;case a.sectionRight:console.log("sectionRight:"),console.log(""),console.log("Partially applies the binary function f with the given argument x, with x being supplied as the second argument"),console.log("to f. The given function f will be curried if necessary. Throws if f is not a binary function."),console.log(""),console.log(""),console.log("Usage: var x = sectionRight(f, x)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#sectionright");break;case a.set:console.log("set:"),console.log(""),console.log("Synonyms: setProp"),console.log(""),console.log("Sets the given property to the given value on the given object, returning the object. Equivalent to evaluating"),console.log("o[prop] = value. The property will be created if it doesn't exist on the object. Throws when the property is"),console.log("not writable, when it has no setter function, when the object is frozen, or when it is sealed and the property"),console.log("is not already present."),console.log(""),console.log(""),console.log("Usage: var x = set(prop, val, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#set");break;case a.setDayOfMonth:console.log("setDayOfMonth:"),console.log(""),console.log("A wrapper around Date.prototype.setDate. Takes a value between 1 and 31, and a Date object, and sets the day of"),console.log("the month to the given value. Invalid values will cause a change in other fields: for example, changing the day to"),console.log("31 in a month with 30 days will increment the month, which may in turn increment the year. Returns the given 'Date`"),console.log("object."),console.log(""),console.log(""),console.log("Usage: var x = setDayOfMonth(day, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setdayofmonth");break;case a.setFullYear:console.log("setFullYear:"),console.log(""),console.log("A wrapper around Date.prototype.setFullYear. Takes a value and a Date object, and sets the year to the given"),console.log("value. This may cause a change in other fields: for example, setting the year when the month and day represent"),console.log("February 29 respectively may cause those values to change to March 1 if the new year is not a leap year."),console.log("Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setFullYear(year, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setfullyear");break;case a.setHours:console.log("setHours:"),console.log(""),console.log("A wrapper around Date.prototype.setHours. Takes a value between 0 and 23 representing the hour of the day, and"),console.log("a Date object, and sets the hour to the given value. Invalid values will cause a change in other fields: if the"),console.log("value > 23, then the day will be incremented by hours div 24. This may in turn cause a cascade of increments"),console.log("to other fields. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setHours(hours, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#sethours");break;case a.setMilliseconds:console.log("setMilliseconds:"),console.log(""),console.log("A wrapper around Date.prototype.setMilliseconds. Takes a value between 0 and 999 representing the milliseconds,"),console.log("and a Date object, and sets the milliseconds to the given value. Invalid values will cause a change in other"),console.log("fields: if the value > 999, then the seconds will be incremented by milliseconds div 1000. This may in turn cause"),console.log("a cascade of increments to other fields. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setMilliseconds(milliseconds, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setmilliseconds");break;case a.setMinutes:console.log("setMinutes:"),console.log(""),console.log("A wrapper around Date.prototype.setMinutes. Takes a value between 0 and 59 representing the minutes, and a"),console.log("Date object, and sets the minutes to the given value. Invalid values will cause a change in other fields: if the"),console.log("value > 59, then the hours will be incremented by minutes div 60. This may in turn cause a cascade of increments"),console.log("to other fields. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setMinutes(minutes, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setminutes");break;case a.setMonth:console.log("setMonth:"),console.log(""),console.log("A wrapper around Date.prototype.setMonth. Takes a value between 0 and 11 representing the month, and a Date"),console.log("object, and sets the month to the given value. Invalid values will cause a change in other fields: if the"),console.log("value > 11, then the year will be incremented by month div 12. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setMonth(month, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setmonth");break;case a.setSeconds:console.log("setSeconds:"),console.log(""),console.log("A wrapper around Date.prototype.setSeconds. Takes a value between 0 and 59 representing the seconds, and a"),console.log("Date object, and sets the seconds to the given value. Invalid values will cause a change in other fields: if the"),console.log("value > 59, then the minutes will be incremented by seconds div 60. This may in turn cause a cascade of increments"),console.log("to other fields. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setSeconds(seconds, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setseconds");break;case a.setTimeSinceEpoch:console.log("setTimeSinceEpoch:"),console.log(""),console.log("A wrapper around Date.prototype.setTime. Takes a value representing the number of seconds since midnight,"),console.log("January 1, 1970 and a date. Simultaneously sets all of the fields of the given date to represent the date and"),console.log("time that is that many seconds since the epoch. Returns the given Date."),console.log(""),console.log(""),console.log("Usage: var x = setTimeSinceEpoch(milliseconds, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#settimesinceepoch");break;case a.setUTCDayOfMonth:console.log("setUTCDayOfMonth:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCDate. Takes a value between 1 and 31, and a Date object, and sets the day"),console.log("of the month to the local equivalent of the given value. Invalid values will cause a change in other fields: for"),console.log("example, changing the day to 31 in a month with 30 days will increment the month, which may in turn increment the"),console.log("year. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCDayOfMonth(day, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutcdayofmonth");break;case a.setUTCFullYear:console.log("setUTCFullYear:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCFullYear. Takes a value and a Date object, and sets the year to the local"),console.log("equivalent of the given value. This may cause a change in other fields: for example, setting the year when the"),console.log("month and day represent February 29 respectively may cause those values to change to March 1 if the new year is not"),console.log("a leap year. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCFullYear(year, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutcfullyear");break;case a.setUTCHours:console.log("setUTCHours:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCHours. Takes a value between 0 and 23 representing the hour of the day, and"),console.log("a Date object, and sets the hour to the local equivalent of the given value. Invalid values will cause a change"),console.log("in other fields: if the value > 23, then the day will be incremented by hours div 24. This may in turn cause a"),console.log("cascade of increments to other fields. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCHours(hours, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutchours");break;case a.setUTCMilliseconds:console.log("setUTCMilliseconds:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCMilliseconds. Takes a value between 0 and 999 representing the"),console.log("milliseconds, and a Date object, and sets the milliseconds to the local equivalent of the given value. Invalid"),console.log("values will cause a change in other fields: if the value > 999, then the seconds will be incremented by"),console.log("milliseconds div 1000. This may in turn cause a cascade of increments to other fields. Returns the given Date"),console.log("object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCMilliseconds(milliseconds, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutcmilliseconds");break;case a.setUTCMinutes:console.log("setUTCMinutes:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCMinutes. Takes a value between 0 and 59 representing the minutes, and a"),console.log("Date object, and sets the minutes to the local equivalent of the given value. Invalid values will cause a change"),console.log("in other fields: if the value > 59, then the hours will be incremented by minutes div 60. This may in turn cause a"),console.log("cascade of increments to other fields. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCMinutes(minutes, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutcminutes");break;case a.setUTCMonth:console.log("setUTCMonth:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCMonth. Takes a value between 0 and 11 representing the month, and a"),console.log("Date object, and sets the month to the local equivalent of the given value. Invalid values will cause a change"),console.log("in other fields: if the value > 11, then the year will be incremented by month div 12. Returns the given Date"),console.log("object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCMonth(month, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutcmonth");break;case a.setUTCSeconds:console.log("setUTCSeconds:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCSeconds. Takes a value between 0 and 59 representing the seconds, and a"),console.log("Date object, and sets the seconds to the local equivalent of the given value. Invalid values will cause a change"),console.log("in other fields: if the value > 59, then the minutes will be incremented by seconds div 60. This may in turn cause"),console.log("a cascade of increments to other fields. Returns the local equivalent of the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCSeconds(seconds, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutcseconds");break;case a.slice:console.log("slice:"),console.log(""),console.log("Takes two numbers, from and to, and an array, string or arrayLike. Returns the subarray or string containing the"),console.log("elements between these two points (inclusive at from, exclusive at to). If to is greater than the length of the"),console.log("object, then all values from 'from' will be returned."),console.log(""),console.log(""),console.log("Usage: var x = slice(from, to, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#slice");break;case a.snd:console.log("snd:"),console.log(""),console.log("Synonyms: second"),console.log(""),console.log("Accessor function for Pair tuples. Returns the second value that was supplied to the Pair"),console.log("constructor. Throws if called with a non-pair value."),console.log(""),console.log(""),console.log("Usage: var x = snd(p)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#snd");break;case a.some:console.log("some:"),console.log(""),console.log("Synonyms: any"),console.log(""),console.log("Takes two parameters: a predicate function p that takes one argument, and an array, string or arrayLike. Calls the"),console.log("predicate with every element of the array or string, until either the predicate function returns true, or the end"),console.log("of the array or string is reached."),console.log(""),console.log(""),console.log("Usage: var x = some(pred, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#some");break;case a.sort:console.log("sort:"),console.log(""),console.log("Takes an array, string or arrayLike, and returns a new array, sorted in lexicographical order."),console.log(""),console.log(""),console.log("Usage: var x = sort(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#sort");break;case a.sortWith:console.log("sortWith:"),console.log(""),console.log("Takes a function of two arguments, and an array, string or arrayLike. Returns a new array/string, sorted per the"),console.log('given function. The function should return a negative number if the first argument is "less than" the second, 0 if'),console.log('the two arguments are "equal", and a positive number if the first argument is greater than the second.'),console.log(""),console.log(""),console.log("Usage: var x = sortWith(f, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#sortwith");break;case a.split:console.log("split:"),console.log(""),console.log("A curried wrapper around String.prototype.split. Takes a string delimiter, and a target string s, and returns an"),console.log("array containing the substrings of s that were separated by the given delimiter."),console.log(""),console.log(""),console.log("Usage: var x = split(delimiter, s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#split");break;case a.splitMax:console.log("splitMax:"),console.log(""),console.log("Synonyms: splitLimit, splitCount"),console.log(""),console.log("A curried wrapper around String.prototype.split. Takes a string delimiter, a count, and a target string s, and"),console.log("returns an array containing the substrings of s that were separated by the given delimiter, the returned array"),console.log("containing at most limit such substrings."),console.log(""),console.log(""),console.log("Usage: var x = splitMax(delimiter, limit, s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#splitmax");break;case a.strictEquals:console.log("strictEquals:"),console.log(""),console.log("A wrapper around the strict equality (===) operator."),console.log(""),console.log(""),console.log("Usage: var x = strictEquals(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#strictequals");break;case a.strictNotEqual:console.log("strictNotEqual:"),console.log(""),console.log("Synonyms: strictNotEquals, strictInequality"),console.log(""),console.log("A wrapper around the strict inequality (!==) operator."),console.log(""),console.log(""),console.log("Usage: var x = strictNotEqual(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#strictnotequal");break;case a.stringToInt:console.log("stringToInt:"),console.log(""),console.log("Synonyms: parseIntInBase"),console.log(""),console.log("A curried wrapper around parseInt when called with two arguments. Takes a base between 2 and 36, and a string, and"),console.log("attempts to convert the string assuming it represents a number in the given base. Returns NaN if the string does"),console.log("not represent a valid number in the given base."),console.log(""),console.log(""),console.log("Usage: var x = stringToInt(base, s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#stringtoint");break;case a.subtract:console.log("subtract:"),console.log(""),console.log("A wrapper around the subtraction operator."),console.log(""),console.log(""),console.log("Usage: var x = subtract(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#subtract");break;case a.sum:console.log("sum:"),console.log(""),console.log("Returns the sum of the elements of the given array, or arrayLike. Throws a TypeError if the value is not an"),console.log("arrayLike, or it is empty."),console.log(""),console.log(""),console.log("Usage: var x = sum(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#sum");break;case a.tail:console.log("tail:"),console.log(""),console.log("Takes an array, string or arrayLike. Returns an array or string containing every element except the first."),console.log(""),console.log(""),console.log("Usage: var x = tail(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tail");break;case a.tails:console.log("tails:"),console.log(""),console.log("Synonyms: suffixes"),console.log(""),console.log("Takes an array, string or arrayLike. Returns all the suffixes of the given arrayLike."),console.log(""),console.log(""),console.log("Usage: var x = tails(arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tails");break;case a.take:console.log("take:"),console.log(""),console.log("Takes a count, and an array, string or arrayLike. Returns an array or string containing the first count elements"),console.log("of the given arrayLike."),console.log(""),console.log(""),console.log("Usage: var x = take(count, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#take");break;case a.takeWhile:console.log("takeWhile:"),console.log(""),console.log("Takes a predicate function pred, and source, which should be an array, string or arrayLike. Returns a new array or"),console.log("string containing the initial members of the given arrayLike for which the predicate returned true."),console.log(""),console.log(""),console.log("Usage: var x = takeWhile(pred, arr)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#takewhile");break;case a.test:console.log("test:"),console.log(""),console.log("A curried wrapper around RegExp.prototype.test. Takes a regexp, and a string s, and returns true if the string"),console.log("contains a substring matching the given pattern, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = test(regexp, s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#test");break;case a.toBaseAndString:console.log("toBaseAndString:"),console.log(""),console.log("Synonyms: toBaseAndRadix"),console.log(""),console.log("A curried wrapper around Number.prototype.toString. Takes a base between 2 and 36, and a number. Returns a string"),console.log("representing the given number in the given base."),console.log(""),console.log(""),console.log("Usage: var x = toBaseAndString(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tobaseandstring");break;case a.toCharCode:console.log("toCharCode:"),console.log(""),console.log("A curried wrapper around String.charCodeAt. Takes an index i, and a string s, and returns the Unicode value of"),console.log("the character at the given index in s."),console.log(""),console.log(""),console.log("Usage: var x = toCharCode(i, s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tocharcode");break;case a.toDateString:console.log("toDateString:"),console.log(""),console.log("A wrapper around Date.prototype.toDateString. Takes a Date object, and returns a string representing the date"),console.log("portion of the object."),console.log(""),console.log(""),console.log("Usage: var x = toDateString(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#todatestring");break;case a.toEpochMilliseconds:console.log("toEpochMilliseconds:"),console.log(""),console.log("A wrapper around Date.prototype.getTime. Takes a Date object, and returns the number of milliseconds elapsed"),console.log("since midnight, January 1 1970."),console.log(""),console.log(""),console.log("Usage: var x = toEpochMilliseconds(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#toepochmilliseconds");break;case a.toExponential:console.log("toExponential:"),console.log(""),console.log("A curried wrapper around Number.prototype.toExponential. Takes the number of digits after the decimal point"),console.log("(which should be between 0 and 20), and a number. Returns a string representing the number in exponential notation,"),console.log("with the specified number of places after the decimal point."),console.log(""),console.log(""),console.log("Usage: var x = toExponential(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#toexponential");break;case a.toFixed:console.log("toFixed:"),console.log(""),console.log("A curried wrapper around Number.prototype.toFixed. Takes the number of digits after the decimal point (which"),console.log("should be between 0 and 20), and a number. Returns a string representing the number but with the specified number"),console.log("of places after the decimal point."),console.log(""),console.log(""),console.log("Usage: var x = toFixed(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tofixed");break;case a.toISOString:console.log("toISOString:"),console.log(""),console.log("A wrapper around Date.prototype.toISOString. Takes a Date object, and returns a string representation of the"),console.log("date in ISO format."),console.log(""),console.log(""),console.log("Usage: var x = toISOString(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#toisostring");break;case a.toLocaleDateString:console.log("toLocaleDateString:"),console.log(""),console.log("A wrapper around Date.prototype.toLocaleDateString. Takes a Date object, and  a string representing the date"),console.log("portion of the object, formatted according to locale conventions."),console.log(""),console.log(""),console.log("Usage: var x = toLocaleDateString(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tolocaledatestring");break;case a.toLocaleLowerCase:console.log("toLocaleLowerCase:"),console.log(""),console.log("Equivalent to String.prototype.toLocaleLowerCase. Takes a string s, and returns a lowercase version of s,"),console.log("converted following locale conventions."),console.log(""),console.log(""),console.log("Usage: var x = toLocaleLowerCase(s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tolocalelowercase");break;case a.toLocaleString:console.log("toLocaleString:"),console.log(""),console.log("Calls val's toLocaleString property, and returns the result."),console.log(""),console.log(""),console.log("Usage: var x = toLocaleString(val)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tolocalestring");break;case a.toLocaleUpperCase:console.log("toLocaleUpperCase:"),console.log(""),console.log("Equivalent to String.prototype.toLocaleUpperCase. Takes a string s, and returns a uppercase version of s,"),console.log("converted following locale conventions."),console.log(""),console.log(""),console.log("Usage: var x = toLocaleUpperCase(s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tolocaleuppercase");break;case a.toLowerCase:console.log("toLowerCase:"),console.log(""),console.log("Equivalent to String.prototype.toLowerCase. Takes a string s, and returns a lowercase version of s."),console.log(""),console.log(""),console.log("Usage: var x = toLowerCase(s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tolowercase");break;case a.toPrecision:console.log("toPrecision:"),console.log(""),console.log("A curried wrapper around Number.prototype.toPrecision. Takes the number of digits significant digits (which"),console.log("should be between 1 and 21), and a number. Returns a string representing the number with the specified number"),console.log("of significant digits."),console.log(""),console.log(""),console.log("Usage: var x = toPrecision(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#toprecision");break;case a.toString:console.log("toString:"),console.log(""),console.log("Calls val's toString property, and returns the result."),console.log(""),console.log(""),console.log("Usage: var x = toString(val)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tostring");break;case a.toTimeString:console.log("toTimeString:"),console.log(""),console.log("A wrapper around Date.prototype.toTimeString. Takes a Date object, and returns a string representing the time"),console.log("portion of the object."),console.log(""),console.log(""),console.log("Usage: var x = toTimeString(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#totimestring");break;case a.toUTCString:console.log("toUTCString:"),console.log(""),console.log("A wrapper around Date.prototype.toUTCString. Takes a Date object, and returns a string representation of the"),console.log("equivalent date in UTC."),console.log(""),console.log(""),console.log("Usage: var x = toUTCString(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#toutcstring");break;case a.toUpperCase:console.log("toUpperCase:"),console.log(""),console.log("Equivalent to String.prototype.toUpperCase. Takes a string s, and returns a uppercase version of s."),console.log(""),console.log(""),console.log("Usage: var x = toUpperCase(s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#touppercase");break;case a.trim:console.log("trim:"),console.log(""),console.log("Returns a string containing the contents of the original string, less any leading and trailing whitespace."),console.log(""),console.log(""),console.log("Usage: var x = trim(s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#trim");break;case a.unzip:console.log("unzip:"),console.log(""),console.log("Takes an array of Pairs, and returns a Pair. The first element is an array containing the first element from each"),console.log("pair, and likewise the second element is an array containing the second elements."),console.log(""),console.log(""),console.log("Usage: var x = unzip(source)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#unzip");break;case a.wrap:console.log("wrap:"),console.log(""),console.log("Takes 3 functions, before, after and f. Returns a new function with the same arity as f, and curried in the same"),console.log("manner (or curried using curry if f was not curried. The functions before, f, and after will be called"),console.log("when the returned function is invoked."),console.log(""),console.log(""),console.log("Usage: var x = wrap(before, after, f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#wrap");break;case a.xor:console.log("xor:"),console.log(""),console.log("A wrapper around the logical xor operator. Returns the logical xor of the given arguments"),console.log(""),console.log(""),console.log("Usage: var x = xor(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#xor");break;case a.xorPred:console.log("xorPred:"),console.log(""),console.log("Takes two unary predicate functions, and returns a new unary function that, when called, will call the original"),console.log("functions with the given argument, and logically xor their results, returning that value. Throws if either"),console.log("argument is not a function of arity 1."),console.log(""),console.log(""),console.log("Usage: var x = xorPred(f1, f2)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#xorpred");break;case a.zip:console.log("zip:"),console.log(""),console.log("Takes two arrayLikes, a and b, and returns a new array. The new array has the same length as the smaller of the two"),console.log("arguments. Each element is a Pair p, such that fst(p) === a[i] and snd(p) === b[i] for each position"),console.log("i in the result."),console.log(""),console.log(""),console.log("Usage: var x = zip(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#zip");break;case a.zipWith:console.log("zipWith:"),console.log(""),console.log("Returns array"),console.log(""),console.log(""),console.log("Usage: var x = zipWith(f, a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#zipwith");break;default:console.log("No help available")}};a.help=b}}()},{}],18:[function(a,b,c){b.exports=function(){"use strict";var a=function(a,b){b=b||{};var c=b.errorMessage||"Value is not an integer";if(b.strict&&"number"!=typeof a)throw new TypeError(c);if(a-=0,isNaN(a)||!isFinite(a))throw new TypeError(c);if(a!==Math.round(a))throw new TypeError(c);return a},b=function(b,c){c=c||{};var d=c.errorMessage||"Value is not a positive integer",e=Object.create(c);if(e.errorMessage=d,b=a(b,e),0>b)throw new TypeError(d);return b},c=function(a,b){b=b||{};var c=b.strict||!1,d=b.allowNull||!1,e=c?["object"]:["string","function","object"];return c&&Array.isArray(a)?!1:null===a&&d||null!==a&&-1!==e.indexOf(typeof a)},d=function(a,b){b=b||{};var d=b.message||"Value is not an object";b.allowNull||!1;if(!c(a,b))throw new TypeError(d);return a},e=function(a,b){if(b=b||!1,"string"==typeof a)return!b;if("object"!=typeof a||null===a)return!1;if(Array.isArray(a))return!0;if(!a.hasOwnProperty("length"))return!1;var c=a.length;return 0===c||a.hasOwnProperty("0")&&a.hasOwnProperty(""+(c-1))},f=function(a,b){b=b||{};var c=b.message||"Value is not a string or array";if(!e(a,b.noStrings))throw new TypeError(c);return"string"==typeof a||"dontSlice"in b&&b.dontSlice?a:[].slice.call(a)},g=function(a){switch(typeof a){case"number":case"boolean":case"undefined":return""+a;case"string":return"'"+a+"'";case"function":return a.toString();case"object":return null===a?"null":Array.isArray(a)?"["+a.join(", ")+"]":"{"+a.toString()+"}";default:
return a.toString()}};return{checkArrayLike:f,checkIntegral:a,checkObjectLike:d,checkPositiveIntegral:b,isArrayLike:e,isObjectLike:c,valueStringifier:g}}()},{}]},{},[16])(16)});