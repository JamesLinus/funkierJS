!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.funkierJS=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=b.curryWithArity,e=b.arityOf,f=b._chooseCurryStyle,g=b._curryWithConsistentStyle,h=a("../funcUtils"),i=h.checkFunction,j=a("../internalUtilities"),k=j.checkPositiveIntegral,l=j.isArrayLike,m=c(function(a,b){var d=(e(b),e(a));a=i(a,{arity:1,minimum:!0,message:"function f must have arity ≥ 1"}),b=i(b,{arity:1,minimum:!0,message:"function g must have arity ≥ 1"}),a=e._isCurried(a)?a:c(a),b=e._isCurried(b)?b:c(b);var g=d;return f(a,b,function(c){var d=[].slice.call(arguments),e=([d[0]],d.slice(1));return a.apply(this,[b.apply(this,[d[0]])].concat(e))},g)}),n=c(function(a,b,d){a=k(a,{errorMessage:"argCount must be non-negative"}),b=i(b,{arity:1,minimum:!0,message:"function f must have arity ≥ 1"}),d=i(d,{arity:a,minimum:!0,message:"function g must have arity ≥ "+a}),b=e._isCurried(b)?b:c(b),d=e._isCurried(d)?d:c(d);var g=e(b),h=g-1+a;return f(b,d,function(){var c=[].slice.call(arguments),e=c.slice(0,a),f=c.slice(a);return b.apply(this,[d.apply(this,e)].concat(f))},h)}),o=c(function(a){return a}),p=c(function(a,b){return a}),q=m(d(0),p),r=c(function(a){return a=i(a,{arity:2,maximum:!0,message:"Value to be flipped must be a function of arity 2"}),a=e._isCurried(a)?a:c(a),e(a)<2?a:g(a,function(b,c){return a(c,b)})}),s=c(function(a){if(!l(a,!0))throw new TypeError("composeMany requires an array or array-like object of functions");if(0===a.length)throw new TypeError("composeMany called with empty array");if(0===e(a[a.length-1]))throw new TypeError("Cannot compose functions of arity 0");return 1===a.length?c(a[0]):a.reduceRight(r(m))}),t=c(function(a,b){return a=i(a,{arity:2,message:"Value to be sectioned must be a function of arity 2"}),e._isCurried(a)?a.call(this,b):(a=c(a))(b)}),u=c(function(a,b){return a=i(a,{arity:2,message:"Value to be sectioned must be a function of arity 2"}),t(r(a),b)});return{compose:m,composeMany:s,composeOn:n,constant:p,constant0:q,flip:r,id:o,sectionLeft:t,sectionRight:u}}()},{"../funcUtils":11,"../internalUtilities":14,"./curry":2}],2:[function(a,b,c){b.exports=function(){"use strict";var b=a("../internalUtilities").checkPositiveIntegral,c="_trueArity",d="_getOriginal",e="_context",f={},g=function(a){return a.hasOwnProperty(c)},h=function(a,b,f,g){var h=function(b,c){Object.defineProperty(a,b,{value:c})};return h(c,b),h(d,f),h(e,g),a},i=function(a,g,j){if(g=b(g,{strict:!0}),"function"!=typeof j)throw new TypeError("Value to be curried is not a function");var k=j.hasOwnProperty(e)?j[e]:a;if(k!==a)throw new Error("Cannot bind a curried function to a different execution context");return j.hasOwnProperty(c)&&j[c]===g?j:(j=j.hasOwnProperty(d)?j[d]:j,0===g?h(function(){var a=k;if(a===f){if(void 0===this)throw new Error("Object curried function called without a context");a=this}return j.apply(a)},0,j,a):h(function(a){var b=[].slice.call(arguments),c=k;if(0===b.length){if(c===f){if(void 0===this)throw new Error("Object curried function called without a context");return i(this,g,j)}var d=1===g?"1 argument":"1 - "+g+" arguments";throw new Error("This function requires "+d)}if(c===f){if(void 0===this)throw new Error("Object curried function called without a context");c=this}if(b.length>g&&(b=b.slice(0,g)),b.length===g)return j.apply(c,b);var e=j.bind.apply(j,[c].concat(b)),l=g-b.length;return l>1?i({context:c},l,e):h(function(a){return e(a)},1,e,c)},g,j,k))},j=i.bind(null,null),k=function(a){var b=a.hasOwnProperty(c)?a[c]:a.length;return j(b,a)};k=k(k),j=k(j);var l=k(function(a){if("function"!=typeof a)throw new TypeError("Cannot compute arity of non-function");return a.hasOwnProperty(c)?a[c]:a.length});l._isCurried=g;var m=k(function(a,b){var d=b.hasOwnProperty(c)?b[c]:b.length;return n(d,a,b)}),n=k(function(a,b,c){return i(b,a,c)}),o=k(function(a){return p(l(a),a)}),p=k(i.bind(null,f)),q=function(a,b,c){return c=void 0===c?l(b):c,i(a.hasOwnProperty(e?a.contextProp:null),c,b)},r=function(a,b,c,d){d=void 0!==d?d:l(c);var h,j=[a,b].map(function(a){return g(a)?a[e]:null});return h=-1!==j.indexOf(f)?f:j[0]===j[1]?j[0]:null,i(h,d,c)};return{arity:l,arityOf:l,bind:m,bindWithContext:m,bindWithContextAndArity:n,_chooseCurryStyle:r,curry:k,curryWithArity:j,_curryWithConsistentStyle:q,objectCurry:o,objectCurryWithArity:p}}()},{"../internalUtilities":14}],3:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=a("./object"),e=d.callProp,f=e("getDate"),g=e("getDay"),h=e("getFullYear"),i=e("getHours"),j=e("getMilliseconds"),k=e("getMinutes"),l=e("getMonth"),m=e("getSeconds"),n=e("getTime"),o=e("getTimezoneOffset"),p=e("getUTCDate"),q=e("getUTCDay"),r=e("getUTCFullYear"),s=e("getUTCHours"),t=e("getUTCMilliseconds"),u=e("getUTCMinutes"),v=e("getUTCMonth"),w=e("getUTCSeconds"),x=e("toLocaleDateString"),y=e("toDateString"),z=e("toTimeString"),A=e("toISOString"),B=e("toUTCString"),C=c(function(a,b){return b.setDate(a),b}),D=c(function(a,b){return b.setFullYear(a),b}),E=c(function(a,b){return b.setHours(a),b}),F=c(function(a,b){return b.setMilliseconds(a),b}),G=c(function(a,b){return b.setMinutes(a),b}),H=c(function(a,b){return b.setMonth(a),b}),I=c(function(a,b){return b.setSeconds(a),b}),J=c(function(a,b){return b.setTime(a),b}),K=c(function(a,b){return b.setUTCDate(a),b}),L=c(function(a,b){return b.setUTCFullYear(a),b}),M=c(function(a,b){return b.setUTCHours(a),b}),N=c(function(a,b){return b.setUTCMilliseconds(a),b}),O=c(function(a,b){return b.setUTCMinutes(a),b}),P=c(function(a,b){return b.setUTCMonth(a),b}),Q=c(function(a,b){return b.setUTCSeconds(a),b}),R=c(function(){return Date()}),S=c(function(a){if("string"!=typeof a)throw new TypeError("Attempt to make Date from string with incorrect type");var b=new Date(a);if(isNaN(b.getHours()))throw new TypeError("Attempt to make Date from unparsable string");return b}),T=c(function(a){if("number"!=typeof a)throw new TypeError("Attempt to make Date from milliseconds with incorrect type");var b=new Date(a);if(isNaN(b.getHours()))throw new TypeError("Attempt to make Date from invalid value");return b}),U=c(function(a,b){return new Date(a,b)}),V=c(function(a,b,c){return new Date(a,b,c)}),W=c(function(a,b,c,d){return new Date(a,b,c,d)}),X=c(function(a,b,c,d,e){return new Date(a,b,c,d,e)}),Y=c(function(a,b,c,d,e,f){return new Date(a,b,c,d,e,f)}),Z=c(function(a,b,c,d,e,f,g){return new Date(a,b,c,d,e,f,g)});return{getCurrentTimeString:R,getDayOfMonth:f,getDayOfWeek:g,getFullYear:h,getHours:i,getMilliseconds:j,getMinutes:k,getMonth:l,getSeconds:m,getTimezoneOffset:o,getUTCDayOfMonth:p,getUTCDayOfWeek:q,getUTCFullYear:r,getUTCHours:s,getUTCMilliseconds:t,getUTCMinutes:u,getUTCMonth:v,getUTCSeconds:w,makeDateFromMilliseconds:T,makeDateFromString:S,makeDayDate:V,makeHourDate:W,makeMinuteDate:X,makeMillisecondDate:Z,makeMonthDate:U,makeSecondDate:Y,setDayOfMonth:C,setFullYear:D,setHours:E,setMilliseconds:F,setMinutes:G,setMonth:H,setSeconds:I,setTimeSinceEpoch:J,setUTCDayOfMonth:K,setUTCFullYear:L,setUTCHours:M,setUTCMilliseconds:N,setUTCMinutes:O,setUTCMonth:P,setUTCSeconds:Q,toDateString:y,toEpochMilliseconds:n,toISOString:A,toLocaleDateString:x,toTimeString:z,toUTCString:B}}()},{"./curry":2,"./object":7}],4:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=b._chooseCurryStyle,e=b._curryWithConsistentStyle,f=a("../funcUtils"),g=f.checkFunction,h=c(function(a){return!a}),i=c(function(a,b){return a&&b}),j=c(function(a,b){return a||b}),k=c(function(a,b){return a?a!==b:b}),l=c(function(a){return a=g(a,{arity:1,message:"Predicate must be a function of arity 1"}),e(a,function(b){return!a.call(this,b)})}),m=c(function(a,b){return a=g(a,{arity:1,message:"First predicate must be a function of arity 1"}),b=g(b,{arity:1,message:"Second predicate must be a function of arity 1"}),d(a,b,function(c){return a.call(this,c)&&b.call(this,c)})}),n=c(function(a,b){return a=g(a,{arity:1,message:"First predicate must be a function of arity 1"}),b=g(b,{arity:1,message:"Second predicate must be a function of arity 1"}),d(a,b,function(c){return a.call(this,c)||b.call(this,c)})}),o=c(function(a,b){return a=g(a,{arity:1,message:"First predicate must be a function of arity 1"}),b=g(b,{arity:1,message:"Second predicate must be a function of arity 1"}),d(a,b,function(c){return k(a.call(this,c),b.call(this,c))})});return{and:i,andPred:m,not:h,notPred:l,or:j,orPred:n,xor:k,xorPred:o}}()},{"../funcUtils":11,"./curry":2}],5:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=b.curryWithArity,e=a("./base"),f=e.flip,g=a("./object"),h=(g.callProp,g.callPropWithArity),i=c(function(a,b){return a+b}),j=c(function(a,b){return a-b}),k=c(function(a,b){return a*b}),l=c(function(a,b){return a/b}),m=c(function(a,b){return Math.pow(a,b)}),n=c(function(a,b){return Math.log(b)/Math.log(a)}),o=c(function(a,b){return Math.floor(a/b)}),p=c(function(a,b){return a%b}),q=c(function(a,b){return b>a}),r=c(function(a,b){return b>=a}),s=c(function(a,b){return a>b}),t=c(function(a,b){return a>=b}),u=c(function(a,b){return a<<b}),v=c(function(a,b){return a>>b}),w=c(function(a,b){return a>>>b}),x=c(function(a,b){return a&b}),y=c(function(a,b){return a|b}),z=c(function(a,b){return a^b}),A=c(function(a){return~a}),B=c(Math.min),C=c(Math.max),D=h("toFixed",1),E=h("toExponential",1),F=h("toPrecision",1),G=h("toString",1),H=f(parseInt),I=d(1,parseInt),J=c(function(a){return a%2===0}),K=c(function(a){return a%2!==0});return{add:i,bitwiseAnd:x,bitwiseNot:A,bitwiseOr:y,bitwiseXor:z,div:o,divide:l,even:J,exp:m,greaterThan:s,greaterThanEqual:t,gt:s,gte:t,leftShift:u,lessThan:q,lessThanEqual:r,lt:q,lte:r,log:n,min:B,max:C,multiply:k,odd:K,parseInt:I,parseIntInBase:H,plus:i,pow:m,rem:p,rightShift:v,rightShiftZero:w,stringToInt:H,subtract:j,toBaseAndRadix:G,toBaseAndString:G,toExponential:E,toFixed:D,toPrecision:F}}()},{"./base":1,"./curry":2,"./object":7}],6:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=b._curryWithConsistentStyle,e=b.arityOf,f=a("../internalUtilities"),g=f.valueStringifier,h=a("../funcUtils"),i=h.checkFunction,j=c(function(){throw new Error("Maybe cannot be instantiated directly")});j.prototype={toString:function(){return"Maybe"},constructor:j};var k=Object.create(j.prototype);k.toString=function(){return"Maybe {Nothing}"};var l=Object.create(k);Object.freeze(l);var m=function(a){if(1!==arguments.length)throw new TypeError("Just called with incorrect number of arguments");return this instanceof m?void Object.defineProperty(this,"value",{value:a}):new m(a)};m.prototype=Object.create(j.prototype),m.prototype.toString=function(){return"Maybe {Just "+g(this.value)+"}"};var n=c(function(a){return a===j||a instanceof j}),o=c(function(a){return a===l}),p=c(function(a){return a instanceof m}),q=c(function(a){if(!p(a))throw new TypeError("Value is not a Just");return a.value}),r=c(function(a){return a=i(a,{message:"Value to be transformed must be a function"}),d(a,function(){[].slice.call(arguments);try{var b=a.apply(this,arguments);return m(b)}catch(c){return l}},e(a))});return{getJustValue:q,isJust:p,isMaybe:n,isNothing:o,makeMaybeReturner:r,Just:m,Maybe:j,Nothing:l}}()},{"../funcUtils":11,"../internalUtilities":14,"./curry":2}],7:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=b.curryWithArity,e=b.objectCurry,f=a("./base"),g=f.flip,h=a("./maybe"),i=h.Just,j=h.Nothing,k=a("../internalUtilities"),l=k.checkObjectLike,m=c(function(a,b){return d(b+1,function(){var c=[].slice.call(arguments,0,b),d=arguments[b];return d[a].apply(d,c)})}),n=g(m)(0),o=c(function(a,b){return Object.prototype.hasOwnProperty.call(b,a)}),p=c(function(a,b){return a in b}),q=c(function(a,b){return b instanceof a}),r=c(function(a,b){return Object.prototype.isPrototypeOf.call(a,b)}),s=c(function(a){return Object.create(a)}),t=c(function(a,b){return Object.create(a,b)}),u=c(function(a,b,c){return b=l(b,{strict:!0}),Object.defineProperty(c,a,b)}),v=c(function(a,b){return a=l(a,{allowNull:!1}),b=l(b,{allowNull:!1}),Object.defineProperties(b,a)}),w=g(Object.getOwnPropertyDescriptor),x=c(function(a,b){return b[a]}),y=c(function(a,b,c){return a in c?c[a]:b}),z=c(function(a,b){if(!(a in b))return j;var c=Object.getOwnPropertyDescriptor(b,a);return"set"in c&&void 0===c.get?j:i(b[a])}),A=(function(){var a=function(){};Object.defineProperty(a.prototype,"foo",{writable:!1});var b=!1,c=new a;try{c.foo=1}catch(d){b=!0}return b}(),function(a,b){for(var c,d=!1;void 0===c&&!d;)c=w(a,b),void 0===c&&(b===Object.prototype?d=!0:b=Object.getPrototypeOf(b));return c}),B=function(a,b){var c=!0,d=A(a,b);return d&&"writable"in d&&d.writable===!1&&(c=!1),d&&c&&"set"in d&&void 0===d.set&&(c=!1),c},C=c(function(a,b,c){var d=B(a,c);if(!d||o(a,c)||!Object.isSealed(c)&&Object.isExtensible(c)||(d=!1),!d)throw new Error("Cannot write to property "+a);return c[a]=b,c}),D=c(function(a,b,c){var d=B(a,c);return!d||o(a,c)||!Object.isSealed(c)&&Object.isExtensible(c)||(d=!1),d?(c[a]=b,i(c)):j}),E=c(function(a,b,c){if(!p(a,c))throw new Error("Cannot modify non-existent property "+a);return C(a,b,c)}),F=c(function(a,b,c){return p(a,c)?D(a,b,c):j}),G=c(function(a,b,c){if(o(a,c))throw new Error("Attempt to recreate existing property "+a);return C(a,b,c)}),H=c(function(a,b,c){return o(a,c)?j:D(a,b,c)}),I=c(function(a,b){if(b=l(b),!b.hasOwnProperty(a))return b;var c=Object.getOwnPropertyDescriptor(b,a);if(c.configurable===!1)throw new Error("Cannot delete property "+a+": not configurable!");return delete b[a],b}),J=c(function(a,b){if(b=l(b),!b.hasOwnProperty(a))return i(b);var c=Object.getOwnPropertyDescriptor(b,a);return c.configurable===!1?j:(delete b[a],i(b))}),K=c(function(a){return"object"!=typeof a||null===a?[]:Object.keys(a)}),L=c(function(a){return"object"!=typeof a||null===a?[]:Object.getOwnPropertyNames(a)}),M=c(function(a){return"object"!=typeof a||null===a?[]:K(a).map(function(b){return[b,a[b]]})}),N=c(function(a){return"object"!=typeof a||null===a?[]:K(a).map(function(b){return[b,w(b,a)]})}),O=function(a,b){if("function"==typeof a)return a;if("object"!=typeof a)throw new TypeError("shallowClone called on non-object");if(Array.isArray(a)){var c=a.slice();return Object.keys(a).forEach(function(b){var d=b-0;return isNaN(d)?void(c[b]=a[b]):void((Math.floor(d)!==d||Math.ceil(d)!==d)&&(c[b]=a[b]))}),c}if(null===a)return b?Object.create(null):null;if(a===Object.prototype)return{};var d=O(Object.getPrototypeOf(a),!0);return Object.getOwnPropertyNames(a).forEach(function(b){var c=Object.getOwnPropertyDescriptor(a,b);Object.defineProperty(d,b,c)}),d},P=c(function(a){return O(a,!1)}),Q=c(function(a,b){for(var c in a)b[c]=a[c];return b}),R=c(function(a,b){var c=Object.keys(a);return c.forEach(function(c){b[c]=a[c]}),b}),S=c(function(a){var b=Object.keys(a),c=b.filter(function(b){var c=Object.getOwnPropertyDescriptor(a,b);return"function"==typeof a[b]&&c.hasOwnProperty("configurable")&&c.hasOwnProperty("writable")});return c.some(function(b){return Object.getOwnPropertyDescriptor(a,b).writable===!1})?a:(c.forEach(function(b){a[b]=e(a[b])}),a)});return{callProp:n,callPropWithArity:m,clone:P,createObject:s,createObjectWithProps:t,createProp:G,curryOwn:S,descriptors:N,defaultTap:y,defineProperty:u,defineProperties:v,deleteProp:I,extend:Q,extendOwn:R,extract:x,extractOrDefault:y,getOwnPropertyDescriptor:w,getOwnPropertyNames:L,hasOwnProperty:o,hasProperty:p,instanceOf:q,isPrototypeOf:r,keys:K,keyValues:M,maybeCreate:H,maybeDelete:J,maybeExtract:z,maybeModify:F,maybeModifyProp:F,maybeSet:D,maybeSetProp:D,maybeTap:z,modify:E,modifyProp:E,safeCreateProp:H,safeDeleteProp:J,safeExtract:z,safeModify:F,safeModifyProp:F,safeSet:D,safeSetProp:D,safeTap:z,set:C,setProp:C,shallowClone:P,tap:x}}()},{"../internalUtilities":14,"./base":1,"./curry":2,"./maybe":6}],8:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=a("../internalUtilities"),e=d.valueStringifier,f=function(a,b){if(0===arguments.length)throw new TypeError("Pair constructor takes two arguments");return 1===arguments.length?g(a):this instanceof f?(Object.defineProperty(this,"first",{enumerable:!1,configurable:!1,value:a}),void Object.defineProperty(this,"second",{enumerable:!1,configurable:!1,value:b})):new f(a,b)};f.prototype={toString:function(){return["Pair (",e(this.first),", ",e(this.second),")"].join("")},constructor:f};var g=function(a){var b=c(function(b){return new f(a,b)});return b.prototype=f.prototype,b},h=c(function(a){if(!(a instanceof f))throw new TypeError("Not a pair");return a.first}),i=c(function(a){if(!(a instanceof f))throw new TypeError("Not a pair");return a.second}),j=c(function(a){return a instanceof f}),k=c(function(a){if(!(a instanceof f))throw new TypeError("Not a pair");return[h(a),i(a)]});return{Pair:f,asArray:k,first:h,fst:h,isPair:j,second:i,snd:i}}()},{"../internalUtilities":14,"./curry":2}],9:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry"),c=b.curry,d=(b.curryWithArity,b.arityOf),e=b._curryWithConsistentStyle,f=a("../internalUtilities"),g=f.valueStringifier,h=(f.checkArrayLike,a("../funcUtils")),i=h.checkFunction,j=function(){throw new Error("Result cannot be instantiated directly")};j.prototype={toString:function(){return"Result"},constructor:j};var k=function(a){if(1!==arguments.length)throw new TypeError("Ok called with incorrect number of arguments");return this instanceof k?void Object.defineProperty(this,"value",{configurable:!1,writable:!1,enumerable:!1,value:a}):new k(a)};k.prototype=Object.create(j.prototype),k.prototype.toString=function(){return"Result {Ok "+g(this.value)+"}"};var l=function(a){if(1!==arguments.length)throw new TypeError("Err called with incorrect number of arguments");return this instanceof l?void Object.defineProperty(this,"value",{configurable:!1,writable:!1,enumerable:!1,value:a}):new l(a)};l.prototype=Object.create(j.prototype),l.prototype.toString=function(){return"Result {Err "+g(this.value)+"}"};var m=c(function(a){return a===j||a instanceof j}),n=c(function(a){return a instanceof l}),o=c(function(a){return a instanceof k}),p=c(function(a){if(!o(a))throw new TypeError("Value is not an Ok");return a.value}),q=c(function(a){if(!n(a))throw new TypeError("Value is not an Err");return a.value}),r=c(function(a){return a=i(a,{message:"Value to be transformed must be a function"}),e(a,function(){[].slice.call(arguments);try{var b=a.apply(this,arguments);return k(b)}catch(c){return l(c)}},d(a))}),s=c(function(a,b,c){if(a=i(a,{arity:1,minimum:!0,message:"Ok value must be a function of arity 1 or more"}),b=i(b,{arity:1,minimum:!0,message:"Err value must be a function of arity 1 or more"}),o(c))return a(p(c));if(n(c))return b(q(c));throw new TypeError("Invalid value")});return{either:s,getErrValue:q,getOkValue:p,isErr:n,isOk:o,isResult:m,makeResultReturner:r,Err:l,Ok:k,Result:j}}()},{"../funcUtils":11,"../internalUtilities":14,"./curry":2}],10:[function(a,b,c){b.exports=function(){"use strict";var b=a("./curry").curry,c=b(function(a,b){return a==b}),d=b(function(a,b){return a===b}),e=b(function(a,b){return a!=b}),f=b(function(a,b){return a!==b}),g=function(a,b,c,d){if(a.length!==b.length)return!1;for(var e=c.length-1;e>=0;e--){if(c[e]===a)return d[e]===b||d[e]===a;if(d[e]===b)return!1}c.push(a),d.push(b);var f=!0;f=f&&i(a[e],b[e],c,d);var g=Object.keys(a),h=Object.keys(b);return g.length!==h.length?f=!1:(g.sort(),h.sort(),f=g.every(function(e,f){return e!==h[f]?!1:i(a[e],b[e],c,d)})),c.pop(),d.pop(),f},h=function(a,b,c,d){if(null===a||null===b)return!1;if(Array.isArray(a)||Array.isArray(b))return!1;if(Object.getPrototypeOf(a)!==Object.getPrototypeOf(b))return!1;for(var e=c.length-1;e>=0;e--){if(c[e]===a)return d[e]===b||d[e]===a;if(d[e]===b)return!1}var f=Object.keys(a),h=Object.keys(b);if(f.sort(),h.sort(),!g(f,h,c,d))return!1;c.push(a),d.push(b);var j=!0;for(e=0;j&&e<f.length;e++)j=j&&i(a[f[e]],b[h[e]],c,d);return c.pop(),d.pop(),j},i=function(a,b,c,e){return d(a,b)?!0:typeof a!=typeof b?!1:"object"!=typeof a?!1:Array.isArray(a)&&Array.isArray(b)?g(a,b,c,e):h(a,b,c,e)},j=b(function(a,b){return i(a,b,[],[])}),k=b(function(a,b){if("string"!=typeof a)throw new TypeError("Type to be checked is not a string");return typeof b===a}),l=k("number"),m=k("string"),n=k("boolean"),o=k("undefined"),p=k("object"),q=b(function(a){return Array.isArray(a)}),r=b(function(a){return null===a}),s=b(function(a){return p(a)&&!(q(a)||r(a))}),t=b(function(a){return typeof a});return{deepEqual:j,deepEquals:j,equals:c,getType:t,hasType:k,is:k,isArray:q,isBoolean:n,isNumber:l,isNull:r,isObject:p,isRealObject:s,isString:m,isUndefined:o,notEqual:e,notEquals:e,strictEquals:d,strictInequality:f,strictNotEqual:f,strictNotEquals:f}}()},{"./curry":2}],11:[function(a,b,c){b.exports=function(){"use strict";var b=a("./components/curry"),c=b.arityOf,d=function(a,b){b=b||{};var d=b.message||"Value is not a function",e="arity"in b?b.arity:null,f=b.minimum||!1;f&&!b.message&&(d="Value is not a function of arity ≥ "+e);var g=b.maximum||!1;if(g&&!b.message&&(d="Value is not a function of arity ≤ "+e),"function"!=typeof a)throw new TypeError(d);if(null!==e){var h=c(a);if(f&&e>h||g&&h>e||!f&&!g&&h!==e)throw new TypeError(d)}return a};return{checkFunction:d}}()},{"./components/curry":2}],12:[function(a,b,c){b.exports=function(){"use strict";var b={},c={base:a("./components/base"),curry:a("./components/curry"),date:a("./components/date"),logical:a("./components/logical"),object:a("./components/object"),maths:a("./components/maths"),maybe:a("./components/maybe"),pair:a("./components/pair"),result:a("./components/result"),types:a("./components/types")};return Object.keys(c).forEach(function(a){var d=c[a];Object.keys(d).forEach(function(a){"_"!==a[0]&&(b[a]=d[a])})}),a("./help")(b),b}()},{"./components/base":1,"./components/curry":2,"./components/date":3,"./components/logical":4,"./components/maths":5,"./components/maybe":6,"./components/object":7,"./components/pair":8,"./components/result":9,"./components/types":10,"./help":13}],13:[function(a,b,c){b.exports=function(){"use strict";return function(a){var b=function(c){switch(c){case b:console.log("help:"),console.log("Displays useful help for funkierJS API values"),console.log(""),console.log("Usage: help(f);"),console.log(""),console.log("Find full help online at https://graememcc.github.io/funkierJS/docs/");break;case a.Err:console.log("Err:"),console.log(""),console.log("An Err is a type of Result representing a unsuccessful computation. The constructor is new-agnostic."),console.log("Throws if called without any arguments"),console.log(""),console.log(""),console.log("Usage: var x = Err(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#err");break;case a.Just:console.log("Just:"),console.log(""),console.log("A Just is a type of Maybe representing a successful computation. The constructor is new-agnostic."),console.log("Throws when called with no arguments."),console.log(""),console.log(""),console.log("Usage: var x = Just(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#just");break;case a.Maybe:console.log("Maybe:"),console.log(""),console.log("The Maybe type encapsulates the idea of sentinel values returned by functions to represent an error or unusual"),console.log("conditions. Authors can return an instance of the Just constructor when a function executes successfully, and the"),console.log("Nothing object when an error occurs, or the computation is otherwise unsuccessful."),console.log(""),console.log(""),console.log("Usage: var x = Maybe()"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#maybe");break;case a.Nothing:console.log("Nothing:"),console.log(""),console.log("A Nothing is a type of Maybe representing an unsuccessful computation."),console.log(""),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#nothing");break;case a.Ok:console.log("Ok:"),console.log(""),console.log("An Ok is a type of Result representing a successful computation. The constructor is new-agnostic."),console.log("Throws when called with no arguments."),console.log(""),console.log(""),console.log("Usage: var x = Ok(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#ok");break;case a.Pair:console.log("Pair:"),console.log(""),console.log("A Pair represents an immutable tuple. The constructor function takes two elements, first and second. and returns a"),console.log("new immutable tuple. The contents of the tuple can be accessed with the accessor functions fst and"),console.log("snd respectively. The constructor is new-agnostic."),console.log(""),console.log(""),console.log("Usage: var x = Pair(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#pair");break;case a.Result:console.log("Result:"),console.log(""),console.log("The Result type encapsulates the idea of functions throwing errors. It can be considered equivalent to the"),console.log("Either datatype from Haskell, or the Result type from Rust."),console.log(""),console.log(""),console.log("Usage: var x = Result()"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#result");break;case a.add:console.log("add:"),console.log(""),console.log("Synonyms: plus"),console.log(""),console.log("A wrapper around the addition operator."),console.log(""),console.log(""),console.log("Usage: var x = add(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#add");break;case a.and:console.log("and:"),console.log(""),console.log("A wrapper around the logical and (&&) operator. Returns the logical and of the given arguments"),console.log(""),console.log(""),console.log("Usage: var x = and(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#and");break;case a.andPred:console.log("andPred:"),console.log(""),console.log("Takes two unary predicate functions, and returns a new unary function that, when called, will call the original"),console.log("functions with the given argument, and logically and their results, returning that value. Throws if either"),console.log("argument is not a function of arity 1."),console.log(""),console.log(""),console.log("Usage: var x = andPred(f1, f2)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#andpred");break;case a.arityOf:console.log("arityOf:"),console.log(""),console.log("Synonyms: arity"),console.log(""),console.log("Reports the real arity of a function. If the function has not been curried by funkier.js, this simply returns the"),console.log("function's length property. For a function that has been curried, the arity of the original function will be"),console.log("reported (the function's length property will always be 0 or 1 in this case). For a partially applied function,"),console.log("the amount of arguments not yet supplied will be returned."),console.log(""),console.log(""),console.log("Usage: var x = arityOf(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#arityof");break;case a.asArray:console.log("asArray:"),console.log(""),console.log("Takes a pair, and returns a 2-element array containing the values contained in the given Pair p. Specifically, if"),console.log("the resulting array is named arr, then we have arr[0] === fst(p) and arr[1] === snd(p). Throws a TypeError if p is"),console.log("not a pair."),console.log(""),console.log(""),console.log("Usage: var x = asArray(p)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#asarray");break;case a.bind:console.log("bind:"),console.log(""),console.log("Synonyms: bindWithContext"),console.log(""),console.log("Given an object and function, returns a curried function with the same arity as the original, and whose execution"),console.log("context is permanently bound to the supplied object. The function will be called when sufficient arguments have"),console.log("been supplied. Superfluous arguments are discarded. It is possible to partially apply the resulting function, and"),console.log("indeed the further resulting function(s). The resulting function and its partial applications will throw if they"),console.log("require at least one argument, but are invoked without any. bind throws if the first parameter is not an"),console.log("an acceptable type for an execution context, or if the last parameter is not a function."),console.log(""),console.log(""),console.log("Usage: var x = bind(ctx, f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#bind");break;case a.bindWithContextAndArity:console.log("bindWithContextAndArity:"),console.log(""),console.log("Given an arity, object and function, returns a curried function whose execution context is permanently bound to"),console.log("the supplied object, and whose arity equals the arity given. The supplied arity need not equal the function's"),console.log("length. The function will be only called when the specified number of arguments have been supplied. Superfluous"),console.log("arguments are discarded. It is possible to partially apply the resulting function, and indeed the further"),console.log("resulting function(s). The resulting function and its partial applications will throw if they require at least"),console.log("one argument, but are invoked without any. bindWithContextAndArity throws if the arity is not a natural"),console.log("number, if the second parameter is not an acceptable type for an execution context, or if the last parameter is"),console.log("not a function."),console.log(""),console.log(""),console.log("Usage: var x = bindWithContextAndArity(n, ctx, f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#bindwithcontextandarity");break;case a.bitwiseAnd:console.log("bitwiseAnd:"),console.log(""),console.log("A wrapper around the bitwise and (&) operator."),console.log(""),console.log(""),console.log("Usage: var x = bitwiseAnd(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#bitwiseand");break;case a.bitwiseNot:console.log("bitwiseNot:"),console.log(""),console.log("A wrapper around the bitwise not (~) operator."),console.log(""),console.log(""),console.log("Usage: var x = bitwiseNot(x)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#bitwisenot");break;case a.bitwiseOr:console.log("bitwiseOr:"),console.log(""),console.log("A wrapper around the bitwise or (&) operator."),console.log(""),console.log(""),console.log("Usage: var x = bitwiseOr(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#bitwiseor");break;case a.bitwiseXor:console.log("bitwiseXor:"),console.log(""),console.log("A wrapper around the bitwise xor (^) operator."),console.log(""),console.log(""),console.log("Usage: var x = bitwiseXor(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#bitwisexor");break;case a.callProp:console.log("callProp:"),console.log(""),console.log("A shorthand for callPropWithArity(prop, 0). Returns a new function that takes an object, and calls the specified"),
console.log("property on the given object."),console.log(""),console.log(""),console.log("Usage: var x = callProp(prop)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#callprop");break;case a.callPropWithArity:console.log("callPropWithArity:"),console.log(""),console.log("Given a property name and an arity, returns a curried function taking arity + 1 arguments. The new function"),console.log("requires all the original arguments in their original order, and an object as its final parameter. The returned"),console.log("function will then try to call the named property on the given object,"),console.log(""),console.log(""),console.log("Usage: var x = callPropWithArity(prop, arity)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#callpropwitharity");break;case a.clone:console.log("clone:"),console.log(""),console.log("Synonyms: shallowClone"),console.log(""),console.log("Returns a shallow clone of the given object. All enumerable and non-enumerable properties from the given object"),console.log("and its prototype chain will be copied, and will be enumerable or non-enumerable as appropriate. Note that values"),console.log("from Object.prototype, Array.prototype, will not be copied, but those prototypes will be in the prototype chain"),console.log("of the clone if they are in the prototype chain of the original object. Functions are returned unchanged."),console.log("Non-primitive values are copied by reference."),console.log(""),console.log(""),console.log("Usage: var x = clone(obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#clone");break;case a.compose:console.log("compose:"),console.log(""),console.log("Composes the two functions, returning a new function that consumes one argument, which is passed to g. The result"),console.log("of that call is then passed to f. That result is then returned. Throws if either parameter is not a function, or"),console.log("has arity 0."),console.log(""),console.log(""),console.log("Usage: var x = compose(f, g)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#compose");break;case a.composeMany:console.log("composeMany:"),console.log(""),console.log("Repeatedly composes the given array of functions, from right to left. All functions are curried where necessary."),console.log("Functions are curried from right to left. Throws an Error if any array member is not a function, if it has arity"),console.log("zero, or if the value supplied is not an array."),console.log(""),console.log(""),console.log("Usage: var x = composeMany(fns)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#composemany");break;case a.composeOn:console.log("composeOn:"),console.log(""),console.log("Composes the two functions, returning a new function that consumes the specified number of arguments, which are"),console.log("then passed to g. The result of that call is then passed to f. That result is then returned. Throws if the"),console.log("first parameter is not an integer greater than zero, if either parameter is not a function, or if either parameter"),console.log("has arity 0."),console.log(""),console.log(""),console.log("Usage: var x = composeOn(argCount, f, g)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#composeon");break;case a.constant:console.log("constant:"),console.log(""),console.log("Intended to be partially applied, first taking a value, returning a function that takes another parameter"),console.log("and which always returns the first value."),console.log(""),console.log(""),console.log("Usage: var x = constant(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#constant");break;case a.constant0:console.log("constant0:"),console.log(""),console.log("Returns a function of arity zero that when called always returns the supplied value."),console.log(""),console.log(""),console.log("Usage: var x = constant0(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#constant0");break;case a.createObject:console.log("createObject:"),console.log(""),console.log("Returns a new object whose internal prototype property is the given object protoObject."),console.log(""),console.log(""),console.log("Usage: var x = createObject(protoObject)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#createobject");break;case a.createObjectWithProps:console.log("createObjectWithProps:"),console.log(""),console.log("Creates an object whose internal prototype property is protoObj, and which has the additional properties described"),console.log("in the given property descriptor object descriptorsObject. The property descriptor object is expected to be of the"),console.log("form accepted by Object.create, Object.defineProperties etc."),console.log(""),console.log(""),console.log("Usage: var x = createObjectWithProps(protoObject, descriptorsObject)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#createobjectwithprops");break;case a.createProp:console.log("createProp:"),console.log(""),console.log("Creates the given property to the given value on the given object, returning the object. Equivalent to evaluating"),console.log("o[prop] = value. The property will be not be modified if it already exists; in that case this method will throw."),console.log("Additionally, it throws when the object is frozen, sealed, or cannot be extended. The property will be"),console.log("successfully created when it already exists, but only in the prototype chain."),console.log(""),console.log(""),console.log("Usage: var x = createProp(prop, val, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#createprop");break;case a.curry:console.log("curry:"),console.log(""),console.log("Curries the given function f, returning a function which accepts the same number of arguments as the original"),console.log("function's length property, but which may be partially applied. The function can be partially applied by passing"),console.log("arguments one at a time, or by passing several arguments at once. The function can also be called with more"),console.log("arguments than the given function's length, but the superfluous arguments will be ignored, and will not be"),console.log("passed to the original function. If the curried function or any subsequent partial applications require at least"),console.log("one argument, then calling the function with no arguments will throw. curry throws if its argument is not a"),console.log("function. It will also throw if the function is known to be bound to a specific execution context."),console.log(""),console.log(""),console.log("Usage: var x = curry(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#curry");break;case a.curryOwn:console.log("curryOwn:"),console.log(""),console.log("Takes an object, and providing every enumerable function is writable, (i.e. the function has not been configured as"),console.log("writable: false), then curries the member functions of the object using the objectCurry method."),console.log("If any member functions are found that do not meet this requirement, then the object is left unchanged. Only the"),console.log("object's own properties are affected; those in the prototype chain are unperturbed. Properties with getter/setters"),console.log("in their descriptor are ignored."),console.log(""),console.log(""),console.log("Usage: var x = curryOwn(obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#curryown");break;case a.curryWithArity:console.log("curryWithArity:"),console.log(""),console.log("Curries the given function f to the supplied arity, which need not equal the function's length. The function will"),console.log("be called when that number of arguments have been supplied. Superfluous arguments are discarded. The original"),console.log("function will be called with a null execution context. It is possible to partially apply the resulting function,"),console.log("and indeed the further resulting function(s). The resulting function and its partial applications will throw if"),console.log("they require at least one argument, but are invoked without any. curryWithArity throws if the arity is not a"),console.log("natural number, or if the second parameter is not a function. It will also throw if the given function is known"),console.log("to be bound to a specific execution context."),console.log(""),console.log(""),console.log("Usage: var x = curryWithArity(n, f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#currywitharity");break;case a.deepEqual:console.log("deepEqual:"),console.log(""),console.log("Synonyms: deepEquals"),console.log(""),console.log("Check two values for deep equality. Deep equality holds if any of the following if the two values are the same"),console.log("object, if both values are objects with the same object, the same prototype, the same enumerable properties"),console.log("and those properties are themselves deeply equal (non-enumerable properties are not checked), or if both values"),console.log("are arrays with the same length, any additional properties installed on the arrays are deeply equal, and the items"),console.log("at each index are themselves deeply equal."),console.log(""),console.log(""),console.log("Usage: var x = deepEqual(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#deepequal");break;case a.defineProperties:console.log("defineProperties:"),console.log(""),console.log("A curried wrapper around Object.defineProperties. Takes an object whose own properties map to property"),console.log("descriptors, and an object o. Returns the object o, after having defined the relevant properties named by the"),console.log("properties of the descriptors parameter, and whose values are dictated by the descriptor parameter."),console.log(""),console.log(""),console.log("Usage: var x = defineProperties(descriptors, o)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#defineproperties");break;case a.defineProperty:console.log("defineProperty:"),console.log(""),console.log("A curried wrapper around Object.defineProperty. Takes a property name string, a property descriptor object and"),console.log("the object that the property hould be defined on. Returns the object o, after having defined the relevant property"),console.log("per the descriptor. Throws a TypeError if the descriptor is not an object."),console.log(""),console.log(""),console.log("Usage: var x = defineProperty(prop, descriptor, o)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#defineproperty");break;case a.deleteProp:console.log("deleteProp:"),console.log(""),console.log("Deletes the given property from the given the given object, returning the object. Equivalent to evaluating"),console.log("delete o[prop]. Throws when the property is not configurable, including when the object is frozen or sealed."),console.log(""),console.log(""),console.log("Usage: var x = deleteProp(prop, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#deleteprop");break;case a.descriptors:console.log("descriptors:"),console.log(""),console.log("Takes an object, and returns an array containing 2-element arrays. The first element of each sub-array is the name"),console.log("of a property from the object, and the second element is its property descriptor. This function only returns"),console.log("key-value pairs for the object's own properties. Returns an empty array for non-objects.  The order of the values"),console.log("is not defined."),console.log(""),console.log(""),console.log("Usage: var x = descriptors(obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#descriptors");break;case a.div:console.log("div:"),console.log(""),console.log("Returns the quotient on dividing x by y."),console.log(""),console.log(""),console.log("Usage: var x = div(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#div");break;case a.divide:console.log("divide:"),console.log(""),console.log("A wrapper around the division operator."),console.log(""),console.log(""),console.log("Usage: var x = divide(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#divide");break;case a.either:console.log("either:"),console.log(""),console.log("Takes two functions of arity 1 or greater, and a Result. If the Result is an Ok"),console.log("value, the first function f1 will be called with the unwrapped value.  Otherwise, if the Result is an"),console.log("Err value, the second function is called with the unwrapped value. In either case, the result of of the"),console.log("called function is returned."),console.log(""),console.log(""),console.log("Usage: var x = either(f1, f2, r)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#either");break;case a.equals:console.log("equals:"),console.log(""),console.log("A wrapper around the non-strict equality (==) operator."),console.log(""),console.log(""),console.log("Usage: var x = equals(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#equals");break;case a.even:console.log("even:"),console.log(""),console.log("Given a number, returns true if it is divisible by 2, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = even(x)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#even");break;case a.exp:console.log("exp:"),console.log(""),console.log("Synonyms: pow"),console.log(""),console.log("A curried wrapper around Math.pow."),console.log(""),console.log(""),console.log("Usage: var x = exp(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#exp");break;case a.extend:console.log("extend:"),console.log(""),console.log("Takes two objects, source and dest, and walks the prototype chain of source, copying all enumerable properties"),console.log("into dest. Any extant properties with the same name are overwritten. Returns the modified dest object. All"),console.log("properties are shallow-copied: in other words, if foo is a property of source whose value is an object, then"),console.log("afterwards source.foo === dest.foo will be true."),console.log(""),console.log(""),console.log("Usage: var x = extend(source, dest)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#extend");break;case a.extendOwn:console.log("extendOwn:"),console.log(""),console.log("Takes two objects, source and dest, and copies all enumerable properties from source into dest. Properties from"),console.log("source's prototype chain are not copied. Any extant properties with the same name are overwritten."),console.log("Returns the modified dest object. All properties are shallow-copied: in other words, if foo is a property of"),console.log("source whose value is an object, then afterwards source.foo === dest.foo will be true."),console.log(""),console.log(""),console.log("Usage: var x = extendOwn(source, dest)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#extendown");break;case a.extract:console.log("extract:"),console.log(""),console.log("Synonyms: tap"),console.log(""),console.log("Extracts the given property from the given object. Equivalent to evaluating obj[prop]."),console.log(""),console.log(""),console.log("Usage: var x = extract(prop, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#extract");break;case a.extractOrDefault:console.log("extractOrDefault:"),console.log(""),console.log("Synonyms: defaultTap"),console.log(""),console.log("Extracts the given property from the given object, unless the property is not found in the object or its prototype"),console.log("chain, in which case the specified default value is returned."),console.log(""),console.log(""),console.log("Usage: var x = extractOrDefault(prop, default, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#extractordefault");break;case a.flip:console.log("flip:"),console.log(""),console.log("Takes a binary function f, and returns a curried function that takes the arguments in the opposite order."),console.log(""),console.log(""),console.log("Usage: var x = flip(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#flip");break;case a.fst:console.log("fst:"),console.log(""),console.log("Synonyms: first"),console.log(""),console.log("Accessor function for Pair tuples. Returns the first value that was supplied to the Pair"),console.log("constructor. Throws if called with a non-pair value."),console.log(""),console.log(""),console.log("Usage: var x = fst(p)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#fst");break;case a.getCurrentTimeString:console.log("getCurrentTimeString:"),console.log(""),console.log("A wrapper around calling the Date constructor without the new operator. Returns a string representing the"),console.log("current date and time."),console.log(""),console.log(""),console.log("Usage: var x = getCurrentTimeString()"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getcurrenttimestring");break;case a.getDayOfMonth:console.log("getDayOfMonth:"),console.log(""),console.log("A wrapper around Date.prototype.getDate. Takes a Date object, and returns an integer representing the day of"),console.log("the month (1-31) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getDayOfMonth(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getdayofmonth");break;case a.getDayOfWeek:console.log("getDayOfWeek:"),console.log(""),console.log("A wrapper around Date.prototype.getDay. Takes a Date object, and returns an integer representing the day of the"),console.log("month (0-6) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getDayOfWeek(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getdayofweek");break;case a.getErrValue:console.log("getErrValue:"),console.log(""),console.log("Returns the value wrapped by the given Err instance e. Throws a TypeError if called with anything other"),console.log("than an Err."),console.log(""),console.log(""),console.log("Usage: var x = getErrValue(e)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#geterrvalue");break;case a.getFullYear:console.log("getFullYear:"),console.log(""),console.log("A wrapper around Date.prototype.getFullYear. Takes a Date object, and returns a 4-digit integer representing"),console.log("the year of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getFullYear(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getfullyear");break;case a.getHours:console.log("getHours:"),console.log(""),console.log("A wrapper around Date.prototype.getHours. Takes a Date object, and returns a integer representing the hour"),console.log("field (0-23) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getHours(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#gethours");break;case a.getJustValue:console.log("getJustValue:"),console.log(""),console.log("Returns the value wrapped by the given Just instance j. Throws a TypeError if called with anything other"),console.log("than a Just."),console.log(""),console.log(""),console.log("Usage: var x = getJustValue(j)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getjustvalue");break;case a.getMilliseconds:console.log("getMilliseconds:"),console.log(""),console.log("A wrapper around Date.prototype.getMilliseconds. Takes a Date object, and returns a integer representing the"),console.log("milliseconds field (0-999) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getMilliseconds(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getmilliseconds");break;case a.getMinutes:console.log("getMinutes:"),console.log(""),console.log("A wrapper around Date.prototype.getMinutes. Takes a Date object, and returns a integer representing the minutes"),console.log("field (0-59) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getMinutes(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getminutes");break;case a.getMonth:console.log("getMonth:"),console.log(""),console.log("A wrapper around Date.prototype.getMonths. Takes a Date object, and returns a integer representing the month"),console.log("field (0-11) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getMonth(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getmonth");break;case a.getOkValue:console.log("getOkValue:"),console.log(""),console.log("Returns the value wrapped by the given Ok instance o. Throws a TypeError if called with anything other"),console.log("than an Ok."),console.log(""),console.log(""),console.log("Usage: var x = getOkValue(o)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getokvalue");break;case a.getOwnPropertyDescriptor:console.log("getOwnPropertyDescriptor:"),console.log(""),console.log("A curried wrapper around Object.getOwnPropertyDescriptor. Takes a property name and an object. If the object"),console.log("itself has the given property, then the object's property descriptor for the given object is returned, otherwise"),console.log("it returns undefined."),console.log(""),console.log(""),console.log("Usage: var x = getOwnPropertyDescriptor(prop, o)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getownpropertydescriptor");break;case a.getOwnPropertyNames:console.log("getOwnPropertyNames:"),console.log(""),console.log("A wrapper around Object.getOwnPropertyNames. Takes an object, and returns an array containing the names of the"),console.log("object's own properties, including non-enumerable properties. Returns an empty array for non-objects. The order of"),console.log("the property names is not defined."),console.log(""),console.log(""),console.log("Usage: var x = getOwnPropertyNames(obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getownpropertynames");break;case a.getSeconds:console.log("getSeconds:"),console.log(""),console.log("A wrapper around Date.prototype.getSeconds. Takes a Date object, and returns a integer representing the seconds"),console.log("field (0-59) of the given date."),console.log(""),console.log(""),console.log("Usage: var x = getSeconds(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getseconds");break;case a.getTimezoneOffset:console.log("getTimezoneOffset:"),console.log(""),console.log("A wrapper around Date.prototype.getTimezoneOffset. Takes a Date object, and returns the delta in minutes"),console.log("between the Javascript environment and UTC."),console.log(""),console.log(""),console.log("Usage: var x = getTimezoneOffset(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#gettimezoneoffset");break;case a.getType:console.log("getType:"),console.log(""),console.log("A functional wrapper around the typeof operator. Takes any Javascript value, and returns a string representing"),console.log('the object\'s type: the result will be one of "number", "string", "boolean", "function", "undefined", or "object".'),console.log(""),console.log(""),console.log("Usage: var x = getType(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#gettype");break;case a.getUTCDayOfMonth:console.log("getUTCDayOfMonth:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCDate. Takes a Date object, and returns an integer representing the day of"),console.log("the month (1-31) of the given date, adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCDayOfMonth(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcdayofmonth");break;case a.getUTCDayOfWeek:console.log("getUTCDayOfWeek:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCDay. Takes a Date object, and returns an integer representing the day of"),console.log("the week (0-6) of the given date, adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCDayOfWeek(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcdayofweek");break;case a.getUTCFullYear:console.log("getUTCFullYear:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCFullYear. Takes a Date object, and returns a 4-digit integer representing"),console.log("the year of the given date, adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCFullYear(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcfullyear");break;case a.getUTCHours:console.log("getUTCHours:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCHours. Takes a Date object, and returns an integer representing the hours"),console.log("field of the given date (0-23), adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCHours(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutchours");break;case a.getUTCMilliseconds:console.log("getUTCMilliseconds:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCMilliseconds. Takes a Date object, and returns an integer representing"),console.log("the milliseconds field of the given date (0-999), adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCMilliseconds(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcmilliseconds");break;case a.getUTCMinutes:console.log("getUTCMinutes:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCMinutes. Takes a Date object, and returns an integer representing the"),console.log("minutes field of the given date (0-59), adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCMinutes(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcminutes");break;case a.getUTCMonth:console.log("getUTCMonth:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCMonth. Takes a Date object, and returns an integer representing the month"),console.log("field of the given date (0-11), adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCMonth(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcmonth");break;case a.getUTCSeconds:console.log("getUTCSeconds:"),console.log(""),console.log("A wrapper around Date.prototype.getUTCSeconds. Takes a Date object, and returns an integer representing the"),console.log("seconds field of the given date (0-59), adjusted for UTC."),console.log(""),console.log(""),console.log("Usage: var x = getUTCSeconds(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#getutcseconds");break;case a.greaterThan:console.log("greaterThan:"),console.log(""),console.log("Synonyms: gt"),console.log(""),console.log("A wrapper around the less than or equal (<=) operator."),console.log(""),console.log(""),console.log("Usage: var x = greaterThan(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#greaterthan");break;case a.greaterThanEqual:console.log("greaterThanEqual:"),console.log(""),console.log("Synonyms: gte"),console.log(""),console.log("A wrapper around the greater than or equal (=>) operator."),console.log(""),console.log(""),console.log("Usage: var x = greaterThanEqual(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#greaterthanequal");break;case a.hasOwnProperty:console.log("hasOwnProperty:"),console.log(""),console.log("A curried wrapper around Object.prototype.hasOwnProperty. Takes a string representing a property name and an"),console.log("object, and returns true if the given object itself (i.e. not objects in the prototype chain) has the specified"),console.log("property."),console.log(""),console.log(""),console.log("Usage: var x = hasOwnProperty(prop, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#hasownproperty");break;case a.hasProperty:console.log("hasProperty:"),console.log(""),console.log("A curried wrapper around the in operator. Takes a string representing a property name and an object, and"),console.log("returns true if the given object or some object in the prototype chain has the specified property."),console.log(""),console.log(""),console.log("Usage: var x = hasProperty(prop, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#hasproperty");break;case a.id:console.log("id:"),console.log(""),console.log("Returns the supplied value. Superfluous values are ignored."),console.log(""),console.log(""),console.log("Usage: var x = id(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#id");break;case a.instanceOf:console.log("instanceOf:"),console.log(""),console.log("A curried wrapper around the instanceof operator. Takes a constructor function and an object, and returns true"),console.log("if the function's prototype property is in the prototype chain of the given object."),console.log(""),console.log(""),console.log("Usage: var x = instanceOf(constructor, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#instanceof");break;case a.is:console.log("is:"),console.log(""),console.log("Synonyms: hasType"),console.log(""),console.log("Given a string that could be returned by the typeof operator, and a value, returns true if typeof the given"),console.log("object equals the given string. Throws if the first argument is not a string."),console.log(""),console.log(""),console.log("Usage: var x = is(type, value)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#is");break;case a.isArray:console.log("isArray:"),console.log(""),console.log("Returns true if the given value is an array, false otherwise"),console.log(""),console.log(""),console.log("Usage: var x = isArray(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isarray");break;case a.isBoolean:console.log("isBoolean:"),console.log(""),console.log('Returns true if typeof the given value equals "boolean", false otherwise.'),console.log(""),console.log(""),console.log("Usage: var x = isBoolean(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isboolean");break;case a.isErr:console.log("isErr:"),console.log(""),console.log("Returns true when the given value is a Err object, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isErr(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#iserr");
break;case a.isJust:console.log("isJust:"),console.log(""),console.log("Returns true if the given value is a Just object, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isJust(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isjust");break;case a.isMaybe:console.log("isMaybe:"),console.log(""),console.log("Returns true when the given value is a Maybe object, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isMaybe(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#ismaybe");break;case a.isNothing:console.log("isNothing:"),console.log(""),console.log("Returns true if the given value is the Nothing object, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isNothing(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isnothing");break;case a.isNull:console.log("isNull:"),console.log(""),console.log("Returns true if the given object is null, false otherwise"),console.log(""),console.log(""),console.log("Usage: var x = isNull(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isnull");break;case a.isNumber:console.log("isNumber:"),console.log(""),console.log('Returns true if typeof the given value equals "number", false otherwise.'),console.log(""),console.log(""),console.log("Usage: var x = isNumber(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isnumber");break;case a.isObject:console.log("isObject:"),console.log(""),console.log('Returns true if typeof the given value equals "object", false otherwise.'),console.log(""),console.log(""),console.log("Usage: var x = isObject(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isobject");break;case a.isOk:console.log("isOk:"),console.log(""),console.log("Returns true when the given value is a Ok object, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isOk(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isok");break;case a.isPair:console.log("isPair:"),console.log(""),console.log("Returns true if the given value is a Pair, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isPair(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#ispair");break;case a.isPrototypeOf:console.log("isPrototypeOf:"),console.log(""),console.log("A curried wrapper around Object.prototype.isPrototypeOf. Takes two objects: the prototype object, and the object"),console.log("whose prototype chain you wish to check.  Returns true if protoObj is in the prototype chain of o."),console.log(""),console.log(""),console.log("Usage: var x = isPrototypeOf(protoObject, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isprototypeof");break;case a.isRealObject:console.log("isRealObject:"),console.log(""),console.log("Returns true if the value is a real Javascript object, i.e. an object for which funkierJS.isObject(a) === true"),console.log("and funkierJS.isNull(a) === false and funkierJS.isArray(a) === false."),console.log(""),console.log(""),console.log("Usage: var x = isRealObject(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isrealobject");break;case a.isResult:console.log("isResult:"),console.log(""),console.log("Returns true when the given value is a Result object, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = isResult(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isresult");break;case a.isString:console.log("isString:"),console.log(""),console.log('Returns true if typeof the given value equals "string", false otherwise.'),console.log(""),console.log(""),console.log("Usage: var x = isString(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isstring");break;case a.isUndefined:console.log("isUndefined:"),console.log(""),console.log('Returns true if typeof the given value equals "undefined", false otherwise.'),console.log(""),console.log(""),console.log("Usage: var x = isUndefined(a)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#isundefined");break;case a.keyValues:console.log("keyValues:"),console.log(""),console.log("Takes an object, and returns an array containing 2-element arrays. The first element of each sub-array is the name"),console.log("of a property from the object, and the second element is the value of the property. This function only returns"),console.log("key-value pairs for the object's own properties. Returns an empty array for non-objects.  The order of the values"),console.log("is not defined."),console.log(""),console.log(""),console.log("Usage: var x = keyValues(obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#keyvalues");break;case a.keys:console.log("keys:"),console.log(""),console.log("A wrapper around Object.keys. Takes an object, and returns an array containing the names of the object's own"),console.log("properties. Returns an empty array for non-objects."),console.log(""),console.log(""),console.log("Usage: var x = keys(obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#keys");break;case a.leftShift:console.log("leftShift:"),console.log(""),console.log("A wrapper around the left shift (<<) operator."),console.log(""),console.log(""),console.log("Usage: var x = leftShift(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#leftshift");break;case a.lessThan:console.log("lessThan:"),console.log(""),console.log("Synonyms: lt"),console.log(""),console.log("A wrapper around the less than (<) operator."),console.log(""),console.log(""),console.log("Usage: var x = lessThan(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#lessthan");break;case a.lessThanEqual:console.log("lessThanEqual:"),console.log(""),console.log("Synonyms: lte"),console.log(""),console.log("A wrapper around the less than or equal (<=) operator."),console.log(""),console.log(""),console.log("Usage: var x = lessThanEqual(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#lessthanequal");break;case a.log:console.log("log:"),console.log(""),console.log("Returns the logarithm of y in the given base x. Note that this function uses the change of base formula, so may"),console.log("be subject to rounding errors."),console.log(""),console.log(""),console.log("Usage: var x = log(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#log");break;case a.makeDateFromMilliseconds:console.log("makeDateFromMilliseconds:"),console.log(""),console.log("A wrapper around calling the Date constructor with a single numeric argument. Throws a TypeError when called with a"),console.log("non-numeric argument. Returns a new Date object whose value represents the date which is that many elapsed"),console.log("milliseconds since the epoch."),console.log(""),console.log(""),console.log("Usage: var x = makeDateFromMilliseconds(milliseconds)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makedatefrommilliseconds");break;case a.makeDateFromString:console.log("makeDateFromString:"),console.log(""),console.log("A wrapper around calling the Date constructor with a single string argument. Throws a TypeError when called with"),console.log("a non-string argument, or a string that cannot be parsed as a date. Returns a new Date object whose value"),console.log("represents that given in the string."),console.log(""),console.log(""),console.log("Usage: var x = makeDateFromString(dateString)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makedatefromstring");break;case a.makeDayDate:console.log("makeDayDate:"),console.log(""),console.log("A curried wrapper around calling the Date constructor with three arguments: the year, the month and the day. No"),console.log("validation or type-checking occurs on the parameters. Excess arguments are ignored. All other fields in the Date"),console.log("are initialized to zero. Returns the new Date."),console.log(""),console.log(""),console.log("Usage: var x = makeDayDate(year, month, day)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makedaydate");break;case a.makeHourDate:console.log("makeHourDate:"),console.log(""),console.log("A curried wrapper around calling the Date constructor with four arguments: the year, the month, the day and the"),console.log("hour. No validation or type-checking occurs on the parameters. Excess arguments are ignored. All other fields in"),console.log("the Date are initialized to zero. Returns the new Date."),console.log(""),console.log(""),console.log("Usage: var x = makeHourDate(year, month, day, hour)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makehourdate");break;case a.makeMaybeReturner:console.log("makeMaybeReturner:"),console.log(""),console.log("Takes a function f. Returns a new function with the same arity as f. When called, the new function calls the"),console.log("original. If the function f throws during execution, then the Nothing object is returned. Otherwise the result of"),console.log("the function is wrapped in a Just and returned."),console.log(""),console.log(""),console.log("Usage: var x = makeMaybeReturner(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makemaybereturner");break;case a.makeMillisecondDate:console.log("makeMillisecondDate:"),console.log(""),console.log("A curried wrapper around calling the Date constructor with seven arguments: the year, the month, the day, the"),console.log("hour, the minute, the seconds, and the milliseconds. No validation or type-checking occurs on the parameters."),console.log("Returns the new Date."),console.log(""),console.log(""),console.log("Usage: var x = makeMillisecondDate(year, month, day, hour, minute, second, millisecond)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makemilliseconddate");break;case a.makeMinuteDate:console.log("makeMinuteDate:"),console.log(""),console.log("A curried wrapper around calling the Date constructor with five arguments: the year, the month, the day, the hour"),console.log("and the minute. No validation or type-checking occurs on the parameters. Excess arguments are ignored. All other"),console.log("fields in the Date are initialized to zero. Returns the new Date."),console.log(""),console.log(""),console.log("Usage: var x = makeMinuteDate(year, month, day, hour, minute)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makeminutedate");break;case a.makeMonthDate:console.log("makeMonthDate:"),console.log(""),console.log("A curried wrapper around calling the Date constructor with two arguments: the year and the month. No validation"),console.log("or type-checking occurs on the parameters. Excess arguments are ignored. All other fields in the Date are"),console.log("initialized to zero, with the exception of the day, which is initialized to 1. Returns the new Date."),console.log(""),console.log(""),console.log("Usage: var x = makeMonthDate(year, month)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makemonthdate");break;case a.makeResultReturner:console.log("makeResultReturner:"),console.log(""),console.log("Takes a function f. Returns a new function with the same arity as f. When called, the new function calls the"),console.log("original. If the function f throws during execution, then the exception will be caught, and an Err object"),console.log("wrapping the exception is returned. Otherwise the result of the function is wrapped in an Ok and returned."),console.log(""),console.log(""),console.log("Usage: var x = makeResultReturner(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makeresultreturner");break;case a.makeSecondDate:console.log("makeSecondDate:"),console.log(""),console.log("A curried wrapper around calling the Date constructor with six arguments: the year, the month, the day, the hour,"),console.log("the minute, and the seconds. No validation or type-checking occurs on the parameters. Excess arguments are ignored."),console.log("All other fields in the Date are initialized to zero. Returns the new Date."),console.log(""),console.log(""),console.log("Usage: var x = makeSecondDate(year, month, day, hour, minute, second)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#makeseconddate");break;case a.max:console.log("max:"),console.log(""),console.log("A curried wrapper around Math.max. Takes exactly two arguments."),console.log(""),console.log(""),console.log("Usage: var x = max(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#max");break;case a.maybeExtract:console.log("maybeExtract:"),console.log(""),console.log("Synonyms: safeExtract, maybeTap, safeTap"),console.log(""),console.log("Extracts the given property from the given object, and wraps it in a Just value. When the property is"),console.log("not present, either in the object, or its prototype chain, then Nothing is returned."),console.log(""),console.log(""),console.log("Usage: var x = maybeExtract(prop, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#maybeextract");break;case a.min:console.log("min:"),console.log(""),console.log("A curried wrapper around Math.min. Takes exactly two arguments."),console.log(""),console.log(""),console.log("Usage: var x = min(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#min");break;case a.modify:console.log("modify:"),console.log(""),console.log("Synonyms: modifyProp"),console.log(""),console.log("Sets the given property to the given value on the given object, providing it exists, and returns the object."),console.log("Equivalent to evaluating o[prop] = value. The property will not be created when it doesn't exist on the object."),console.log("Throws when the property is not writable, when it has no setter function, or when the object is frozen."),console.log(""),console.log(""),console.log("Usage: var x = modify(prop, val, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#modify");break;case a.multiply:console.log("multiply:"),console.log(""),console.log("A wrapper around the multiplication operator."),console.log(""),console.log(""),console.log("Usage: var x = multiply(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#multiply");break;case a.not:console.log("not:"),console.log(""),console.log("A wrapper around the logical not (!) operator. Returns the logical negation of the given argument."),console.log(""),console.log(""),console.log("Usage: var x = not(b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#not");break;case a.notEqual:console.log("notEqual:"),console.log(""),console.log("Synonyms: notEquals"),console.log(""),console.log("A wrapper around the inequality (!=) operator."),console.log(""),console.log(""),console.log("Usage: var x = notEqual(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#notequal");break;case a.notPred:console.log("notPred:"),console.log(""),console.log("Takes a unary predicate function, and returns a new unary function that, when called, will call the original"),console.log("function with the given argument, and return the negated result. Throws if f is not a function, or has an"),console.log("arity other than 1."),console.log(""),console.log(""),console.log("Usage: var x = notPred(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#notpred");break;case a.objectCurry:console.log("objectCurry:"),console.log(""),console.log("Given a function, returns a curried function which calls the underlying with the execution context active when the"),console.log("first arguments are supplied. This means that when partially applying the function, the resulting functions will"),console.log("have their execution context permanently bound. This method of binding is designed for currying functions that"),console.log("exist on an object's prototype. The function will be only called when sufficient arguments have been supplied."),console.log("Superfluous arguments are discarded. The resulting function may be called without any arguments even when it has"),console.log("non-zero arity, for the purposes of establishing an execution context (usually when passing the function to some"),console.log("other function-manipulating function); however the partial applications of the result will throw if they"),console.log("require at least one argument, but are invoked without any. objectCurry throws if its parameter is not a"),console.log("function. The resulting function will throw if invoked with an undefined execution context."),console.log(""),console.log(""),console.log("Usage: var x = objectCurry(f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#objectcurry");break;case a.objectCurryWithArity:console.log("objectCurryWithArity:"),console.log(""),console.log("Given an arity and function, returns a curried function which calls the underlying with the execution context"),console.log("active when the first arguments are supplied. This means that when partially applying the function, the"),console.log("resulting functions will have their execution context permanently bound. This method of binding is designed for"),console.log("currying functions that exist on an object's prototype. The function will be only called when the specified number"),console.log("of arguments have been supplied. Superfluous arguments are discarded. If the resulting function has non-zero"),console.log("length, it may be called without any arguments for the purpose of establishing an execution context; however"),console.log("its partial applications throw if they require at least one argument, but are invoked without any."),console.log("objectCurryWithArity throws if the arity is not a natural number or if the second parameter is not a function."),console.log("The resulting function will throw if invoked with an undefined execution context."),console.log(""),console.log(""),console.log("Usage: var x = objectCurryWithArity(n, f)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#objectcurrywitharity");break;case a.odd:console.log("odd:"),console.log(""),console.log("Given a number, returns true if it is not divisible by 2, and false otherwise."),console.log(""),console.log(""),console.log("Usage: var x = odd(x)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#odd");break;case a.or:console.log("or:"),console.log(""),console.log("A wrapper around the logical or (||) operator. Returns the logical or of the given arguments"),console.log(""),console.log(""),console.log("Usage: var x = or(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#or");break;case a.orPred:console.log("orPred:"),console.log(""),console.log("Takes two unary predicate functions, and returns a new unary function that, when called, will call the original"),console.log("functions with the given argument, and logically or their results, returning that value. Throws if either"),console.log("argument is not a function of arity 1."),console.log(""),console.log(""),console.log("Usage: var x = orPred(f1, f2)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#orpred");break;case a.parseInt:console.log("parseInt:"),console.log(""),console.log("A curried wrapper around parseInt when called with one argument. Takes a string and attempts to convert it"),console.log("assuming it represents a number in base 10. Returns NaN if the string does not represent a valid number in base"),console.log("10."),console.log(""),console.log(""),console.log("Usage: var x = parseInt(s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#parseint");break;case a.rem:console.log("rem:"),console.log(""),console.log("A wrapper around the remainder (%) operator."),console.log(""),console.log(""),console.log("Usage: var x = rem(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#rem");break;case a.rightShift:console.log("rightShift:"),console.log(""),console.log("A wrapper around the right shift (>>) operator."),console.log(""),console.log(""),console.log("Usage: var x = rightShift(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#rightshift");break;case a.rightShiftZero:console.log("rightShiftZero:"),console.log(""),console.log("A wrapper around the left shift (>>>) operator."),console.log(""),console.log(""),console.log("Usage: var x = rightShiftZero(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#rightshiftzero");break;case a.safeCreateProp:console.log("safeCreateProp:"),console.log(""),console.log("Synonyms: maybeCreate"),console.log(""),console.log("Creates the given property to the given value on the given object, returning the object wrapped in a Just."),console.log("Equivalent to evaluating o[prop] = value. The property will be not be modified if it already exists; in"),console.log("that case Nothing will be returned. Additionally, Nothing will be returned when the object is frozen, sealed, or"),console.log("cannot be extended. Note that the property will be successfully created when it already exists, but only in the"),console.log("prototype chain."),console.log(""),console.log(""),console.log("Usage: var x = safeCreateProp(prop, val, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#safecreateprop");break;case a.safeDeleteProp:console.log("safeDeleteProp:"),console.log(""),console.log("Synonyms: maybeDelete"),console.log(""),console.log("Deletes the given property from the given the given object, returning the object wrapped as a Just"),console.log("value. Equivalent to evaluating delete o[prop]. When the property is not configurable (either due to the"),console.log("individual descriptor or the object being frozen or sealed) then Nothing will be returned."),console.log(""),console.log(""),console.log("Usage: var x = safeDeleteProp(prop, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#safedeleteprop");break;case a.safeModify:console.log("safeModify:"),console.log(""),console.log("Synonyms: maybeModify, maybeModifyProp, safeModifyProp"),console.log(""),console.log("Sets the given property to the given value on the given object, providing it exists, and returns the object,"),console.log("wrapped in a Just value when successful. Equivalent to evaluating o[prop] = value. The property will"),console.log("not be created when it doesn't exist on the object; nor will it be amended when the property is not writable, when"),console.log("it has no setter function, or when the object is frozen. In such cases, Nothing will be returned."),console.log(""),console.log(""),console.log("Usage: var x = safeModify(prop, val, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#safemodify");break;case a.safeSet:console.log("safeSet:"),console.log(""),console.log("Synonyms: maybeSet, maybeSetProp, safeSetProp"),console.log(""),console.log("Sets the given property to the given value on the given object, returning the object wrapped in a Just"),console.log("value when successful. Equivalent to evaluating o[prop] = value. The property will be created if it doesn't exist"),console.log("on the object. If unable to modify or create the property, then Nothing will be returned."),console.log(""),console.log(""),console.log("Usage: var x = safeSet(prop, val, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#safeset");break;case a.sectionLeft:console.log("sectionLeft:"),console.log(""),console.log("Partially applies the binary function f with the given argument x, with x being supplied as the first argument"),console.log("to f. The given function f will be curried if necessary. Throws if f is not a binary function."),console.log(""),console.log(""),console.log("Usage: var x = sectionLeft(f, x)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#sectionleft");break;case a.sectionRight:console.log("sectionRight:"),console.log(""),console.log("Partially applies the binary function f with the given argument x, with x being supplied as the second argument"),console.log("to f. The given function f will be curried if necessary. Throws if f is not a binary function."),console.log(""),console.log(""),console.log("Usage: var x = sectionRight(f, x)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#sectionright");break;case a.set:console.log("set:"),console.log(""),console.log("Synonyms: setProp"),console.log(""),console.log("Sets the given property to the given value on the given object, returning the object. Equivalent to evaluating"),console.log("o[prop] = value. The property will be created if it doesn't exist on the object. Throws when the property is"),console.log("not writable, when it has no setter function, when the object is frozen, or when it is sealed and the property"),console.log("is not already present."),console.log(""),console.log(""),console.log("Usage: var x = set(prop, val, obj)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#set");break;case a.setDayOfMonth:console.log("setDayOfMonth:"),console.log(""),console.log("A wrapper around Date.prototype.setDate. Takes a value between 1 and 31, and a Date object, and sets the day of"),console.log("the month to the given value. Invalid values will cause a change in other fields: for example, changing the day to"),console.log("31 in a month with 30 days will increment the month, which may in turn increment the year. Returns the given 'Date`"),console.log("object."),console.log(""),console.log(""),console.log("Usage: var x = setDayOfMonth(day, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setdayofmonth");break;case a.setFullYear:console.log("setFullYear:"),console.log(""),console.log("A wrapper around Date.prototype.setFullYear. Takes a value and a Date object, and sets the year to the given"),console.log("value. This may cause a change in other fields: for example, setting the year when the month and day represent"),console.log("February 29 respectively may cause those values to change to March 1 if the new year is not a leap year."),console.log("Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setFullYear(year, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setfullyear");break;case a.setHours:console.log("setHours:"),console.log(""),console.log("A wrapper around Date.prototype.setHours. Takes a value between 0 and 23 representing the hour of the day, and"),console.log("a Date object, and sets the hour to the given value. Invalid values will cause a change in other fields: if the"),console.log("value > 23, then the day will be incremented by hours div 24. This may in turn cause a cascade of increments"),console.log("to other fields. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setHours(hours, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#sethours");break;case a.setMilliseconds:console.log("setMilliseconds:"),console.log(""),console.log("A wrapper around Date.prototype.setMilliseconds. Takes a value between 0 and 999 representing the milliseconds,"),console.log("and a Date object, and sets the milliseconds to the given value. Invalid values will cause a change in other"),console.log("fields: if the value > 999, then the seconds will be incremented by milliseconds div 1000. This may in turn cause"),console.log("a cascade of increments to other fields. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setMilliseconds(milliseconds, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setmilliseconds");break;case a.setMinutes:console.log("setMinutes:"),console.log(""),console.log("A wrapper around Date.prototype.setMinutes. Takes a value between 0 and 59 representing the minutes, and a"),console.log("Date object, and sets the minutes to the given value. Invalid values will cause a change in other fields: if the"),console.log("value > 59, then the hours will be incremented by minutes div 60. This may in turn cause a cascade of increments"),console.log("to other fields. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setMinutes(minutes, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setminutes");break;case a.setMonth:console.log("setMonth:"),console.log(""),console.log("A wrapper around Date.prototype.setMonth. Takes a value between 0 and 11 representing the month, and a Date"),console.log("object, and sets the month to the given value. Invalid values will cause a change in other fields: if the"),console.log("value > 11, then the year will be incremented by month div 12. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setMonth(month, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setmonth");break;case a.setSeconds:console.log("setSeconds:"),console.log(""),console.log("A wrapper around Date.prototype.setSeconds. Takes a value between 0 and 59 representing the seconds, and a"),console.log("Date object, and sets the seconds to the given value. Invalid values will cause a change in other fields: if the"),console.log("value > 59, then the minutes will be incremented by seconds div 60. This may in turn cause a cascade of increments"),console.log("to other fields. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setSeconds(seconds, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setseconds");break;case a.setTimeSinceEpoch:console.log("setTimeSinceEpoch:"),console.log(""),console.log("A wrapper around Date.prototype.setTime. Takes a value representing the number of seconds since midnight,"),console.log("January 1, 1970 and a date. Simultaneously sets all of the fields of the given date to represent the date and"),console.log("time that is that many seconds since the epoch. Returns the given Date."),console.log(""),console.log(""),console.log("Usage: var x = setTimeSinceEpoch(milliseconds, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#settimesinceepoch");break;case a.setUTCDayOfMonth:console.log("setUTCDayOfMonth:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCDate. Takes a value between 1 and 31, and a Date object, and sets the day"),console.log("of the month to the local equivalent of the given value. Invalid values will cause a change in other fields: for"),
console.log("example, changing the day to 31 in a month with 30 days will increment the month, which may in turn increment the"),console.log("year. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCDayOfMonth(day, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutcdayofmonth");break;case a.setUTCFullYear:console.log("setUTCFullYear:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCFullYear. Takes a value and a Date object, and sets the year to the local"),console.log("equivalent of the given value. This may cause a change in other fields: for example, setting the year when the"),console.log("month and day represent February 29 respectively may cause those values to change to March 1 if the new year is not"),console.log("a leap year. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCFullYear(year, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutcfullyear");break;case a.setUTCHours:console.log("setUTCHours:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCHours. Takes a value between 0 and 23 representing the hour of the day, and"),console.log("a Date object, and sets the hour to the local equivalent of the given value. Invalid values will cause a change"),console.log("in other fields: if the value > 23, then the day will be incremented by hours div 24. This may in turn cause a"),console.log("cascade of increments to other fields. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCHours(hours, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutchours");break;case a.setUTCMilliseconds:console.log("setUTCMilliseconds:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCMilliseconds. Takes a value between 0 and 999 representing the"),console.log("milliseconds, and a Date object, and sets the milliseconds to the local equivalent of the given value. Invalid"),console.log("values will cause a change in other fields: if the value > 999, then the seconds will be incremented by"),console.log("milliseconds div 1000. This may in turn cause a cascade of increments to other fields. Returns the given Date"),console.log("object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCMilliseconds(milliseconds, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutcmilliseconds");break;case a.setUTCMinutes:console.log("setUTCMinutes:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCMinutes. Takes a value between 0 and 59 representing the minutes, and a"),console.log("Date object, and sets the minutes to the local equivalent of the given value. Invalid values will cause a change"),console.log("in other fields: if the value > 59, then the hours will be incremented by minutes div 60. This may in turn cause a"),console.log("cascade of increments to other fields. Returns the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCMinutes(minutes, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutcminutes");break;case a.setUTCMonth:console.log("setUTCMonth:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCMonth. Takes a value between 0 and 11 representing the month, and a"),console.log("Date object, and sets the month to the local equivalent of the given value. Invalid values will cause a change"),console.log("in other fields: if the value > 11, then the year will be incremented by month div 12. Returns the given Date"),console.log("object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCMonth(month, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutcmonth");break;case a.setUTCSeconds:console.log("setUTCSeconds:"),console.log(""),console.log("A wrapper around Date.prototype.setUTCSeconds. Takes a value between 0 and 59 representing the seconds, and a"),console.log("Date object, and sets the seconds to the local equivalent of the given value. Invalid values will cause a change"),console.log("in other fields: if the value > 59, then the minutes will be incremented by seconds div 60. This may in turn cause"),console.log("a cascade of increments to other fields. Returns the local equivalent of the given Date object."),console.log(""),console.log(""),console.log("Usage: var x = setUTCSeconds(seconds, d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#setutcseconds");break;case a.snd:console.log("snd:"),console.log(""),console.log("Synonyms: second"),console.log(""),console.log("Accessor function for Pair tuples. Returns the second value that was supplied to the Pair"),console.log("constructor. Throws if called with a non-pair value."),console.log(""),console.log(""),console.log("Usage: var x = snd(p)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#snd");break;case a.strictEquals:console.log("strictEquals:"),console.log(""),console.log("A wrapper around the strict equality (===) operator."),console.log(""),console.log(""),console.log("Usage: var x = strictEquals(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#strictequals");break;case a.strictNotEqual:console.log("strictNotEqual:"),console.log(""),console.log("Synonyms: strictNotEquals, strictInequality"),console.log(""),console.log("A wrapper around the strict inequality (!==) operator."),console.log(""),console.log(""),console.log("Usage: var x = strictNotEqual(a, b)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#strictnotequal");break;case a.stringToInt:console.log("stringToInt:"),console.log(""),console.log("Synonyms: parseIntInBase"),console.log(""),console.log("A curried wrapper around parseInt when called with two arguments. Takes a base between 2 and 36, and a string, and"),console.log("attempts to convert the string assuming it represents a number in the given base. Returns NaN if the string does"),console.log("not represent a valid number in the given base."),console.log(""),console.log(""),console.log("Usage: var x = stringToInt(base, s)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#stringtoint");break;case a.subtract:console.log("subtract:"),console.log(""),console.log("A wrapper around the subtraction operator."),console.log(""),console.log(""),console.log("Usage: var x = subtract(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#subtract");break;case a.toBaseAndString:console.log("toBaseAndString:"),console.log(""),console.log("Synonyms: toBaseAndRadix"),console.log(""),console.log("A curried wrapper around Number.prototype.toString. Takes a base between 2 and 36, and a number. Returns a string"),console.log("representing the given number in the given base."),console.log(""),console.log(""),console.log("Usage: var x = toBaseAndString(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tobaseandstring");break;case a.toDateString:console.log("toDateString:"),console.log(""),console.log("A wrapper around Date.prototype.toDateString. Takes a Date object, and returns a string representing the date"),console.log("portion of the object."),console.log(""),console.log(""),console.log("Usage: var x = toDateString(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#todatestring");break;case a.toEpochMilliseconds:console.log("toEpochMilliseconds:"),console.log(""),console.log("A wrapper around Date.prototype.getTime. Takes a Date object, and returns the number of milliseconds elapsed"),console.log("since midnight, January 1 1970."),console.log(""),console.log(""),console.log("Usage: var x = toEpochMilliseconds(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#toepochmilliseconds");break;case a.toExponential:console.log("toExponential:"),console.log(""),console.log("A curried wrapper around Number.prototype.toExponential. Takes the number of digits after the decimal point"),console.log("(which should be between 0 and 20), and a number. Returns a string representing the number in exponential notation,"),console.log("with the specified number of places after the decimal point."),console.log(""),console.log(""),console.log("Usage: var x = toExponential(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#toexponential");break;case a.toFixed:console.log("toFixed:"),console.log(""),console.log("A curried wrapper around Number.prototype.toFixed. Takes the number of digits after the decimal point (which"),console.log("should be between 0 and 20), and a number. Returns a string representing the number but with the specified number"),console.log("of places after the decimal point."),console.log(""),console.log(""),console.log("Usage: var x = toFixed(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tofixed");break;case a.toISOString:console.log("toISOString:"),console.log(""),console.log("A wrapper around Date.prototype.toISOString. Takes a Date object, and returns a string representation of the"),console.log("date in ISO format."),console.log(""),console.log(""),console.log("Usage: var x = toISOString(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#toisostring");break;case a.toLocaleDateString:console.log("toLocaleDateString:"),console.log(""),console.log("A wrapper around Date.prototype.toLocaleDateString. Takes a Date object, and  a string representing the date"),console.log("portion of the object, formatted according to locale conventions."),console.log(""),console.log(""),console.log("Usage: var x = toLocaleDateString(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#tolocaledatestring");break;case a.toPrecision:console.log("toPrecision:"),console.log(""),console.log("A curried wrapper around Number.prototype.toPrecision. Takes the number of digits significant digits (which"),console.log("should be between 1 and 21), and a number. Returns a string representing the number with the specified number"),console.log("of significant digits."),console.log(""),console.log(""),console.log("Usage: var x = toPrecision(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#toprecision");break;case a.toTimeString:console.log("toTimeString:"),console.log(""),console.log("A wrapper around Date.prototype.toTimeString. Takes a Date object, and returns a string representing the time"),console.log("portion of the object."),console.log(""),console.log(""),console.log("Usage: var x = toTimeString(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#totimestring");break;case a.toUTCString:console.log("toUTCString:"),console.log(""),console.log("A wrapper around Date.prototype.toUTCString. Takes a Date object, and returns a string representation of the"),console.log("equivalent date in UTC."),console.log(""),console.log(""),console.log("Usage: var x = toUTCString(d)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#toutcstring");break;case a.xor:console.log("xor:"),console.log(""),console.log("A wrapper around the logical xor operator. Returns the logical xor of the given arguments"),console.log(""),console.log(""),console.log("Usage: var x = xor(x, y)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#xor");break;case a.xorPred:console.log("xorPred:"),console.log(""),console.log("Takes two unary predicate functions, and returns a new unary function that, when called, will call the original"),console.log("functions with the given argument, and logically xor their results, returning that value. Throws if either"),console.log("argument is not a function of arity 1."),console.log(""),console.log(""),console.log("Usage: var x = xorPred(f1, f2)"),console.log(""),console.log("See https://graememcc.github.io/funkierJS/docs/index.html#xorpred");break;default:console.log("No help available")}};a.help=b}}()},{}],14:[function(a,b,c){b.exports=function(){"use strict";var a=function(a,b){b=b||{};var c=b.errorMessage||"Value is not an integer";if(b.strict&&"number"!=typeof a)throw new TypeError(c);if(a-=0,isNaN(a)||!isFinite(a))throw new TypeError(c);if(a!==Math.round(a))throw new TypeError(c);return a},b=function(b,c){c=c||{};var d=c.errorMessage||"Value is not a positive integer",e=Object.create(c);if(e.errorMessage=d,b=a(b,e),0>b)throw new TypeError(d);return b},c=function(a,b){b=b||{};var c=b.strict||!1,d=b.allowNull||!1,e=c?["object"]:["string","function","object"];return c&&Array.isArray(a)?!1:null===a&&d||null!==a&&-1!==e.indexOf(typeof a)},d=function(a,b){b=b||{};var d=b.message||"Value is not an object";b.allowNull||!1;if(!c(a,b))throw new TypeError(d);return a},e=function(a,b){if(b=b||!1,"string"==typeof a)return!b;if("object"!=typeof a||null===a)return!1;if(Array.isArray(a))return!0;if(!a.hasOwnProperty("length"))return!1;var c=a.length;return 0===c||a.hasOwnProperty("0")&&a.hasOwnProperty(""+(c-1))},f=function(a){switch(typeof a){case"number":case"boolean":case"undefined":return""+a;case"string":return"'"+a+"'";case"function":return a.toString();case"object":return null===a?"null":Array.isArray(a)?"["+a.join(", ")+"]":"{"+a.toString()+"}";default:return a.toString()}};return{checkIntegral:a,checkObjectLike:d,checkPositiveIntegral:b,isArrayLike:e,isObjectLike:c,valueStringifier:f}}()},{}]},{},[12])(12)});